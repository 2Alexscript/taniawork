<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:components="components.*"
		backgroundAlpha="1"
		backgroundColor="#ffffff"
		contentBackgroundAlpha="1"
		contentBackgroundColor="#ffffff"
		viewActivate="init()"
		actionBarVisible="false">
	<fx:Script source="../func/global.as"/>
	<fx:Script>
		<![CDATA[
			import flash.display.Bitmap;
			import flash.display.Graphics;
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			import flash.media.StageWebView;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import spark.events.IndexChangeEvent;
			import spark.filters.GlowFilter;
			import spark.primitives.Graphic;
			import components.modItem;
			import views.MenuReviews;
			import views.StoresDescription;
			import views.ViewReview;
			[Bindable]
			public var googleTravelUrl:String = "";
			[Bindable]
			public var picture:String = "";
			[Bindable]
			public var dragBar:Sprite;
			[Bindable]
			public var dragBitmap:Bitmap;
			[Bindable]
			public var stageWeb:StageWebView;
			[Bindable]
			public var topreviews:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var topratedrecentval:uint = 1;
			[Bindable]
			public var recentreviews:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var modifications:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var eatenstatus:uint = 0;
			public function init():void
			{
				dishinfosection.removeAllElements();
				if (Capabilities.version.indexOf('IOS') > -1){
					if (getDPIHeight() == 320){
						backbutton.top = 20;
					}
					else if (getDPIHeight() == 160){
						backbutton.top = 10;
					}
				}
				
				backbutton.visible = true;
				
				
				didlistclick = false;
				setLoginVars();			
				scroller.visible = true;
			
				var ratingstring:String = data.rating.toString();
				var ratingnumber:Number = Number(data.rating);
				if (ratingnumber == 0){
					ratinglabel.text = "-";
				}
				else if (ratingnumber >= 10){
					ratingnumber = 10;
					ratinglabel.text = "10";
				}
				else {
					ratinglabel.text = ratingnumber.toPrecision(2).toString();
				}
				
				if ((data.picture == "None")||(data.picture == "")||(data.picture == null)||(data.picture == "null")){
					img1.source = "assets/"+getDPIHeight().toString()+"/dish_place_wide.png";	
					reviewPopupGroup.itemimg = "assets/"+getDPIHeight().toString()+"/dish_place_square.png";	
				}
				else {
					reviewPopupGroup.itemimg = data.picture;
				}
				img1.visible = true;
				
				reviewPopupGroup.itemid = data.id;
				reviewPopupGroup.type = "menu";
				reviewPopupGroup.email = emailGo;
				reviewPopupGroup.locationid = data.locationid;
				reviewPopupGroup.itemname = data.name;
				reviewPopupGroup.businessname = data.business_name;
				reviewPopupGroup.mypic = pictureGo;
				
				
				sharePopup.itemid = data.id;
				sharePopup.email = emailGo;
				sharePopup.locationid = data.locationid;
				sharePopup.menuname = data.name;
				sharePopup.businessname = data.business_name;
				sharePopup.mypic = pictureGo;

				getMenuItemInformation.send();
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}

			protected function descriptionclick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (descriptiontext.maxDisplayedLines == 4){
					descriptiontext.maxDisplayedLines = 30;
				}
				else {
					descriptiontext.maxDisplayedLines = 4;
				}
				
			}
			protected function additionclick(event:MouseEvent):void
			{
				if (additiontext.maxDisplayedLines == 4){
					additiontext.maxDisplayedLines = 30;
				}
				else {
					additiontext.maxDisplayedLines = 4;
				}
				
			}
		
			public var additiontext:Label = new Label();
			public var descriptiontext:Label = new Label();
			public function afterGetMenuInformation(ev:ResultEvent):void {
				reviewPopupGroup.reviewText.text = "";
				topreviews = new ArrayCollection();
				recentreviews = new ArrayCollection();
				modifications = new ArrayCollection();
				
				
				if (ev.result[0].eatinthis == 0){
					eatenimage.source = eatenthis2;
					eatenstatus = 0;
				}
				else {
					eatenimage.source = eatenthis1;
					eatenstatus = 1;
				}
				eatenimage.visible = true;
				
				
				
				try{
					var tempdtext:String =  ev.result[0].results5.result5.description;
					if (tempdtext.length > 0){
						sharePopup.descriptiontext = tempdtext;
						
						descriptiontext = new Label();
						descriptiontext.styleName = "textsize0";
						descriptiontext.setStyle("paddingLeft",30/(320/Capabilities.screenDPI));
						descriptiontext.setStyle("paddingRight",30/(320/Capabilities.screenDPI));
						descriptiontext.setStyle("color",0x4d4d4d);
						descriptiontext.addEventListener(MouseEvent.CLICK, descriptionclick);
						descriptiontext.maxDisplayedLines = 4;
						descriptiontext.setStyle("verticalAlign","middle");
						descriptiontext.setStyle("lineHeight",35/(320/Capabilities.screenDPI));
						descriptiontext.text = tempdtext+".";
						descriptiontext.width = this.width;
						
						var gr1:Group = new Group();
						gr1.percentWidth = 100;
						var li1:Line = new Line();
						li1.left = 30/(320/Capabilities.screenDPI);
						li1.right = 0;
						li1.bottom = 0;
						
						var stroke1:SolidColorStroke = new SolidColorStroke();
						stroke1.color = 0xb2b2b2;
						stroke1.weight = 1/(320/Capabilities.screenDPI);
						li1.stroke = stroke1;
						
						
						gr1.addElement(li1);
						dishinfosection.addElement(descriptiontext);
						dishinfosection.addElement(gr1);
						
					}
				}
				catch(e:Error){}
				
				
				try{
					var tempatext:String =  ev.result[0].results5.result5.additions;
					if (tempatext.length > 0){
						additiontext = new Label();
						additiontext.styleName = "textsize0";
						additiontext.setStyle("paddingLeft",30/(320/Capabilities.screenDPI));
						additiontext.setStyle("paddingRight",30/(320/Capabilities.screenDPI));
						additiontext.setStyle("color",0x4d4d4d);
						additiontext.addEventListener(MouseEvent.CLICK, additionclick);
						additiontext.maxDisplayedLines = 4;
						additiontext.setStyle("verticalAlign","middle");
						additiontext.setStyle("lineHeight",35/(320/Capabilities.screenDPI));
						additiontext.text = tempatext;
						additiontext.width = this.width;
						
						var gr2:Group = new Group();
						gr2.percentWidth = 100;
						var li2:Line = new Line();
						li2.left = 30/(320/Capabilities.screenDPI);
						li2.right = 0;
						li2.bottom = 0;
						
						var stroke2:SolidColorStroke = new SolidColorStroke();
						stroke2.color = 0xb2b2b2;
						stroke2.weight = 1/(320/Capabilities.screenDPI);
						li2.stroke = stroke2;
						
						
						gr2.addElement(li2);
						dishinfosection.addElement(additiontext);
						dishinfosection.addElement(gr2);
						
					}
				}
				catch(e:Error){}

				try{			
					topreviews = ev.result[0].results.result;	
				}
				catch(e:Error){
					try{
						
						topreviews.addItem(ev.result[0].results.result);
					}
					catch(e:Error){
					}
				}
				
				try{			
					recentreviews = ev.result[0].results2.result2;	
				}
				catch(e:Error){
					try{
						
						recentreviews.addItem(ev.result[0].results2.result2);
					}
					catch(e:Error){
					}
				}
				
				try{			
					modifications = ev.result[0].results4.result4;	
					modList.dataProvider = modifications;
				}
				catch(e:Error){
					try{
						
						modifications.addItem(ev.result[0].results4.result4);
						modList.dataProvider = modifications;
					}
					catch(e:Error){
					}
				}
				
				//	modList.dataProvider = modifications;
				reviewList.dataProvider = topreviews;
				reviewlabel.text = 'Reviews ('+topreviews.length.toString()+')';
				sharePopup.bmpData = img1.bitmapData;
			}
			public function topratedrecentclick(event:MouseEvent):void
			{
				if (topratedrecentval == 1){
					topratedrecentval = 2;
					topratedrecentimg.source = topratedrecent2;
					reviewList.dataProvider = recentreviews;
					reviewlabel.text = 'Reviews ('+recentreviews.length.toString()+')';
				}
				else {
					topratedrecentval = 1;
					topratedrecentimg.source = topratedrecent1;
					reviewList.dataProvider = topreviews;
					reviewlabel.text = 'Reviews ('+topreviews.length.toString()+')';
				}
				
				
			}
			public function seemoreclick():void {
				navigator.pushView(MenuReviews,{id:data.id});
			}
			
			public var didlistclick:Boolean = false;
			public function ratingitemclick():void {
				if (didlistclick == false){
					didlistclick = true;
					if (reviewList.selectedIndex != -1){
						if (topratedrecentval == 1){
							navigator.pushView(ViewReview, topreviews[reviewList.selectedIndex]);	
						}
						else {
							navigator.pushView(ViewReview, recentreviews[reviewList.selectedIndex]);	
						}
					}
				}
			}
			public function startShare():void {
				sharePopup.startShare();
			}
			public function eatenClick():void {
				if (eatenstatus == 0){
					eatenimage.source = eatenthis1;
					eatenstatus = 1;
				}
				else {
					eatenimage.source = eatenthis2;
					eatenstatus = 0;
				}
				sendEatenThis.send();	
			}
			
			public function afterGetEatenThis(ev:ResultEvent):void {
				eatenimage.visible = true;
			}
			private function afterpost(result:Object, fail:Object):void{
				var stop:String = "";
			}
			public function gotobusiness():void {
				try{
					var dataArray:ArrayCollection = getDatabaseArray("SELECT * FROM merchusers");
					if (dataArray.length != 0){
						for (var i:uint = 0; i < dataArray.length; i++){
							if (dataArray[i].id == data.locationid){
								navigator.pushView(StoresDescription, dataArray[i]);	
								
							}
						}
					}
				}
				catch(e:Error){}
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getMenuItemInformation" method="GET" resultFormat="array"
					   url="http://www.groovedish.com/php/mobile/getMenuItemInformation.php"
					   result="afterGetMenuInformation(event)" >
			<s:request xmlns="">
				<menuid>{data.id}</menuid>		
				<emailGo>{emailGo}</emailGo>		
			</s:request>
		</s:HTTPService>
	
		<s:HTTPService id="sendEatenThis" method="GET" resultFormat="array"
					   url="http://www.groovedish.com/php/mobile/updateEatenThis.php"
					   result="afterGetEatenThis(event)" >
			<s:request xmlns="">
				<menuid>{data.id}</menuid>	
				<emailGo>{emailGo}</emailGo>	
				<locationid>{data.locationid}</locationid>		
				<eatenvalue>{eatenstatus}</eatenvalue>
			</s:request>
		</s:HTTPService>
		<s:MultiDPIBitmapSource id="eatenthis1"
								source160dpi="@Embed('../assets/160/eatenthis1.png')"
								source240dpi="@Embed('../assets/240/eatenthis1.png')"
								source320dpi="@Embed('../assets/320/eatenthis1.png')"
								source480dpi="@Embed('../assets/480/eatenthis1.png')"
								source640dpi="@Embed('../assets/640/eatenthis1.png')"/>
		<s:MultiDPIBitmapSource id="eatenthis2"
								source160dpi="@Embed('../assets/160/eatenthis2.png')"
								source240dpi="@Embed('../assets/240/eatenthis2.png')"
								source320dpi="@Embed('../assets/320/eatenthis2.png')"
								source480dpi="@Embed('../assets/480/eatenthis2.png')"
								source640dpi="@Embed('../assets/640/eatenthis2.png')"/>
		<s:MultiDPIBitmapSource id="topratedrecent1"
								source160dpi="@Embed('../assets/160/topratedrecent1.png')"
								source240dpi="@Embed('../assets/240/topratedrecent1.png')"
								source320dpi="@Embed('../assets/320/topratedrecent1.png')"
								source480dpi="@Embed('../assets/480/topratedrecent1.png')"
								source640dpi="@Embed('../assets/640/topratedrecent1.png')"/>
		<s:MultiDPIBitmapSource id="topratedrecent2"
								source160dpi="@Embed('../assets/160/topratedrecent2.png')"
								source240dpi="@Embed('../assets/240/topratedrecent2.png')"
								source320dpi="@Embed('../assets/320/topratedrecent2.png')"
								source480dpi="@Embed('../assets/480/topratedrecent2.png')"
								source640dpi="@Embed('../assets/640/topratedrecent2.png')"/>
	</fx:Declarations>	
	<s:Scroller id="scroller" visible="true" left="0" right="0" height="100%"
				horizontalScrollPolicy="off" verticalCenter="0" verticalScrollPolicy="on">
		<s:VGroup height="100%" paddingTop="0" gap="{30/(320/Capabilities.screenDPI)}" horizontalCenter="0" verticalCenter="0"  width="100%"  >
			<s:Group width="100%"   id="megacont"  >
				<s:Image id="img1" visible="false" 
						 width="100%" top="0"  scaleMode="zoom"
						 source="{data.picture}" smooth="true" 
						 contentLoader="{s_imageCache}"  height="{this.width/(16/9)}"   />
				<s:BitmapImage id="shaddow"  width="100%" height="{img1.height}"  top="0"
							    scaleMode="stretch"	contentLoader="{s_imageCache}"   >
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/pictureshadowflipped.png')"
												source240dpi="@Embed('../assets/240/pictureshadowflipped.png')"
												source320dpi="@Embed('../assets/320/pictureshadowflipped.png')"
												source480dpi="@Embed('../assets/480/pictureshadowflipped.png')"
												source640dpi="@Embed('../assets/640/pictureshadowflipped.png')"/>
					</s:source>
				</s:BitmapImage>
				<s:Group width="{this.width*0.30}" height="{this.width*0.30}"   visible="false"
						 mouseEnabledWhereTransparent="true" id="backbutton"  left="0"  
						 mouseDown="navigator.popView();">
					<s:BitmapImage top="{40/(320/Capabilities.screenDPI)}" 
							  left="{30/(320/Capabilities.screenDPI)}"
							  contentLoader="{s_imageCache}" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/back.png')"
													source240dpi="@Embed('../assets/240/back.png')"
													source320dpi="@Embed('../assets/320/back.png')"
													source480dpi="@Embed('../assets/480/back.png')"
													source640dpi="@Embed('../assets/640/back.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				
				<s:Group bottom="{20/(320/Capabilities.screenDPI)}" left="{30/(320/Capabilities.screenDPI)}">
					<s:Rect width="100%"  height="100%" radiusX="5" radiusY="5">
						<s:fill>
							<s:SolidColor alpha="0.7" color="#36ccba"/>
						</s:fill>
					</s:Rect>
					<s:Label  color="#FFFFFF" 
							  paddingBottom="10" paddingLeft="15"
							  paddingRight="15" paddingTop="10" 
							  text="{'$'+Number(data.cost).toFixed(2)}"  fontWeight="bold"
							  horizontalCenter="0" verticalCenter="3"
							  styleName="textsize5" 
							  maxDisplayedLines="1"
							  verticalAlign="middle"></s:Label>
				</s:Group>
				
			</s:Group>
			<s:VGroup width="100%" gap="{25/(320/Capabilities.screenDPI)}">
				<s:HGroup width="100%" 
						  gap="{15/(320/Capabilities.screenDPI)}" verticalAlign="top"  
						  paddingLeft="{30/(320/Capabilities.screenDPI)}"
						  paddingRight="{30/(320/Capabilities.screenDPI)}" >
					<s:Group height="{70/(320/Capabilities.screenDPI)}" 
									   width="{70/(320/Capabilities.screenDPI)}"
									   horizontalCenter="0" verticalCenter="0">
						<s:Rect width="100%" height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#b3b3b3"/>
							</s:fill>
						</s:Rect>
						<s:Label id="ratinglabel" color="#FFFFFF"
								 horizontalCenter="0" styleName="textsize7"
								 fontWeight="bold" verticalCenter="0"/>
					</s:Group>
					<s:VGroup height="100%" width="10" >
						<s:Label id="selectedTitle"  width="{this.width-100}" 
								 color="#4d4d4d" paddingRight="{30/(320/Capabilities.screenDPI)}"
								 styleName="textsize6" fontWeight="bold" text="{data.name}"/>
						<s:Label  color="#36ccba" fontWeight="bold" click="gotobusiness();"
								  mouseDown="gDown(event)" mouseOver="gOver(event)" 
								  mouseUp="gOut(event)" mouseOut="gOut(event)"
								  styleName="textsize3" text="{data.business_name}"
								  verticalAlign="middle"/>
					</s:VGroup>
				</s:HGroup>
				<s:VGroup id="dishinfosection" width="100%" gap="{25/(320/Capabilities.screenDPI)}" >
				
				
				</s:VGroup>
				<s:Group width="100%"  horizontalCenter="0"  verticalCenter="0">
					<s:Group click="reviewPopupGroup.startReview();" height="{60/(320/Capabilities.screenDPI)}" 
							 mouseDown="gDown(event)" mouseOver="gOver(event)"
							 mouseUp="gOut(event)" mouseOut="gOut(event)"
							 width="{this.width/2-(40/(320/Capabilities.screenDPI))}" left="{30/(320/Capabilities.screenDPI)}">
						<s:Rect width="100%"  height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#36ccba"/>
							</s:fill>
						</s:Rect>
						<s:Label verticalAlign="middle" mouseEnabled="false" horizontalCenter="0"  verticalCenter="2" 
								 text="Rate" color="#FFFFFF"  textAlign="center" styleName="textsize2"  fontWeight="bold"/>
					</s:Group>
					<s:Group click="startShare();" height="{60/(320/Capabilities.screenDPI)}" 
							 width="{this.width/2-(40/(320/Capabilities.screenDPI))}" right="{30/(320/Capabilities.screenDPI)}"
							 mouseDown="gDown(event)" mouseOver="gOver(event)"
							 mouseUp="gOut(event)" mouseOut="gOut(event)">
						<s:Rect width="100%"  height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#6594db"/>
							</s:fill>
						</s:Rect>
						<s:Label verticalAlign="middle" textAlign="center"  mouseEnabled="false"  
								 text="Share" color="#FFFFFF" styleName="textsize2"  
								 fontWeight="bold" horizontalCenter="0"  verticalCenter="2" />
					</s:Group>
				</s:Group>
				<s:Group width="100%">
					<s:Line left="{30/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				
				
				<s:Group height="100%"  mouseEnabledWhereTransparent="true" click="eatenClick();">
					<s:BitmapImage id="eatenimage" left="{30/(320/Capabilities.screenDPI)}" 
								   contentLoader="{s_imageCache}" visible="false" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/eatenthis2.png')"
													source240dpi="@Embed('../assets/240/eatenthis2.png')"
													source320dpi="@Embed('../assets/320/eatenthis2.png')"
													source480dpi="@Embed('../assets/480/eatenthis2.png')"
													source640dpi="@Embed('../assets/640/eatenthis2.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				<s:Group width="100%">
					<s:Line left="{30/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:VGroup  paddingLeft="{30/(320/Capabilities.screenDPI)}" 
						   paddingRight="{30/(320/Capabilities.screenDPI)}"  
						   width="100%" height="100%">
					<s:Label width="100%" color="#4d4d4d"
							 styleName="textsize5" fontWeight="bold"
							 text="{'Modifications ('+modifications.length.toString()+')'}"/>
					<s:List  id="modList" mouseEnabled="false"
							 width="100%" 
							 verticalScrollPolicy="off" 
							 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
							 itemRenderer="components.modItem" dataProvider="{modifications}" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											   variableRowHeight="true"
											  gap="{5/(320/Capabilities.screenDPI)}"/>
						</s:layout>
					</s:List>
				</s:VGroup>
				<s:Group width="100%">
					<s:Line left="{30/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:Group width="100%" >
					<s:Label  left="{30/(320/Capabilities.screenDPI)}" color="#4D4D4D"
							  fontWeight="bold" styleName="textsize5"
							  id="reviewlabel"
							  verticalCenter="0"/>
					<s:Image id="topratedrecentimg" 
							 right="{30/(320/Capabilities.screenDPI)}" contentLoader="{s_imageCache}" 
							 click="topratedrecentclick(event)" 
							 source="{topratedrecent1}"
							 verticalCenter="0"/>
				</s:Group>
				<s:List  id="reviewList" 
						 width="100%"
						 verticalScrollPolicy="off" 
						 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
						 click="ratingitemclick();"
						 change="ratingitemclick();"
						 itemRenderer="components.ratingsResultStore">
					<s:layout>
						<s:VerticalLayout horizontalAlign="contentJustify" gap="0"/>
					</s:layout>
				</s:List>
				<s:Group width="100%"  click="seemoreclick();" visible="{topreviews.length > 0}" height="{70/(320/Capabilities.screenDPI)}" >
					<s:Label styleName="textsize5"  fontWeight="bold" mouseEnabled="false" color="#b3b3b3" verticalCenter="{-10/(320/Capabilities.screenDPI)}"
							 textAlign="center" horizontalCenter="0"  verticalAlign="middle" text="See More"/>
				</s:Group>
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
	
	
	
	<components:sharePopup id="sharePopup"  width="100%" height="100%" visible="false"/>
	<components:ratePopup height="100%" width="100%" id="reviewPopupGroup" visible="false"/>
</s:View>