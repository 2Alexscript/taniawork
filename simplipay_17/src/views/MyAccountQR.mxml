<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" 
		title="Pay" xmlns:BarCode="BarCode.*" >	
	<s:navigationContent>
		<s:Button label="Back" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>
	
	
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.qrcode.QRCode;
			
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var currentBalance:String = "....";
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var tipGo:String = "";
			[Bindable]
			public var doneallready:Boolean = false;
			[Bindable]
			public var recievedallready:Boolean = false;
			[Bindable]
			public var paytype:Number = -1;
			[Bindable]
			public var discount:String = "";
			[Bindable]
			public var simplisaveid:Number = -1;
			[Bindable]
			public var useloyalty:String = "FALSE";
			[Bindable]
			public var busy:Boolean = true;
			public function onActivate(event:Event):void
			{		
				busy = true;
				if (doneallready == false){
					try{
						emailGo = data.email;
						tipGo = data.tip;
						doneallready = true;
					
						paytype = data.type;
						if (paytype == 2){
							discount = data.discount;
						}
						else {
							discount = "%0";
						}
						
						try{
							simplisaveid = data.simplisaveid;
						}
						catch(e:Error){
							simplisaveid = -1;
						}
						
						if (data.useloyalty == true){
							useloyalty = "TRUE";
						}
						else {
							useloyalty = "FALSE";
						}
						
						getCode.send();
						
					}
					catch(e:Error){
						navigator.popView();
					}
				}
				else {
					
				}
				
			}	
			public function afterGetCode(ev:ResultEvent):void {
				var stop:String = "";
				busy = false;
				if (recievedallready == false){					
					try{
						var code:String = ev.result[0].res.code;
						//this.title = data.name;
						var sp:Sprite = new Sprite();
						var qr:QRCode = new QRCode();
						qr.encode(code+"formalendofstatement");
						var img:Bitmap = new Bitmap(qr.bitmapData);
						img.width = 249;
						img.height = 249;
						sp.addChild(img);
						var u:UIComponent = new UIComponent();
						u.addChild(sp);
						u.horizontalCenter = 0;
						u.verticalCenter = 0;
						u.percentHeight = 100;
						u.percentWidth = 100;
						recievedallready = true;
						qrholder.addElement(u);	
					}
					catch(e:Error){
						navigator.popView();
					}
				}
				else {
					
				}
				
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}			
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<s:HTTPService id="getCode" method="POST" 
					   resultFormat="array" 
					   url="http://simplipay.ca/php/handshake/getCode.php"
					   result="afterGetCode(event)" >
			<s:request xmlns="">
				<email>{emailGo}</email>	
				<tip>{tipGo}</tip>	
				<discount>{discount}</discount>	
				<useloyalty>{useloyalty}</useloyalty>
				<simplisaveid>{simplisaveid}</simplisaveid>
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:BorderContainer visible="true" width="100%" height="100%" borderAlpha="0" backgroundAlpha="0" >
		<s:BorderContainer id="qrholder" top="56" width="250" height="250" 
						   borderAlpha="0" backgroundAlpha="0" horizontalCenter="0">
			
		</s:BorderContainer>
		
		<s:Label  id="topLBL0" top="17" width="80%" color="#000000" fontSize="30" fontWeight="bold"
				  horizontalCenter="0" text="Scan Now" textAlign="center"
				  verticalAlign="middle"/>
		
	</s:BorderContainer>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>

</s:View>
