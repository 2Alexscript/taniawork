<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:components="components.*" 
		title="login" 
		contentBackgroundAlpha="1" name="sign0"
		contentBackgroundColor="#f3f3f3"
		actionBarVisible="false" 
		viewActivate="init()"
		xmlns:cs="cs.*" >
	<fx:Script source="../func/global.as" />
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import spark.events.ViewNavigatorEvent;
			public function init():void {	
				createIfNotExsist("localuser");
				
			}	
			public function loginClick(event:MouseEvent):void
			{	
				this.currentState = 'login';
				logWarning.visible = false;
			}
			public function createNewClick(event:MouseEvent):void {
				navigator.pushView(Signup_step1);	
			}
			public function backToLoginOptions():void {
				this.currentState = 'welcome';
				try{
					logWarning.visible = false;
				}
				catch(e:Error){}
			}
			public function authorizeLogin(username:String,userpassword:String):void{	
				userid = username;
				passid = userpassword;
				checkLogin.send();
			}
			public function afterCheckLogin(ev:ResultEvent):void {
				if (ev.result[0].res.message == "ok"){
					AddNewLocalUser(ev.result[0].res.email,
						ev.result[0].res.name,
						ev.result[0].res.city);
				}
				else {
					//bad login
					logWarning.text = ev.result[0].res.message;
					logWarning.visible = true;
				}
			}
			
			public function AddNewLocalUser(email:String,name:String,city:String):void
			{
				this.parentApplication.showloading();
				doQuery("delete FROM localuser;");
				sqlConnection = new SQLConnection();
				sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
				var stmt:SQLStatement = new SQLStatement();
				stmt.sqlConnection = sqlConnection;
				stmt.text = "INSERT into localuser values(:email,:name,:city,:picture)";
				stmt.parameters[":email"] = email;
				stmt.parameters[":name"] = name;
				stmt.parameters[":city"] = city;
				stmt.parameters[":picture"] = "";
				stmt.execute();
				getLocalUsers();
			}
			protected function getLocalUsers():void
			{
				var resData:ArrayCollection = getDatabaseArray("SELECT * FROM localuser");
				if (resData.length != 0){
					//good login
					for (var i:uint = 0; i < resData.length; i++){
						hidekeyboard();
						this.parentDocument.refresh(resData[i].email);		
					}			
				}
				else {
				}
			}
			protected function userPasswordInput_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == 13){
					authorizeLogin(userNameInput.text,userPasswordInput.text);	
				}
			}
			public function facebookLogin():void
			{		
				this.parentApplication.facebookloging();
			}
		]]>
	</fx:Script>
	<fx:Declarations>	
		<fx:String id="userid" />
		<fx:String id="passid" />
		<s:RadioButtonGroup id="gender"/>
		<s:HTTPService id="checkLogin" method="POST" 
					   resultFormat="array" 
					   url="http://www.menutria.com/php/mobile/checkLogin.php"
					   result="afterCheckLogin(event)" >
			<s:request xmlns="">
				<userid>{userid}</userid>		
				<passid>{passid}</passid>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:states>
		<s:State name="welcome"/>
		<s:State name="login"/>
	</s:states>
	<s:BitmapImage width="100%" height="100%"
			 scaleMode="zoom"  
			 contentLoader="{s_imageCache}" >
		<s:source>
			<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/loginbackground.png')"
									source240dpi="@Embed('../assets/240/loginbackground.png')"
									source320dpi="@Embed('../assets/320/loginbackground.png')"
									source480dpi="@Embed('../assets/480/loginbackground.png')"
									source640dpi="@Embed('../assets/640/loginbackground.png')"/>
		</s:source>
	</s:BitmapImage>
	<s:Scroller left="0"  id="v11" includeIn="welcome"
				right="0" top="0" bottom="0" 
				verticalScrollPolicy="on" 
				horizontalScrollPolicy="off" >
		<s:Group width="100%" height="100%">
			<s:VGroup  gap="{25/(320/Capabilities.screenDPI)}" width="95%" horizontalCenter="0" verticalCenter="0" 
					   paddingTop="{20/(320/Capabilities.screenDPI)}" bottom="0" horizontalAlign="center" verticalAlign="middle">
				<s:BitmapImage contentLoader="{s_imageCache}"  >
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/shield.png')"
												source240dpi="@Embed('../assets/240/shield.png')"
												source320dpi="@Embed('../assets/320/shield.png')"
												source480dpi="@Embed('../assets/480/shield.png')"
												source640dpi="@Embed('../assets/640/shield.png')"
												/>
					</s:source>
				</s:BitmapImage>
				<s:BitmapImage contentLoader="{s_imageCache}"  >
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/menutria.png')"
												source240dpi="@Embed('../assets/240/menutria.png')"
												source320dpi="@Embed('../assets/320/menutria.png')"
												source480dpi="@Embed('../assets/480/menutria.png')"
												source640dpi="@Embed('../assets/640/menutria.png')"
												/>
					</s:source>
				</s:BitmapImage>
				<!--components:transbutton textLabel="Guest Access" horizontalCenter="0" click="guestSignIn(event)"/-->
				<components:transbutton textLabel="Sign Up" horizontalCenter="0" click="createNewClick(event)"/>
				<components:transbutton textLabel="Sign In" horizontalCenter="0" click="loginClick(event)"/>
				<components:transbutton textLabel="Sign In With Facebook" horizontalCenter="0" click="facebookLogin()"/>
						
			</s:VGroup>
		</s:Group>
	</s:Scroller>
	<s:Scroller left="0" id="v2" includeIn="login" right="0" top="0" bottom="0" 
				verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" height="100%"  horizontalAlign="center"  >
			<s:VGroup bottom="0" width="95%" height="100%" gap="{25/(320/Capabilities.screenDPI)}" horizontalAlign="center"
					  horizontalCenter="0" paddingTop="{40/(320/Capabilities.screenDPI)}" verticalAlign="top" verticalCenter="0">
				<s:Label width="95%" color="#FFFFFF" styleName="fontsize7" fontWeight="bold" text="Sign In"
						 textAlign="center"/>
				
				
				<s:Group width="100%" >
					<s:Rect width="{550/(320/Capabilities.screenDPI)}" 
							height="{100/(320/Capabilities.screenDPI)}" 
							horizontalCenter="0" verticalCenter="0"
							radiusX="{10/(320/Capabilities.screenDPI)}"
							radiusY="{10/(320/Capabilities.screenDPI)}" >
						<s:fill><s:SolidColor alpha="1" color="#FFFFFF"/></s:fill>
					</s:Rect>
					<s:TextInput id="userNameInput" 
								 width="{550/(320/Capabilities.screenDPI)}" 
								 height="{100/(320/Capabilities.screenDPI)}" 
								 verticalCenter="0"
								 horizontalCenter="0"
								 color="#7777777"  contentBackgroundAlpha="0"
								 fontFamily="Arial"  borderVisible="false"
								 prompt="Email"/>
				</s:Group>
				
				<s:Group width="100%" >
					<s:Rect width="{550/(320/Capabilities.screenDPI)}" 
							height="{100/(320/Capabilities.screenDPI)}" 
							horizontalCenter="0" verticalCenter="0"
							radiusX="{10/(320/Capabilities.screenDPI)}"
							radiusY="{10/(320/Capabilities.screenDPI)}" >
						<s:fill><s:SolidColor alpha="1" color="#FFFFFF"/></s:fill>
					</s:Rect>
					<s:TextInput id="userPasswordInput" 
								 width="{550/(320/Capabilities.screenDPI)}" 
								 height="{100/(320/Capabilities.screenDPI)}" 
								 verticalCenter="0"
								 horizontalCenter="0"
								 displayAsPassword="true"
								 keyDown="userPasswordInput_keyDownHandler(event)" 
								 color="#7777777"  contentBackgroundAlpha="0"
								 fontFamily="Arial"  borderVisible="false"
								 prompt="Password"/>
				</s:Group>
				

				<!--components:transbutton textLabel="Sign In" horizontalCenter="0" 
										click="authorizeLogin(userNameInput.text,userPasswordInput.text)" /-->	
				<components:transbutton textLabel="Sign In" horizontalCenter="0" 
										click="authorizeLogin(userNameInput.text,userPasswordInput.text)" />
				<components:transbutton textLabel="Cancel" horizontalCenter="0"  click="backToLoginOptions();"/>	

				<s:Label top="210" fontFamily="_sans" visible="false"  color="#FFFFFF" id="logWarning"
						 fontWeight="bold" horizontalCenter="0"
						 text="Sorry Incorrect Information"/>
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
</s:View>