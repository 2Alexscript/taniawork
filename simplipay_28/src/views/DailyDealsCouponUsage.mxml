<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		backgroundColor="#22252a"
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" creationComplete="goGetBalance();" 
		title="Purchased Coupon" xmlns:BarCode="BarCode.*" xmlns:components="components.*" >
	<s:navigationContent>
		<s:Image x="0" y="-2" click="navigator.popView();" mouseDown="gDown(event)"
				 mouseOut="gOut(event)" mouseOver="gOver(event)">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/backbtnLow.png')"
										source240dpi="@Embed('assets/interfaceimages/multi/backbtnMed.png')"
										source320dpi="@Embed('assets/interfaceimages/multi/backbtnHigh.png')"/>
			</s:source>
		</s:Image>
	</s:navigationContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.qrcode.QRCode;
			
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var currentBalance:String = "....";
			[Bindable]
			public var emailGo:String = "";
		
			public function onActivate(event:Event):void
			{
				//navigator.actionBar.height = 40;
				goGetBalance();
			}
			public function goGetBalance():void {
				try{
					if ((data.email != null)&&(data.email != "")){
						emailGo = data.email;
						getBalance.send();		
					}
				}
				catch(e:Error){
					
				}
				
			}
			public function afterGetBalance(ev:ResultEvent):void {
				var tempBalance:String = ev.result[0].res.toString();
				if (tempBalance.indexOf(".") != -1){
					var tempString:String = tempBalance.substring(tempBalance.indexOf(".")+1,tempBalance.length);
					if (tempString.length > 2){
						currentBalance = "$"+tempBalance.substring(0,tempBalance.indexOf(".")+1)+tempString.substring(0,2);
					}
					else {
						currentBalance = "$"+tempBalance;
					}
				}
				else {
					currentBalance = "$"+tempBalance;
				}
			}
			public function accountGo(u:uint):void {
				if (u == 0){
				}
				else if (u == 1){
					try{
						navigator.pushView(MyAccountQR, {useloyalty:useloyaltyswitch.selected,type:2,index:u,discount:data.value,
							email:data.email,name:data.name,tip:tipo.getCurrentSelected(),simplisaveid:data.id});
					}
					catch(e:Error){
					}
					
				}
				else if (u == 2){
					if (emailGo != ""){
					}
					
					
				}
				else if (u == 3){
					//navigator.pushView(MyAccountManage, {index:u});
					manageOptions.visible = true;
				}
				else if (u == 4){
					
				}
				else if (u == 5){
					
				}
			}
			public function Mclose(u:uint):void {
				if (u == 1){
					navigator.pushView(HomeReciepts, {index:u,email:data.email,name:data.name});
				}
				
				goGetBalance();
				manageOptions.visible = false;
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<s:HTTPService id="getBalance" method="POST" 
					   resultFormat="array" 
					   url="http://simplipay.ca/php/users/getBalance.php"
					   result="afterGetBalance(event)" >
			<s:request xmlns="">
				<emailGo>{emailGo}</emailGo>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	
	
	
	<s:Scroller left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%"  verticalAlign="middle" horizontalAlign="center" height="100%" >
			<s:VGroup  visible="true" verticalAlign="middle" horizontalAlign="center"
					   width="100%" top="0" bottom="0" >
				<s:Image top="53"  click="accountGo(1);" horizontalCenter="0" id="scanimg" height="{scanimg.width}" width="50%"
						 mouseDown="gDown(event)" mouseOut="gOut(event)" mouseOver="gOver(event)">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/taptopayLow.png')"
												source240dpi="@Embed('assets/interfaceimages/multi/taptopayMed.png')"
												source320dpi="@Embed('assets/interfaceimages/multi/taptopayHigh.png')"/>
					</s:source>
				</s:Image>
				<s:Label top="181" width="95%" color="#FFFFFF" horizontalCenter="-94"
						 styleName="textsize2" text="Tip Percentage"/>
				<components:tipSlider id="tipo" top="197" horizontalCenter="0"/>
				
				
				<s:BorderContainer top="266" backgroundAlpha="0" borderAlpha="0"  horizontalCenter="0" width="95%" >
					<s:Image top="0" horizontalCenter="0">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/purchasedcouponback1Low.png')"
													source240dpi="@Embed('assets/interfaceimages/multi/purchasedcouponback1Med.png')"
													source320dpi="@Embed('assets/interfaceimages/multi/purchasedcouponback1High.png')"/>
						</s:source>
					</s:Image>
					<s:Label left="10" color="#FFFFFF" fontWeight="normal" styleName="textsize2"
							 text="Current Balance :" textAlign="right" verticalAlign="middle"
							 verticalCenter="-38"/>
					<s:Label id="currentBalanceLbl" right="33" width="50%" color="#EF7716"
							 fontWeight="bold" styleName="textsize2" text="{currentBalance}"
							 textAlign="right" verticalCenter="-35"/>
					
					<s:Label left="7" top="108" height="30" color="#FFFFFF" styleName="textsize2"
							 text="Use Available Loyalty" textAlign="right" verticalAlign="middle"/>
					<s:ToggleSwitch id="useloyaltyswitch" right="21" top="88" selected="false"/>
				</s:BorderContainer>
				
				<s:HGroup visible="false">
					<s:Image click="accountGo(2)" mouseDown="gDown(event)" mouseOut="gOut(event)"
							 mouseUp="gOut(event)" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/reloadbtnLow.png')"
													source240dpi="@Embed('assets/interfaceimages/multi/reloadbtnMed.png')"
													source320dpi="@Embed('assets/interfaceimages/multi/reloadbtnHigh.png')"/>
						</s:source>
					</s:Image>
					<s:Image click="accountGo(3)" mouseDown="gDown(event)" mouseOut="gOut(event)"
							 mouseUp="gOut(event)" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/managebtnLow.png')"
													source240dpi="@Embed('assets/interfaceimages/multi/managebtnMed.png')"
													source320dpi="@Embed('assets/interfaceimages/multi/managebtnHigh.png')"/>
						</s:source>
					</s:Image>
				</s:HGroup>
				
				
				
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
	<s:BorderContainer id="manageOptions" visible="false" left="0" right="0" bottom="0" height="100%"
					   backgroundAlpha="0.5" backgroundColor="#000000" borderAlpha="0"
					   horizontalCenter="0">
		<s:VGroup   gap="5" width="100%" verticalAlign="bottom" horizontalAlign="center" height="100%">
			<s:Image top="16"  horizontalCenter="0" click="Mclose(0);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/interfaceimages/original/refreshbalance.png"/>
			<s:Image top="81"  horizontalCenter="0" click="Mclose(1);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/interfaceimages/original/recent.png"/>
			
			<s:Image bottom="5"  horizontalCenter="0" click="Mclose(0);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/interfaceimages/original/cancel.png"/>
		</s:VGroup>
	</s:BorderContainer>
	
	<components:codeinput visible="false" />
	
	
</s:View>
