<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="activate1()"
		title="Add Store" xmlns:components="components.*" xmlns:renderers="renderers.*">
	<s:navigationContent >
		<s:Button label="Back" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>
	<s:actionContent>	
		<s:Button label="Confirm" click="confirm();" fontSize="12"/> 
	</s:actionContent>
	<fx:Script>
		<![CDATA[	
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			[Bindable]
			public var titleout:String = "";
			
			[Bindable]
			public var managerstoaddout:String = "";
			[Bindable]
			public var idout:Number = -1;
			[Bindable]
			protected var managerdata:ArrayCollection;
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var managerid:String = "-1";
			protected var sqlConnection:SQLConnection;
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function homeGo(u:uint):void {				
				if (u == 0){
					//navigator.pushView(HomeSimpliSave, {index:u});
				}
				else if (u == 1){
					//navigator.pushView(HomeFindAFav, {index:u});
				}
				else if (u == 2){
					//navigator.pushView(HomeMyFavs, {index:u});
				}
				else if (u == 3){
					//navigator.pushView(HomeSettings, {index:u});
				}
				
			}	
			
			public function activate1():void
			{
				var stmt:SQLStatement = new SQLStatement();
				
				sqlConnection = new SQLConnection();
				sqlConnection.open(File.applicationStorageDirectory.resolvePath("manager.db"));
				
				stmt = new SQLStatement();
				stmt.sqlConnection = sqlConnection;
				stmt.text = "SELECT * from manager";
				stmt.execute();
				var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
				
				if (resData.length != 0){
					managerid = resData[0].id.toString();
					//managerid = "5";
					busy = true;
					getAdmins.send();
				}
				else {
					busy = false;
				}
			}
			
			public function afterAddStore(ev:ResultEvent):void {
				
				try{
					busy = false;
					navigator.popView();
				}
				catch(e:Error){
					
				}
				
			}
			public function afterGetAdmins(ev:ResultEvent):void {
				try{
					var stop:String = "";
					busy = false;
					managerdata = new ArrayCollection();
					try{
						managerdata = ev.result[0].res;	
					}
					catch(e:Error){
						managerdata.addItem( ev.result[0].res);
					}	
				}
				catch(e:Error){
					busy = false;
				}
			}
			public function listChange(ev:IndexChangeEvent):void {
				var stop:String = "";
				
			}
			public function confirm():void {
				//check and add. 
				//addCheckList.send();	
				var title:String = titleinput.text;
				var managerstoadd:String = "";
				var count:uint = 0;
				
				
				
				for (var i:uint = 0; i < managerdata.length; i++){
					var isselected:Boolean = managerdata[i].selectedval;
					if (isselected){
						var storeid:String = managerdata[i].id.toString();
						if (count == 0){
							count++;	
							managerstoadd = storeid ;
						}
						else {
							managerstoadd = managerstoadd + "," + storeid ;
						}
					}
				}
				
				var stop:String = "";	
				titleout = title;
				
				managerstoaddout = managerstoadd;
				addStore.send();
				busy = true;
				
				
				
				//if (titleinput.text != "")&&(titleinput.text.length > 2)&&(
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="getAdmins" method="GET" 
					   resultFormat="array" 
					   url="http://enactforum.org/originaljoes/manager/getAdmins.php"
					   result="afterGetAdmins(event)" >
			<s:request xmlns="">
				<managerid>{managerid}</managerid>	
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="addStore" method="GET" 
					   resultFormat="array" 
					   url="http://enactforum.org/originaljoes/manager/addStore.php"
					   result="afterAddStore(event)" >
			<s:request xmlns="">
				<titleout>{titleout}</titleout>	
				<managerstoaddout>{managerstoaddout}</managerstoaddout>
			</s:request>
		</s:HTTPService>
		
	</fx:Declarations>
	
	<s:Scroller id="scroller" left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup  width="100%" height="100%" horizontalCenter="0">
			<s:HGroup width="100%" height="53" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:TextInput id="titleinput" needsSoftKeyboard="true" autoCapitalize="all" softKeyboardType="contact" x="48" y="21" width="100%" height="100%" prompt="Title"/>
			</s:HGroup>
			<s:VGroup width="100%" height="100%" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:Label x="10" y="206" fontSize="20" fontWeight="bold" text="Affected Managers"/>
				<s:List id="storelist" y="31" width="100%" contentBackgroundAlpha="0" maxWidth="300" height="100%"
						change="listChange(event);"
						dataProvider="{managerdata}" itemRenderer="components.storeAddItem">
					
				</s:List>
			</s:VGroup>
		</s:VGroup>		
	</s:Scroller>	
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
</s:View>
