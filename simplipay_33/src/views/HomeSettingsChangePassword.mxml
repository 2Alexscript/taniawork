<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" 
		title="Change Password" 	backgroundColor="#2a3038" 
		xmlns:cs="cs.*" xmlns:ns="http://www.flextras.com/mxml">	
	<s:navigationContent>
		<s:Image x="0" y="-2" click="navigator.popView();" 
				
				 
				
				 mouseUp="gOut(event)">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/backbtnLow.png')"
										source240dpi="@Embed('assets/interfaceimages/multi/backbtnMed.png')"
										source320dpi="@Embed('assets/interfaceimages/multi/backbtnHigh.png')"/>
			</s:source>
		</s:Image>
	</s:navigationContent>
	<s:actionContent>		
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.qrcode.QRCode;
			
			import spark.core.ContentCache;
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			protected var sqlConnection:SQLConnection;
			static public const s_imageCache:ContentCache = new ContentCache();
			[Bindable]
			public var currentBalance:String = "$0.00";
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var emailGo:String = "";
			public function onActivate(event:Event):void
			{
				
				sqlConnection = new SQLConnection();
				sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
				var stmt:SQLStatement = new SQLStatement();
				stmt.sqlConnection = sqlConnection;
				stmt.text = "SELECT email, active FROM localuser where active = 'yes'";
				stmt.execute();
				var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
				
				if (resData.length != 0){
					emailGo = resData[0].email;
				}
				else {
					//bad login or no local saved login.
					navigator.popView();	
				}		
				busy = false;
			}	
			public function changePass():void {
				logWarning.visible = false;
				if ((oldpassword.text.length  > 0)&&(newpassword1.text.length  > 0)
					&&(newpassword2.text.length  > 0)&&(newpassword1.text == newpassword2.text)){
					busy = true;
					changePassword.send();
					
				}
				
			}
			public function afterChangePassword(ev:ResultEvent):void {
				busy = false;
				logWarning.text = ev.result[0].res.message;
				logWarning.visible = true;
				
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}			
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<s:MultiDPIBitmapSource id="signinicon"
								source160dpi="@Embed('assets/interfaceimages/multi/signinbtnLow.png')"
								source240dpi="@Embed('assets/interfaceimages/multi/signinbtnMed.png')"
								source320dpi="@Embed('assets/interfaceimages/multi/signinbtnHigh.png')"/>
		<s:MultiDPIBitmapSource id="signupicon"
								source160dpi="@Embed('assets/interfaceimages/multi/signupbtnLow.png')"
								source240dpi="@Embed('assets/interfaceimages/multi/signupbtnMed.png')"
								source320dpi="@Embed('assets/interfaceimages/multi/signupbtnHigh.png')"/>
		<s:MultiDPIBitmapSource id="cancelIcon"
								source160dpi="@Embed('assets/interfaceimages/multi/cancelbtnLow.png')"
								source240dpi="@Embed('assets/interfaceimages/multi/cancelbtnMed.png')"
								source320dpi="@Embed('assets/interfaceimages/multi/cancelbtnHigh.png')"/>
		<s:HTTPService id="changePassword" method="POST" 
					   resultFormat="array" 
					   url="https://simplipay.ca/php/login/changePassword.php"
					   result="afterChangePassword(event)" >
			<s:request xmlns="">
				<oldpass>{oldpassword.text}</oldpass>
				<newpass>{newpassword1.text}</newpass>
				<email>{emailGo}</email>
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Scroller left="0" id="v2" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" height="100%"  horizontalAlign="center"  >
			<s:VGroup  gap="10" width="95%" horizontalCenter="0" verticalCenter="0" 
					   paddingTop="20" bottom="0" horizontalAlign="center" verticalAlign="middle">
				<s:BitmapImage top="12"  horizontalCenter="0"
							   contentLoader="{s_imageCache}">
					<s:source>
						<s:MultiDPIBitmapSource id="loginheader"
												source160dpi="@Embed('assets/interfaceimages/multi/loginheaderLow.png')"
												source240dpi="@Embed('assets/interfaceimages/multi/loginheaderMed.png')"
												source320dpi="@Embed('assets/interfaceimages/multi/loginheaderHigh.png')"/>
					</s:source>
				</s:BitmapImage>
				<s:TextInput id="oldpassword" top="37" width="98%"  horizontalCenter="0"
							  displayAsPassword="true" prompt="Old Password"/>
				<s:TextInput id="newpassword1" top="65" width="98%" 
							 displayAsPassword="true" horizontalCenter="0" prompt="New Password"/>
				<s:TextInput id="newpassword2" top="65" width="98%" 
							 displayAsPassword="true" horizontalCenter="0" prompt="Confirm New Password"/>
				
				<cs:IconButton   skinClass="skins.ImageButtonSkin" icon="{signinicon}" horizontalCenter="0"
								 click="changePass();" />
				<cs:IconButton   skinClass="skins.ImageButtonSkin" icon="{cancelIcon}" horizontalCenter="0"
								 click="navigator.popView();" />
				<s:Label top="210" fontFamily="_sans" visible="false" right="2" left="2" height="100%"  color="#FFFFFF" id="logWarning"
						 fontWeight="bold" horizontalCenter="0"
						 text="Sorry Incorrect Information"/>
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
</s:View>
