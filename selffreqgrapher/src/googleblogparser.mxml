<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="955" minHeight="600">
	<fx:Script source="func/documentImportFunctions.as" />
	<fx:Script source="func/dataGraber.as" />
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import flash.filters.DropShadowFilter;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import mx.core.IUIComponent;
			import mx.graphics.ImageSnapshot;
			import mx.graphics.Stroke;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.utils.ObjectUtil;

			public var setIndex:uint = 0;
			public var parentIndex:uint = 0;

			private var fileToDownload:FileReference;
			public var serveraddress:String = "";
			public var serveruser:String = "";
			public var serverpass:String = "";
			public var databasename:String = "";
			public var tablename:String = "";
			public var searchcolumn:String = "";
			public var datecolumn:String = "";
			public var datasetname:String = "";
			public var datetype:String = "";
			[Bindable]
			public var legendArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var seriesArray:Array = new Array();
			[Bindable]
			public var preArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var shadow:DropShadowFilter = new DropShadowFilter(2,45,0,0.5);
			[Bindable]
			public var displayType:String = "segment";
			[Bindable]
			public var s1:String = "";
			[Bindable]
			public var s2:String = "";
			[Bindable]
			public var s3:String = "";
			[Bindable]
			public var s4:String = "";
			[Bindable]
			public var s5:String = "";
			[Bindable]
			public var s6:String = "";
			[Bindable]
			public var s7:String = "";
			[Bindable]
			public var s8:String = "";
			[Bindable]
			public var s9:String = "";
			[Bindable]
			public var s10:String = "";
			[Bindable]
			public var freqArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var displayArray:ArrayCollection = new ArrayCollection();
			public var maxNumOfVars:uint = 25;
			public var currentlySearching:Number = -1;
			public var usedArray:Array = new Array();
			[Bindable]
			public var rotationArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var colorArray:Array = new Array();
			public var results:ArrayCollection = new ArrayCollection();
			public var searchCounter:uint = 0;
			public var superCounter:uint = 0;
			public var startDate:Number = 2454832;
			public var totalcsvtext:String = "";
			public function afterGetDatalist(ev:ResultEvent):void {
				var stop:String = "";
				preArray = new ArrayCollection();
				preArray = ev.result[0].lists.list;
			}
			public function loaddatasource():void {
				redoUsedArray();
				if (exsistlist.selectedIndex != -1){
					serveraddress = exsistlist.selectedItem.serveraddress;
					serveruser = exsistlist.selectedItem.username;
					serverpass = exsistlist.selectedItem.userpassword;
					databasename = exsistlist.selectedItem.databasename;
					tablename = exsistlist.selectedItem.tablename;
					searchcolumn = exsistlist.selectedItem.columntosearch;
					datecolumn = exsistlist.selectedItem.datecolumn;
					datasetname = exsistlist.selectedItem.name;
					datetype = exsistlist.selectedItem.datetype;
					//this.currentState = 'viz';
					eraseAll();
					gatherResultsFromSearchArray();
				}	
			}
			public function gatherResultsFromSearchArray():void {
				
				setIndex = 0;
				parentIndex = 0;
				var parentName:String = searchArray[parentIndex].label;
				var setName:String = searchArray[parentIndex].searches[setIndex].label;
				var setSearches:Array = searchArray[parentIndex].searches[setIndex].searches;
				
				display(parentName,setName,setSearches);
				
				
				
				
				
				
				
				
			}
			public function redoUsedArray():void {
				usedArray = new Array();
				for (var i:uint = 0; i < maxNumOfVars; i++){
					usedArray.push(false);
				}
				rotationArray = new ArrayCollection();
				for (var j:uint = 0; j < 45; j++){
					rotationArray.addItem({angle:j});
				}
			}
			public function display(parentName:String,setName:String,setSearches:Array):void {
				var endCounter:uint = 0;
				do {
					endCounter++;
				}while ((usedArray[endCounter] != false)&&(endCounter < maxNumOfVars));
				if (endCounter != maxNumOfVars){
					usedArray[endCounter] = true;
					currentlySearching = endCounter;
					legendArray.addItem({name:setName,curSearch:endCounter,usedIndex:endCounter,colorc:colorArray[endCounter-1]});
					legendList.dataProvider = legendArray;
					
					
					
					var termArray:Array = setSearches
					
					
					var andorchoice:String = "or";
					if (datetype == "Year"){
						var query:String = "select "+datecolumn+" AS year, count(*) as frequency from "+tablename+" where (";
						for (var i:uint = 0; i < termArray.length; i++){
							if (i == termArray.length-1){
								query = query + " "+searchcolumn+" like '%"+termArray[i]+"%'";
							}
							else {
								query = query + " "+searchcolumn+" like '%"+termArray[i]+"%' "+andorchoice+" ";
							}
						}
						
						query = query + ") group by year order by count(*) desc";
						s1 = query;
						s2 = databasename;
						s3 = serveraddress;
						s4 = serveruser;
						s5 = serverpass;
						searchDatabase.send();
					}
					else if (datetype == "Month"){
					/*	var query:String = "select "+datecolumn+" AS month, year AS year, count(*) as frequency from "+tablename+" where (";
						for (var i:uint = 0; i < termArray.length; i++){
							if (i == termArray.length-1){
								query = query + " "+searchcolumn+" like '%"+termArray[i]+"%'";
							}
							else {
								query = query + " "+searchcolumn+" like '%"+termArray[i]+"%' "+andorchoice+" ";
							}
						}
						//query = query + ") group by month, year order by count(*) desc";
						query = query + ")  group by month, year order by count(*) desc";
						s1 = query;
						s2 = databasename;
						s3 = serveraddress;
						s4 = serveruser;
						s5 = serverpass;
						searchDatabase2.send();*/
					}
					
				}
				var stop:String = "";
			}
			
			public function afterSearchDatabase(ev:ResultEvent):void {
				//linechart.seriesFilters = [];
				var i:Number = 0;
				//areachart.seriesFilters = [];
				freqArray = new ArrayCollection();
				if (ev.result != null){
					try{
						if (datetype == "Year"){
							//a1.categoryField = "year";
							//a2.categoryField = "year";
							if (ev.result[0].lists == null){
								
							}
							else {
								freqArray = ev.result[0].lists.list;
							
							
							var dataSortField:SortField = new SortField();
							dataSortField.name = "year";
							dataSortField.numeric = true;
							var numericDataSort:Sort = new Sort();
							numericDataSort.fields = [dataSortField];
							freqArray.sort = numericDataSort;
							freqArray.refresh();
							var p:uint = 0;
							var lastYear:uint = 0;
							var proc:Boolean = false;
							for (i = 0; i < freqArray.length; i++){
								if ((freqArray[i].year != 0)&&(freqArray[i].year < 2011)){
									if (lastYear == 0){
										lastYear = freqArray[i].year;
									}
									else {
										if (freqArray[i].year > lastYear+1){
											do {
												lastYear++;
												proc = false;
												for (p = 0; p < displayArray.length; p++){
													if (displayArray[p].year == lastYear){
														setVal(p,currentlySearching,0);	
														proc = true;
													}
												}
												if (proc == false){
													addBlankYear(lastYear);
												}	
											}while (freqArray[i].year > lastYear+1);
										}
										proc = false;
										for (p = 0; p < displayArray.length; p++){
											if (displayArray[p].year == freqArray[i].year){
												setVal(p,currentlySearching,freqArray[i].frequency);
												proc = true;
											}
										}
										if (proc == false){
											addBlankYear(freqArray[i].year);
											setVal(displayArray.length-1,currentlySearching,freqArray[i].frequency);
										}	
										lastYear = freqArray[i].year;
									}
								}
							}
							}
							var dataSortField:SortField = new SortField();
							dataSortField.name = "year";
							dataSortField.numeric = true;
							var numericDataSort:Sort = new Sort();
							numericDataSort.fields = [dataSortField];
							displayArray.sort = numericDataSort;
							displayArray.refresh();
						}
						else if (datetype == "Month"){
						
							/*freqArray = new ArrayCollection();
							var tempfreqArray:ArrayCollection = new ArrayCollection();
							tempfreqArray = ev.result[0].lists.list;
							var dataSortField:SortField = new SortField();
							dataSortField.name = "year";
							dataSortField.numeric = true;
							var numericDataSort:Sort = new Sort();
							numericDataSort.fields = [dataSortField];
							tempfreqArray.sort = numericDataSort;
							tempfreqArray.refresh();
							
							for (i = 2009; i < 2011; i++){
								freqArray.addItem({year:i,monthVal:1,month:"jan",frequency:0});
								freqArray.addItem({year:i,monthVal:2,month:"feb",frequency:0});
								freqArray.addItem({year:i,monthVal:3,month:"mar",frequency:0});
								freqArray.addItem({year:i,monthVal:4,month:"apr",frequency:0});
								freqArray.addItem({year:i,monthVal:5,month:"may",frequency:0});
								freqArray.addItem({year:i,monthVal:6,month:"jun",frequency:0});
								freqArray.addItem({year:i,monthVal:7,month:"jul",frequency:0});
								freqArray.addItem({year:i,monthVal:8,month:"aug",frequency:0});
								freqArray.addItem({year:i,monthVal:9,month:"sept",frequency:0});
								freqArray.addItem({year:i,monthVal:10,month:"oct",frequency:0});
								freqArray.addItem({year:i,monthVal:11,month:"nov",frequency:0});
								freqArray.addItem({year:i,monthVal:12,month:"dec",frequency:0});
							}
							for (i = 0; i < freqArray.length; i++){
							}
							for (i = 0; i < tempfreqArray.length; i++){
								for (var j:uint = 0; j < freqArray.length; j++){
									if ((freqArray[j].month == tempfreqArray[i].month)&&
										(freqArray[j].year == tempfreqArray[i].year)){
										freqArray[j].frequency = tempfreqArray[i].frequency
									}
								}
							}
							
							var dataSortField4:SortField = new SortField();
							dataSortField4.name = "year";
							dataSortField4.numeric = true;
							var dataSortField2:SortField = new SortField();
							dataSortField2.name = "monthVal";
							dataSortField2.numeric = true;
							dataSortField2.descending = false;
							var numericDataSort2:Sort = new Sort();
							numericDataSort2.fields = [dataSortField4,dataSortField2];
							freqArray.sort = numericDataSort2;
							freqArray.refresh();
							
							proc = false;
							for (i = 0; i < freqArray.length; i++){
								for (p = 0; p < displayArray.length; p++){
									if ((displayArray[p].year == freqArray[i].year)&&
										(displayArray[p].month == freqArray[i].month)){
										setVal(p,currentlySearching,freqArray[i].frequency);
										proc = true;
									}
								}
								if (proc == false){
									addBlankYearMonth(freqArray[i].year,freqArray[i].month,freqArray[i].monthVal);
									setVal(displayArray.length-1,currentlySearching,freqArray[i].frequency);
								}	
							}
							var dataSortField4:SortField = new SortField();
							dataSortField4.name = "year";
							dataSortField4.numeric = true;
							var dataSortField2:SortField = new SortField();
							dataSortField2.name = "monthVal";
							dataSortField2.numeric = true;
							dataSortField2.descending = false;
							var numericDataSort2:Sort = new Sort();
							numericDataSort2.fields = [dataSortField4,dataSortField2];
							displayArray.sort = numericDataSort2;
							displayArray.refresh();
							
							for (i = 0; i < displayArray.length; i++){
								trace (displayArray[i].year.toString() + ", " + displayArray[i].month+ ", " + 
									displayArray[i].frequency);
							}*/
						}
						
					}
					catch(e:Error){
						var stop98:String = "";
					}
				}
				
			
				if (setIndex < searchArray[parentIndex].searches.length-1){
					setIndex++;
					var parentName:String = searchArray[parentIndex].label;
					var setName:String = searchArray[parentIndex].searches[setIndex].label;
					var setSearches:Array = searchArray[parentIndex].searches[setIndex].searches;
					display(parentName,setName,setSearches);
				}
				else {
					var csvText:String = "Name";
					for (i = displayArray.length-1; i >= 0; i--){
						csvText = csvText + "," + displayArray[i].year;
					}
					for (i = 0; i < searchArray[parentIndex].searches.length; i++){
						csvText = csvText + "\r\n" + searchArray[parentIndex].searches[i].label;
						if (i == 0){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val1;
							}	
						}
						if (i == 1){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val2;
							}	
						}
						if (i == 2){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val3;
							}	
						}
						if (i == 3){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val4;
							}	
						}
						if (i == 4){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val5;
							}	
						}
						if (i == 5){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val6;
							}	
						}
						if (i == 6){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val7;
							}	
						}
						if (i == 7){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val8;
							}	
						}
						if (i == 8){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val9;
							}	
						}
						if (i == 9){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val10;
							}	
						}
						if (i == 10){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val11;
							}	
						}
						if (i == 11){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val12;
							}	
						}
						if (i == 12){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val13;
							}	
						}
						if (i == 13){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val14;
							}	
						}
						if (i == 14){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val15;
							}	
						}
						if (i == 15){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val16;
							}	
						}
						if (i == 16){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val17;
							}	
						}
						if (i == 17){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val18;
							}	
						}
						if (i == 18){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val19;
							}	
						}
						if (i == 19){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val20;
							}	
						}
						if (i == 20){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val21;
							}	
						}
						if (i == 21){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val22;
							}	
						}
						if (i == 22){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val23;
							}	
						}
						if (i == 23){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val24;
							}	
						}
						if (i == 24){
							for (var r:Number = displayArray.length-1; r > -1; r--){
								csvText = csvText + "," + displayArray[r].val25;
							}	
						}
					}
					
					if (totalcsvtext == ""){
						totalcsvtext = csvText;
					}
					else {
						totalcsvtext = totalcsvtext + "\r\n" + csvText;
					}
					
					
					
				//	var fileReferenceSave:FileReference = new FileReference();
					//fileReferenceSave.save(csvText,searchArray[parentIndex].label+"Results.txt");
					
					if (parentIndex < searchArray.length-1){
						redoUsedArray();
						eraseAll();
						parentIndex++;
						setIndex = 0;
						var parentName:String = searchArray[parentIndex].label;
						var setName:String = searchArray[parentIndex].searches[setIndex].label;
						var setSearches:Array = searchArray[parentIndex].searches[setIndex].searches;
						display(parentName,setName,setSearches);
					}
					else {
						var fi:File = new File("C:\\Dclinical.txt");
						var st:FileStream = new FileStream();
						st.open(fi,FileMode.WRITE);
						st.writeUTFBytes(totalcsvtext);
						st.close();
						var stop333:String = "";
					}
				}
				
				
				
				
				
				
				
				
			}
			public function eraseAll():void {
				displayArray = new ArrayCollection();
				legendArray = new ArrayCollection();
				//searchTitle.text = "";
				//searchText.text = "";
				legendList.dataProvider = legendArray;
				var dataSortField:SortField = new SortField();
				dataSortField.name = "year";
				dataSortField.numeric = true;
				var numericDataSort:Sort = new Sort();
				numericDataSort.fields = [dataSortField];
				displayArray.sort = numericDataSort;
				displayArray.refresh();
				
				
			}
			public function setVal(p:uint,curSearch:uint,val:uint):void {
				if (curSearch == 1){
					displayArray[p].val1 = val;
				}
				else if (curSearch == 2){
					displayArray[p].val2 = val;
				}
				else if (curSearch == 3){
					displayArray[p].val3 = val;
				}
				else if (curSearch == 4){
					displayArray[p].val4 = val;
				}
				else if (curSearch == 5){
					displayArray[p].val5 = val;
				}
				else if (curSearch == 6){
					displayArray[p].val6 = val;
				}
				else if (curSearch == 7){
					displayArray[p].val7 = val;
				}
				else if (curSearch == 8){
					displayArray[p].val8 = val;
				}
				else if (curSearch == 9){
					displayArray[p].val9 = val;
				}
				else if (curSearch == 10){
					displayArray[p].val10 = val;
				}
				else if (curSearch == 11){
					displayArray[p].val11 = val;
				}
				else if (curSearch == 12){
					displayArray[p].val12 = val;
				}
				else if (curSearch == 13){
					displayArray[p].val13 = val;
				}
				else if (curSearch == 14){
					displayArray[p].val14 = val;
				}
				else if (curSearch == 15){
					displayArray[p].val15 = val;
				}
				else if (curSearch == 16){
					displayArray[p].val16 = val;
				}
				else if (curSearch == 17){
					displayArray[p].val17 = val;
				}
				else if (curSearch == 18){
					displayArray[p].val18 = val;
				}
				else if (curSearch == 19){
					displayArray[p].val19 = val;
				}
				else if (curSearch == 20){
					displayArray[p].val20 = val;
				}
				else if (curSearch == 21){
					displayArray[p].val21 = val;
				}
				else if (curSearch == 22){
					displayArray[p].val22 = val;
				}
				else if (curSearch == 23){
					displayArray[p].val23 = val;
				}
				else if (curSearch == 24){
					displayArray[p].val24 = val;
				}
				else if (curSearch == 25){
					displayArray[p].val25 = val;
				}
			}
			public function addBlankYear(year:uint):void {
				displayArray.addItem({year:year,val1:0,val2:0,val3:0,val4:0,
					val5:0,val6:0,val7:0,val8:0,
					val9:0,val10:0,val11:0,val12:0,val13:0
					,val14:0,val15:0,val16:0,val17:0,val18:0,val19:0,val20:0
					,val21:0,val22:0,val23:0,val24:0,val25:0});
			}
			public function addBlankYearMonth(year:uint,month:String,monthVal:uint):void {
				displayArray.addItem({monthyear:month+"-"+year.toString(),year:year,month:month,monthVal:monthVal,yearmonth:year.toString()+month,val1:0,val2:0,val3:0,val4:0,
					val5:0,val6:0,val7:0,val8:0,
					val9:0,val10:0,val11:0,val12:0,val13:0,val14:0,val15:0,val16:0,val17:0,val18:0,val19:0,val20:0
					,val21:0,val22:0,val23:0,val24:0,val25:0});
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id = "searchDatabase"
					   result="afterSearchDatabase(event);"   resultFormat="array"
					   url = "http://www.myradar.ca/php/frequencyGrapher/searchDataset.php"
					   method="POST" >
			<s:request xmlns="">
				<s1>{s1}</s1>
				<s2>{s2}</s2>
			</s:request>
		</s:HTTPService>
		<s:HTTPService id = "searchDatabase2"
					   result="afterSearchDatabase(event);"   resultFormat="array"
					   url = "http://www.myradar.ca/php/frequencyGrapher/searchDataset2.php"
					   method="POST" >
			<s:request xmlns="">
				<s1>{s1}</s1>
				<s2>{s2}</s2>
			</s:request>
		</s:HTTPService>
		
		<s:HTTPService id = "getDatalist"
					   result="afterGetDatalist(event);"   resultFormat="array"
					   url = "http://www.myradar.ca/php/frequencyGrapher/getDataList.php"
					   method="GET" >
		</s:HTTPService>
		<s:RadioButtonGroup id="radiogroup2"/>
		<s:RadioButtonGroup id="andorgroup"/>
		<s:RadioButtonGroup id="dateRadioGroup"/>
	</fx:Declarations>
	<s:Button x="10" y="27" label="Choose Parse File">
		<s:click>
			var f:File = File.desktopDirectory;
			f.browseForOpen("Select file to open", [textFilter]);
			f.addEventListener(Event.SELECT, function (event:Event):void {
			var fs:FileStream = new FileStream();
			fs.open(event.target as File, FileMode.READ);
			parseDocument(fs.readUTFBytes(fs.bytesAvailable));
			choice1.text = "CHOSEN!";
			fs.close();
			});
		</s:click>
	</s:Button>   
	<s:Button x="180" y="267"  click="loaddatasource();" label="Chose Dataset">
	</s:Button>
	<s:List id="exsistlist"  width="454" height="174"
			contentBackgroundAlpha="0.0" contentBackgroundColor="#000000"
			dataProvider="{preArray}" horizontalCenter="-248" itemRenderer="dataitem"
			labelField="name" textAlign="center" verticalCenter="-135"></s:List>
	<s:Label id="choice1" x="142" y="27" width="121" height="22" text="Not Chosen"/>
	<s:List id="legendList" x="515" visible="true"  y="85" labelField="name" dataProvider="{legendArray}"  width="153" height="276"
			skinClass="components.legendskin">
	</s:List>
</s:WindowedApplication>
