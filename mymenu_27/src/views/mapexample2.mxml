<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		  backgroundColor="#e8e8e8" 
		  menuKeyPressed="navigator.pushView(Home)"
		  backKeyPressed="navigator.popView()"
		title="Map Example"  xmlns:components="components.*" >
	<s:navigationContent >
		<components:backbutton width="{this.width*0.15}" 
							   mouseEnabledWhereTransparent="true" height="100%" 
							   mouseDown="navigator.popView();"/>
	</s:navigationContent>
	<s:actionContent>
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import com.mapquest.*;
			import com.mapquest.Config;
			import com.mapquest.LatLng;
			import com.mapquest.tilemap.*;
			import com.mapquest.tilemap.controls.shadymeadow.SMZoomControl;
			import com.mapquest.tilemap.pois.*;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import spark.events.ViewNavigatorEvent;
			private var _sc:ShapeCollection;
			[Bindable]
			public var homeData:ArrayCollection = new ArrayCollection();
			public function onActivate(event:Event):void
			{
				
				homeData = data.homeData;
				if (this.parentApplication.map) {	
					if (!this.uic.getChildByName("myMap")) this.uic.addChild(this.parentApplication.map);
				}
				else {
					if (!this.parentApplication.map) this.parentApplication.makeMap();
					this.uic.addChild(this.parentApplication.map);
				}
				
				if (!this.parentApplication.gpsTried) this.parentApplication.initGPS();
				
				if (this.parentApplication.gpsTried && this.parentApplication.gpsIsSupported) {
					this.parentApplication.setGpsLatLng();
				}
				else {
				}			
				
				
				this.parentApplication.removeShapesFromMap();
				this._sc = new ShapeCollection();
				this._sc.name = "searchShapeCollection";
				for (var i:uint = 0; i < homeData.length; i++){
					var p:Poi = new Poi(new LatLng(0,0));
					p.infoWindowTitleText = homeData[i].business_name;
					p.latLng = LatLng(new LatLng(homeData[i].lat,homeData[i].longa))
					p.infoContent = "Address: " + homeData[i].business_address1+", "+
						homeData[i].business_city+", "+homeData[i].business_locality+", "+
						homeData[i].business_postalcode;
					if (this.parentApplication.applicationDPI >= 240) {
						var io:PinMapIcon = (p.icon as PinMapIcon);
						p.icon = io;
						(p.icon as PinMapIcon).gradientBaseColors = [0X000000, 0x0cb8e9];
					}
					this._sc.add(p);	
				}
				this.parentApplication.map.addShapeCollection(this._sc);
				this.parentApplication.map.bestFit(false,2,12);	
				this.parentApplication.map.size = new Size(this.width,this.height);

				
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>		
	</fx:Declarations>
	<mx:UIComponent id="uic" width="100%" height="100%" x="0" y="0"/>
</s:View>