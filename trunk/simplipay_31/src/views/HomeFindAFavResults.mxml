<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" visible="true"  backgroundColor="#2a3038"
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="onActivate(event)" 
		title="Find-a-Fav" >
	<s:navigationContent >
		<s:Image x="0" y="-2" click="navigator.popView();" mouseDown="gDown(event)"
				 mouseOut="gOut(event)" mouseOver="gOver(event)">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/backbtnLow.png')"
										source240dpi="@Embed('assets/interfaceimages/multi/backbtnMed.png')"
										source320dpi="@Embed('assets/interfaceimages/multi/backbtnHigh.png')"/>
			</s:source>
		</s:Image>
	</s:navigationContent>
	<s:actionContent >	
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.geom.ColorTransform;
			import flash.sensors.Geolocation;
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.geom.ColorTransform;
			import flash.sensors.Geolocation;
			import mx.collections.ArrayCollection;
			import mx.effects.Fade;
			import mx.effects.effectClasses.FadeInstance;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.supportClasses.StyleableTextField;
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			public var profDraging:Boolean = false;
			[Bindable]
			public var locationType:String = "1";
			[Bindable]
			public var currentSelectedLocationName:String = "";
			[Bindable]
			public var currentSelectedWaitTime:String = "7 min";
			[Bindable]
			public var currentSelectedAddress:String = "";
			[Bindable]
			public var mylat:Number = -1;
			[Bindable]
			public var mylong:Number = -1;
			[Bindable]
			public var myradius:Number = 50;
			[Bindable]
			public var radiusOptions:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var mysearch:String = "";
			[Bindable]
			public var findafavArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var emailGo:String = "";
			protected var sqlConnection:SQLConnection;
			protected var g:Geolocation = new Geolocation(); 
			[Bindable]
			public var busy:Boolean = true;
			protected function onUpdate(event:GeolocationEvent):void
			{
					mylat = event.latitude;
					mylong = event.longitude;
			}	
			protected function onRemove(event:ViewNavigatorEvent):void
			{
				g.removeEventListener(GeolocationEvent.UPDATE, onUpdate);                
			}
			public function onActivate(event:Event):void
			{
				
				//data.cat
				getFindaFav.send();	
					
			}
			public function afterGetFindaFav(ev:ResultEvent):void  {
				busy = false;
				findafavArray =  new ArrayCollection();
				try{
					findafavArray = ev.result[0].ress.res;
					storeList.dataProvider = findafavArray;
				}
				catch(e:Error){
					
					findafavArray.addItem(ev.result[0].ress.res);
				}
				//sort array by most recent dates
				
			}
			public function FindaFavListChange(ev:IndexChangeEvent):void {
				if (ev.newIndex != -1){
					navigator.pushView(itemDescription, ev.currentTarget.selectedItems[0]);						
				}
			}
			protected function list_mouseUpHandler(event:MouseEvent):void
			{
				try{
					trace(storeList.scroller.verticalScrollBar.value);
					if(storeList.scroller.verticalScrollBar.value < -90){
						loadingGroup.visible = false;
						//	listData.addItemAt({text:"loading..."},0);
						
					} 
				}
				catch(e:Error){
					
				}
			}
			
			protected function list_mouseMoveHandler(event:MouseEvent):void
			{ 
				try{
					var vScroll:Number = storeList.scroller.verticalScrollBar.value;
					if(vScroll < -20){
						trace(vScroll);
						if(!loadingGroup.visible){
							loadingGroup.visible = true;
							fadeIn.play();
						}
						loadingGroup.y = vScroll*-1 - 60;
						
						if(vScroll < -90){
							trace(arrowImage.rotation); 
							if(arrowImage.rotation == 0)  {
								arrowImage.rotation = 180;
							}
							loadText.text = "Release to refesh...";
							
						}else{
							if(arrowImage.rotation == 180)  {
								arrowImage.rotation = 0;
							}
							loadText.text = "Pull down to refresh";
						}
						
					}else{
						loadingGroup.visible = false;
					}
				}
				catch(e:Error){
					
				}
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function press(event:KeyboardEvent):void {
				if ((event.keyCode == 13)||(event.charCode == 13)){
					//searchClick();
				}
			}
			public function searchClick():void {
				
			}
			public function goFilter():void {
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getFindaFav" method="GET" 
					   resultFormat="array" 
					   url="https://simplipay.ca/php/findafav/getAllFindaFav.php"
					   result="afterGetFindaFav(event)" >	
			<s:request xmlns="">
				<cat>{data.cat}</cat>			
			</s:request>
		</s:HTTPService>
		<s:Fade id='fadeIn' target="{loadingGroup}" duration="500" alphaFrom="0" alphaTo="1"/>
		
	</fx:Declarations>
	<s:Group  top="0" bottom="0" width="100%"  >
		<s:List width="100%" horizontalCenter="0" top="0" bottom="0" contentBackgroundAlpha="1" 
				contentBackgroundColor="#2a3038"   id="storeList" labelField="name"  
				dataProvider="{findafavArray}" itemRenderer="components.findafavResult"
				selectedIndex="1" change="FindaFavListChange(event);" 
				mouseMove="list_mouseMoveHandler(event)" mouseUp="list_mouseUpHandler(event)" >
			
		</s:List>
		<s:HGroup horizontalAlign="center" verticalAlign="middle" width="100%" id="loadingGroup" visible="false" height="50">
			<s:Image id="arrowImage"  source="@Embed('assets/interfaceimages/original/Arrow-double-up-48.png')"/>
			<s:Label id="loadText" color="#FFFFFF" text="Pull down to refresh"/>
		</s:HGroup>
	</s:Group>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>

</s:View>