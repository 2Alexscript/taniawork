<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				autoDrawBackground="false" contentBackgroundAlpha="0" creationComplete="init(event)"
				stateChangeComplete="stateChangedHandler()">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.filters.GlowFilter;
			[Bindable]
			public var bcolor:String = "#FFFFFF";
			[Bindable]
			public var clickStatus:String = "none";
			[Bindable]
			public var listoftemps:ArrayCollection = new ArrayCollection();
			public function profDown(ev:MouseEvent):void {
				var gl:spark.filters.GlowFilter = new GlowFilter(000000,1,5,5,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function profUp(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
				var s:String = "";
				
			}
			protected function stateChangedHandler():void
			{
				/*if(currentState == "selected")
				{
					bcolor = "#B7B7B7";
				}
				else {
					bcolor = "#FFFFFF";
				}*/
			}
			public function gOver(ev:MouseEvent):void {
				var gl:spark.filters.GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(0x0a4972,0.4,200,200,50,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			
			public function changeUser(event:MouseEvent):void
			{
			
			}
			
			public function deleteUser(event:MouseEvent):void
			{
				
			}
			
			public function init(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var s:String = "";
				
				listoftemps = new ArrayCollection();
				for (var i:Number = -20; i < 61; i++){
					listoftemps.addItem({temp:i.toString()+"ÂºC"});
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RadioButtonGroup id="yesnoalertgroup"/>

	</fx:Declarations>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
		<s:State name="up"/>
	</s:states>
	<s:BorderContainer width="100%" height="100%" borderAlpha="1" 
					   backgroundColor.normal="#FFFFFF"
					   backgroundColor.hovered="#FFFFFF"
					   backgroundColor.selected="#e4e4e4"
					   backgroundColor.up="#FFFFFF"
					   color="#363636">
		<s:Group width="98%" horizontalCenter="0" height="50">
			
				<s:Label color="#000000" fontSize="15" fontWeight="bold" text="{data.id}: {data.name}"
						 left="0" verticalCenter="0"></s:Label>
				<s:HGroup right="5" verticalCenter="5">
					<s:Label  fontSize="15" text="{data.goodcount}"
							 color="#1BB73F" fontWeight="bold"></s:Label>
					<s:Label color="#000000"  fontSize="15" text="|"></s:Label>
					<s:Label  fontSize="15" text="{data.badcount}"
							 color="#B30F0F" fontWeight="bold"></s:Label>

				</s:HGroup>
		
		</s:Group>
	</s:BorderContainer>
</s:ItemRenderer>