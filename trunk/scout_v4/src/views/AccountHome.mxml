<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  
		xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:model="model.*" 
		backgroundColor="#FFFFFF" 
		actionBarVisible="false"
		xmlns:BarCode="BarCode.*" 
		xmlns:components="components.*" >
	<fx:Script source="../func/globalFunctions.as"/>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			
			import org.qrcode.QRCode;
			
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.managers.PersistenceManager;
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var togstatus:Boolean = false;
			public function onActivate(event:Event):void
			{
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good login
						var foundactive:Boolean = false;
						for (var i:uint = 0; i < resData.length; i++){
							if (resData[i].active == "yes"){
								foundactive = true;
								emailGo = resData[i].email;
								nameGo = resData[i].name;
							//	var ssadfd:String = "";
							}
						}
					}
					else {}
				}
				catch(e:Error){
					
				}		
					try{
						var code:String = emailGo;
						//this.title = data.name;
						var sp:Sprite = new Sprite();
						var qr:QRCode = new QRCode();
						qr.encode(code+"formalendofstatement");
						var img:Bitmap = new Bitmap(qr.bitmapData);
						img.width = qrholder2.width;
						img.height = qrholder2.width;						
						img.y = this.height/2-(qrholder2.width/1.5);
						sp.addChild(img);
						var u:UIComponent = new UIComponent();
						u.addChild(sp);
						u.horizontalCenter = 0;
						u.verticalCenter = 0;
						u.percentHeight = 100;
						u.percentWidth = 100;
						
						qrholder2.addElement(u);	
					}
					catch(e:Error){
						navigator.popView();
					}
			}
			
			public function usermenuclick():void {
				navigator.pushView(AccountSettings);
			}
			public function logout():void {
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "update localuser set active = 'no' where email = '"+emailGo+"'";
					stmt.execute();
					emailGo = "ERRORBADERRORBAD";
					nameGo = "ERRORBADERRORBAD";
					var saveManager:PersistenceManager = new PersistenceManager();
					saveManager.setProperty("useremail", "ERRORBADERRORBAD");
					//navigator.pushView(Login,{newmode:true});
					this.parentApplication.logout();
				}
				catch(e:Error){
					this.parentApplication.logout();
				}
			}
			
			protected function locationsClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.pushView(StoresHome);
			}
			
			protected function closeQR():void
			{
				// TODO Auto-generated method stub
				qrholder.visible = false;
			}
			protected function openQR():void
			{
				// TODO Auto-generated method stub
				qrholder.visible = true;
			}
			
			public function settingsClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.pushView(AccountSettings);
			}
			
			protected function rewardsClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.pushView(LoyaltyHome);
			}
			
			protected function treatsClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function activityClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
		]]>
	</fx:Script>
	<s:VGroup gap="0" width="{this.width}" height="100%" verticalAlign="middle"  horizontalAlign="center"  >
		<s:HGroup gap="0" width="{this.width}" height="{this.height*0.25}"  verticalAlign="middle" >
			<s:Group width="{this.width*0.4}" >
				<s:Image horizontalCenter="0" verticalCenter="0" 
						 mouseDown="gDown(event);" mouseOver="gOver(event);"
						 mouseOut="gOut(event);" mouseUp="gOut(event);">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/homepic.png')"
												source240dpi="@Embed('assets/320/homepic.png')"
												source320dpi="@Embed('assets/320/homepic.png')"
												source480dpi="@Embed('assets/320/homepic.png')"
												source640dpi="@Embed('assets/320/homepic.png')"/>
					</s:source>
				</s:Image>
			</s:Group>
			<s:VGroup gap="10" width="{this.width*0.6}"  verticalAlign="middle" horizontalAlign="left" >
				<s:Label color="#737171" text="{nameGo}" styleName="textsize8" verticalAlign="middle"/>
				<s:Label color="#737171" text="Edmonton" styleName="textsize1" verticalAlign="middle"/>
			</s:VGroup>
		</s:HGroup>
		
		<s:Group height="{this.height*0.75}"   width="100%">
			<s:Image horizontalCenter="0" verticalCenter="0" height="100%" scaleMode="zoom"  >
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/edmonton.jpg')"
											source240dpi="@Embed('assets/320/edmonton.jpg')"
											source320dpi="@Embed('assets/320/edmonton.jpg')"
											source480dpi="@Embed('assets/320/edmonton.jpg')"
											source640dpi="@Embed('assets/320/edmonton.jpg')"/>
				</s:source>
			</s:Image>
			<s:VGroup gap="0" width="100%"  top="0"  
					  height="{this.height*(7/12)}" 
					  verticalAlign="middle"  
					  horizontalAlign="center"  >
				
				<s:HGroup height="30%" width="100%">
					<s:Group width="50%" height="100%">
						<s:Image bottom="0" horizontalCenter="0" click="locationsClick(event)"
								 mouseDown="gDown(event);" mouseOver="gOver(event);"
								 mouseOut="gOut(event);" mouseUp="gOut(event);">
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/locations.png')"
														source240dpi="@Embed('assets/320/locations.png')"
														source320dpi="@Embed('assets/320/locations.png')"
														source480dpi="@Embed('assets/320/locations.png')"
														source640dpi="@Embed('assets/320/locations.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
					<s:Group width="50%" height="100%">
						<s:Image top="0" horizontalCenter="0"   click="settingsClick(event)"
								 mouseDown="gDown(event);" mouseOver="gOver(event);"
								 mouseOut="gOut(event);" mouseUp="gOut(event);">
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/settings.png')"
														source240dpi="@Embed('assets/320/settings.png')"
														source320dpi="@Embed('assets/320/settings.png')"
														source480dpi="@Embed('assets/320/settings.png')"
														source640dpi="@Embed('assets/320/settings.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
				</s:HGroup>
				
				
				
				<s:HGroup height="30%" width="100%">
					<s:Group width="100%" height="100%">
						<s:Image verticalCenter="0" horizontalCenter="0"  click="rewardsClick(event)"
								 mouseDown="gDown(event);" mouseOver="gOver(event);"
								 mouseOut="gOut(event);" mouseUp="gOut(event);">
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/rewards.png')"
														source240dpi="@Embed('assets/320/rewards.png')"
														source320dpi="@Embed('assets/320/rewards.png')"
														source480dpi="@Embed('assets/320/rewards.png')"
														source640dpi="@Embed('assets/320/rewards.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
				</s:HGroup>
				
				
				
				
				<s:HGroup height="30%" width="100%">
					<s:Group width="50%" height="100%">
						<s:Image top="0" horizontalCenter="0" click="treatsClick(event)" 
								 
								 enabled="false" alpha="0.6"
								
								 mouseDown="gDown(event);" mouseOver="gOver(event);"
								 mouseOut="gOut(event);" mouseUp="gOut(event);">
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/treats.png')"
														source240dpi="@Embed('assets/320/treats.png')"
														source320dpi="@Embed('assets/320/treats.png')"
														source480dpi="@Embed('assets/320/treats.png')"
														source640dpi="@Embed('assets/320/treats.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
					<s:Group width="50%" height="100%">
						<s:Image bottom="0" horizontalCenter="0"  click="activityClick(event)"
								  enabled="false" alpha="0.6"
								 mouseDown="gDown(event);" mouseOver="gOver(event);"
								 mouseOut="gOut(event);" mouseUp="gOut(event);">
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/320/activity.png')"
														source240dpi="@Embed('assets/320/activity.png')"
														source320dpi="@Embed('assets/320/activity.png')"
														source480dpi="@Embed('assets/320/activity.png')"
														source640dpi="@Embed('assets/320/activity.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
				</s:HGroup>

			</s:VGroup>
			
			<s:BorderContainer height="{this.height/6}" width="100%" bottom="0"  
							   mouseDown="gDown(event);" mouseOver="gOver(event);"
							   mouseOut="gOut(event);" mouseUp="gOut(event);"  click="openQR();"
							   backgroundAlpha="0.75" borderVisible="false" backgroundColor="#0aaae5">
				<s:Label text="TAP TO SCAN" color="#FFFFFF" styleName="textsize8" 
						 mouseEnabled="false" horizontalCenter="0" verticalCenter="0"/>
			</s:BorderContainer>
		</s:Group>

	</s:VGroup>
	<s:BorderContainer width="100%" height="100%" id="qrholder" visible="false"
		backgroundAlpha="0.5"  backgroundColor="#000000" 
		borderVisible="false">
		<s:BorderContainer id="qrholder2" width="85%" mouseDownOutside="closeQR()"  height="80%" backgroundColor="#FFFFFF"
						   backgroundAlpha="1" borderVisible="false"
						   horizontalCenter="0" verticalCenter="0">
			<s:Label text="Scan Now" color="#3c4042" styleName="textsize18" top="50"  fontWeight="bold"
					 mouseEnabled="false" horizontalCenter="0"/>
			<s:BorderContainer height="12%" width="100%" bottom="0"    click="closeQR()"
							   mouseDown="gDown(event);" mouseOver="gOver(event);"
							   mouseOut="gOut(event);" mouseUp="gOut(event);"
							   backgroundAlpha="0.75" borderVisible="false" backgroundColor="#0aaae5">
			<s:Label text="Close" color="#FFFFFF" styleName="textsize6"
					 mouseEnabled="false" horizontalCenter="0" verticalCenter="0"/>
		</s:BorderContainer>
		</s:BorderContainer>
		
	</s:BorderContainer>
	
</s:View>