<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"  
		xmlns:components="components.*" 
		backgroundColor="#c5c5c5"
		backKeyPressed="gobacktohome(event)"
	    menuKeyPressed="menupress(event)"
		viewActivate="onActivate(event)" 
		mouseDown="listFingerDown();" 
		mouseUp="listFingerUp();"
		mouseOut="listFingerUp();"
		title="Activity">
	<s:navigationContent >
		<components:backbutton width="{this.width*0.15}" 
							   mouseEnabledWhereTransparent="true"
							   height="100%"   mouseDown="gobacktohome2();"/>
	</s:navigationContent>
	<s:actionContent></s:actionContent>
	<fx:Script source="../func/global.as"/>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.MouseEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.rpc.events.ResultEvent;
			import spark.events.ViewNavigatorEvent;
			public var profDraging:Boolean = false;
			[Bindable]
			public var activityArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var sortMode:Number = 0;
			[Bindable]
			public var reverse:Boolean = false;
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var done:Boolean = false;
			[Bindable]
			public var prefound:Boolean = false;
			public function onActivate(event:Event):void
			{	
				enableHardwareKeyListeners();
				navigator.activeView.mouseChildren = true;
				busy = true;
				setLoginVars();
				getactivity.send();
			}
			public function afterGetActivity(ev:ResultEvent):void  {
				busy = false;
				var old:Boolean = false;
				try{
					if (ev.result[0].response == "old"){
						old = true;
					}
				}
				catch(e:Error){
					
				}
				
				if (old){
					updatecont.visible = true;
				}
				else if (isFingerDown == false){
					activityArray =  new ArrayCollection();
					try{
						activityArray = ev.result[0].ress.res;					
					}
					catch(e:Error){
						try{
							activityArray.addItem( ev.result[0].ress.res);
						}
						catch(e:Error){}
					}	
				}
					
					noactivity.visible = false;
					if (activityArray.length <= 0){
						noactivity.visible = true;
					}
					else {
						var dataSortField:mx.collections.SortField = new mx.collections.SortField();
						var stringDataSort:Sort = new Sort();
						dataSortField.name = "business_name";
						dataSortField.numeric = false;
						stringDataSort.fields = [dataSortField];
						activityArray.sort = stringDataSort;
						activityArray.refresh();
						activitylist.dataProvider = activityArray;
				}	
			}
			[Bindable]
			public var isFingerDown:Boolean = false;
			public function listFingerDown():void {
				isFingerDown = true;
			}
			public function listFingerUp():void {
				isFingerDown = false;
			}
			public function gobacktohome(event:FlexEvent):void {
				event.preventDefault();
				gobacktohome2();
			}
			public function gobacktohome2():void {
				var slideTrans:SlideViewTransition = new SlideViewTransition();
				slideTrans.direction = ViewTransitionDirection.RIGHT;
				slideTrans.mode = SlideViewTransitionMode.UNCOVER;  //or COVER and PUSH modes
				navigator.pushView(Home, null,null,slideTrans);
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getactivity" method="GET" 
					   resultFormat="array" 	
					   url="http://www.scoutcard.ca/php/mobile_v2/getActivityList.php"
					   result="afterGetActivity(event)" >	
			<s:request xmlns="">
				<emailGo>{emailGo}</emailGo>	
				<versionnumber>2</versionnumber>	
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:VGroup width="100%" gap="0" height="100%" horizontalAlign="center">
		<s:VGroup width="100%" height="100%" gap="0" horizontalAlign="center">
			<s:Group width="100%" height="100%" visible="true" id="listCont">
				<s:Group   top="0" bottom="0" width="100%"  >
					<s:List width="100%" height="100%" horizontalCenter="0"
							top="0" bottom="0" contentBackgroundAlpha="1" 
							id="activitylist" labelField="name"  contentBackgroundColor="#c5c5c5"  
							dataProvider="{activityArray}" itemRenderer="components.activityListItem"
							selectedIndex="1" 
							horizontalScrollPolicy="off"  >
						<s:layout>
							<s:VerticalLayout gap="{15/(320/Capabilities.screenDPI)}"
											  paddingTop="{15/(320/Capabilities.screenDPI)}">
							</s:VerticalLayout>
						</s:layout>
					</s:List>
				</s:Group>
				<s:Label text="You haven't visited any Scout locations yet!" 
						 visible="false" id="noactivity" width="75%" textAlign="center" 
						 horizontalCenter="0"  verticalCenter="0" />
			</s:Group>	
			</s:VGroup>
		</s:VGroup>
		<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
	<components:updateContainer id="updatecont" visible="false"/>
</s:View>