<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:controls="com.flexcapacitor.controls.*"
		xmlns:components="components.*" xmlns:cs="cs.*"
		backgroundAlpha="1"
		backgroundColor="#e5e5e5"
		contentBackgroundAlpha="1"
		contentBackgroundColor="#e5e5e5"
		viewActivate="init()">
	<s:navigationContent >
		<components:BackButton width="{this.width*0.15}" 
							   mouseEnabledWhereTransparent="true"
							   height="100%" mouseDown="navigator.popView(); "/>
	</s:navigationContent>
	<s:actionContent></s:actionContent>
	<fx:Script source="../func/global.as"/>
	<fx:Script source="../func/menuglobal.as"/>
	<fx:Script source="../func/listLoading.as"/>
	<fx:Script>
		<![CDATA[
			import flash.events.KeyboardEvent;
			import flash.events.MouseEvent;
			import flash.filesystem.File;	
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.rpc.events.ResultEvent;
			import spark.collections.SortField;
			import views.MenuDescription;
			[Bindable]
			public var locationid:String = "";
			[Bindable]
			public var reverse:Boolean = false;
			[Bindable]
			public var locatoinidGo:Number = -1;
			[Bindable]
			public var currentselectmode:Number = 0;
			[Bindable]
			public var backuplistdata:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var ratingpriceoptionval:uint = 0;
			[Bindable]
			public var filterData1:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData2:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData3:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData4:ArrayCollection = new ArrayCollection();
			protected function init():void
			{
				goingtonext = false;
				this.parentDocument.showBusy();
				warn.visible = false;
				setLoginVars();
				filterData1 = new ArrayCollection();
				filterData2 = new ArrayCollection();
				filterData3 = new ArrayCollection();
				filterData1.addItem({name:"All"});
				filterData2.addItem({name:"Highest"});
				filterData2.addItem({name:"Lowest"});
				filterData3.addItem({name:"Highest"});
				filterData3.addItem({name:"Lowest"});	
				locationid = data.locationid;
				getMenu.send();
				filterarea.visible = true;
			}	
			
			public function afterGetMenu(ev:ResultEvent):void
			{	
				this.parentApplication.hideloading();
				filterarea.visible = true;
				listData = new ArrayCollection();
				modData = new ArrayCollection();
				resData = new ArrayCollection();
				try{			
					listData = ev.result[0].ress.res;		
				}
				catch(e:Error){
					try{
						listData.addItem(ev.result[0].ress.res);
					}
					catch(e:Error){}}
				
				
				if (listData.length > 0){
					this.title = listData[0].business_name;
				}
				
				try{			
					resData = ev.result[0].ress2.res2;		
				}
				catch(e:Error){
					try{	
						resData.addItem(ev.result[0].ress2.res2);
					}
					catch(e:Error){}}
				
				try{			
					modData = ev.result[0].ress3.res3;		
				}
				catch(e:Error){
					try{	
						modData.addItem(ev.result[0].ress3.res3);
					}
					catch(e:Error){}}

				syncmenurestrictions();
				
				if (listData.length <= 0){
					warn.visible = true;
				}
				else {
					filterList1.visible = true;
					filterList2.visible = false;
					filterList3.visible = false;
					selectview1.alpha = 1;
					selectview2.alpha = 0;
					selectview3.alpha = 0;
					selectview1.mouseEnabled = true;
					selectview1.mouseEnabledWhereTransparent = true;					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
					generateCategoryFilterArray();
					populatelist(0);
				}
				this.parentDocument.hideBusy();
			} 
			public function generateCategoryFilterArray():void {
				var tempfilter2:ArrayCollection = new ArrayCollection();
				if (listData.length > 0){
					for (var i:uint =  0; i < listData.length; i++){
						var tempfail:Boolean = false;
						for (var j:uint = 0; j < tempfilter2.length; j++){
							if (tempfilter2[j].name == listData[i].categoryname){
								tempfail = true;
							}
						}
						if (tempfail == false){
							tempfilter2.addItem({name:listData[i].categoryname});
						}
						
					}
				}
				
				var filtercatsf:SortField = new SortField();
				filtercatsf.name = "name";
				filtercatsf.numeric = false;
				var fcst:Sort = new Sort();
				fcst.fields = [filtercatsf];
				tempfilter2.sort = fcst;
				tempfilter2.refresh();
				
				
				filterData1 = new ArrayCollection();
				filterData1.addItem({name:"All"});
				for (var k:uint = 0; k < tempfilter2.length; k++){
					filterData1.addItem({name:tempfilter2[k].name});
				}
				catitemarray = filterData1;
			}
			public function populatelist(u:uint):void {
				var srt:Sort = new Sort();
				var i:uint = 0;
				var lastcat:String = "";
				addcatsep = false;
				if ((u == 1)||(u==0)){
					addcatsep = true;
					srt.fields = [new SortField("categoryname")];
					//change below 
					addcatsep = true;
					dataList.top = -50/(320/Capabilities.screenDPI);
				}
				else if (u == 2){
					srt.fields = [new SortField("rating",!reverse,true)];
					addcatsep = false;
					dataList.top = 150/(320/Capabilities.screenDPI);
				}
				else if (u == 3){
					srt.fields = [new SortField("cost",!reverse,true)];
					addcatsep = false;
					dataList.top = 150/(320/Capabilities.screenDPI);
				}
				else if (u == 33){
					addcatsep = true;
					srt.fields = [new SortField("categoryname")];
					//change below
					addcatsep = true;
					dataList.top = -50/(320/Capabilities.screenDPI);
				}
				listData.sort = srt;
				listData.refresh();
				startapplyingdata();	
			}
			public var goingtonext:Boolean = false;
			public function dataListClick():void {	
				if (goingtonext == false){
					goingtonext = true;
					if (dataList.selectedIndex != -1){
						try{
							data.homefilterarray = [];
						}
						catch(e:Error){}
						if (dataList.selectedItem.name != 'catsep'){
							navigator.pushView(MenuDescription, dataList.selectedItem);	
						}
					}
					else {
						goingtonext = false;
					}
				}
			}
			public function searchClick():void
			{
				listData.filterFunction = filterCompleted;
				listData.refresh();
				startapplyingdata();	
			}
			private function filterCompleted(item:Object):Boolean{
				return true;
			}
			private function returnall(item:Object):Boolean{
				return true;
			}
			public function press(event:KeyboardEvent):void {
				searchClick();
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}
			public function filterClick(u:uint):void {
				listData.filterFunction = allFilter;
				listData.refresh();
				
				
				var fadein:Fade = new Fade();
				fadein.alphaFrom = 0;
				fadein.alphaTo = 1;
				fadein.duration = 500;
				
				var fadeout:Fade = new Fade();
				fadeout.alphaFrom = 1;
				fadeout.alphaTo = 0;
				fadeout.duration = 500;
				
				if ((currentselectmode == 1)&&(currentselectmode != u)){
					fadeout.targets = [filterimage1];
				}
				else if ((currentselectmode == 2)&&(currentselectmode != u)){
					fadeout.targets = [filterimage2];
				}
				else if ((currentselectmode == 3)&&(currentselectmode != u)){
					fadeout.targets = [filterimage3];
				}
				
				if ((u == 1)&&(currentselectmode != u)){
					sv1label.text = "All";
					sv2label.text = "Highest";
					sv3label.text = "Highest";
					filterList1.visible = true;
					filterList2.visible = false;
					filterList3.visible = false;
					
					selectview1.alpha = 1;
					selectview2.alpha = 0;
					selectview3.alpha = 0;
					
					fadein.targets = [filterimage1];
					
					selectview1.mouseEnabled = true;
					selectview1.mouseEnabledWhereTransparent = true;
					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
				}
				else if ((u == 2)&&(currentselectmode != u)){
					sv1label.text = "All";
					sv2label.text = "Highest";
					sv3label.text = "Highest";
					filterList1.visible = false;
					filterList2.visible = true;
					filterList3.visible = false;
					
					selectview1.alpha = 0;
					selectview2.alpha = 1;
					selectview3.alpha = 0;
					
					fadein.targets = [filterimage2];
					
					selectview1.mouseEnabled = false;
					selectview1.mouseEnabledWhereTransparent = false;
					
					selectview2.mouseEnabled = true;
					selectview2.mouseEnabledWhereTransparent = true;
					
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
					
					
				}
				else if ((u == 3)&&(currentselectmode != u)){
					sv1label.text = "All";
					sv2label.text = "Highest";
					sv3label.text = "Highest";
					filterList1.visible = false;
					filterList2.visible = false;
					filterList3.visible = true;
					
					selectview1.alpha = 0;
					selectview2.alpha = 0;
					selectview3.alpha = 1;
					
					fadein.targets = [filterimage3];
					
					selectview1.mouseEnabled = false;
					selectview1.mouseEnabledWhereTransparent = false;
					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					
					selectview3.mouseEnabled = true;
					selectview3.mouseEnabledWhereTransparent = true;
				}
				
				
				if (currentselectmode != u){
					reverse = false;
					fadeout.play();
					fadein.play();
					currentselectmode = u;
					populatelist(currentselectmode);
					
				}
				
				
			}
			public function goFilterScreen(u:uint):void {
				if (clickingsvi == false){
					if (dropDownContainer.visible){
						//close dropdown menu
						var fadeout:Fade = new Fade();
						fadeout.alphaFrom = 1;
						fadeout.alphaTo = 0;
						fadeout.duration = 500;
						fadeout.target = dropDownContainer;
						fadeout.play();
						fadeout.addEventListener(EffectEvent.EFFECT_END, afterdrophide);
					}
					else{
						//show dropdown menu
						var fadein:Fade = new Fade();
						fadein.alphaFrom = 0;
						fadein.alphaTo = 1;
						fadein.duration = 500;
						dropDownContainer.visible = true;
						fadein.target = dropDownContainer;
						fadein.play();
					}	
				}
				else {
					clickingsvi = false;
				}
				
			}
			
			public function filter1Click():void {
				try{
					sv1label.text = filterList1.selectedItem.name;
					goFilterScreen(1);
					listData.filterFunction = catFilter;
					listData.refresh();
					
					//add filter here
					currentselectmode = 1
					populatelist(33);
				}
				catch(e:Error){
					
				}	
			}
			private function allFilter(item:Object):Boolean{
				return true;
			}
			private function catFilter(item:Object):Boolean{
				if (sv1label.text.toLowerCase() == "all"){
					return true;
				}
				else {
					if((item.categoryname.toString().toLowerCase().indexOf(	sv1label.text.toLowerCase()) != -1)){
						return true;
					}	
				}
				return false;
			}
			public function filter2Click():void {
				if (filterList2.selectedItem.name == "Highest"){
					
					currentselectmode = 2;
					reverse = false;
				}
				else if (filterList2.selectedItem.name == "Lowest"){
					
					currentselectmode = 2;
					reverse = true;
				}
				populatelist(2);
				sv2label.text = filterList2.selectedItem.name;
				goFilterScreen(2);
				
			}
			public function filter3Click():void {
				
				if (filterList3.selectedItem.name == "Highest"){
					
					currentselectmode = 3;
					reverse = false;
				}
				else if (filterList3.selectedItem.name == "Lowest"){
					
					currentselectmode = 3;
					reverse = true;
				}
				populatelist(3);
				sv3label.text = filterList3.selectedItem.name;
				goFilterScreen(3);
				
			}
			public var clickingsvi:Boolean = false;
			public function svilabelclick():void {
				clickingsvi = true;
				if (dropDownContainer.visible){
					//close dropdown menu
					var fadeout:Fade = new Fade();
					fadeout.alphaFrom = 1;
					fadeout.alphaTo = 0;
					fadeout.duration = 500;
					fadeout.target = dropDownContainer;
					fadeout.play();
					fadeout.addEventListener(EffectEvent.EFFECT_END, afterdrophide);
				}
			}
			public function afterdrophide(ev:EffectEvent):void {
				dropDownContainer.visible = false;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getMenu" method="GET" resultFormat="array"
					   url="http://www.groovedish.com/php/mobile/getMenu.php"
					   result="afterGetMenu(event)" >
			<s:request xmlns="">
				<locationid>{locationid}</locationid>		
				<categoryid>{data.categoryid}</categoryid>	
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
		<s:Group width="100%" height="100%" >
			<s:List right="{6/(320/Capabilities.screenDPI)}"
					top="{-50/(320/Capabilities.screenDPI)}"
					bottom="0"
					left="{6/(320/Capabilities.screenDPI)}" horizontalCenter="0"
					id="dataList" useVirtualLayout="false" 
					verticalScrollPolicy="on" 
					horizontalScrollPolicy="off" 
					contentBackgroundAlpha="0" 
					creationComplete="listComplete(event)"
					skinClass="skins.MenuTitleSkin"
					selectedIndex="1" change="dataListClick();"
					click="dataListClick();"/>
			<s:Group id="filterarea" width="100%" top="0" height="{75/(320/Capabilities.screenDPI)}">
				<s:Rect width="100%"  height="100%">
					<s:fill>
						<s:SolidColor alpha="1" color="#8eddce"/>
					</s:fill>
				</s:Rect>
				<s:BitmapImage id="filterimage1" horizontalCenter="0"  
							contentLoader="{s_imageCache}" alpha="1"
							verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/catratingpriceoption1.png')"
												source240dpi="@Embed('../assets/240/catratingpriceoption1.png')"
												source320dpi="@Embed('../assets/320/catratingpriceoption1.png')"
												source480dpi="@Embed('../assets/480/catratingpriceoption1.png')"
												source640dpi="@Embed('../assets/640/catratingpriceoption1.png')"/>
					</s:source>
				</s:BitmapImage>
				<s:BitmapImage id="filterimage2" horizontalCenter="0" 
							   contentLoader="{s_imageCache}" alpha="0"  
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/catratingpriceoption2.png')"
												source240dpi="@Embed('../assets/240/catratingpriceoption2.png')"
												source320dpi="@Embed('../assets/320/catratingpriceoption2.png')"
												source480dpi="@Embed('../assets/480/catratingpriceoption2.png')"
												source640dpi="@Embed('../assets/640/catratingpriceoption2.png')"/>
					</s:source>			
				</s:BitmapImage>
				<s:BitmapImage id="filterimage3" horizontalCenter="0"  
							   contentLoader="{s_imageCache}" alpha="0"  
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/catratingpriceoption3.png')"
												source240dpi="@Embed('../assets/240/catratingpriceoption3.png')"
												source320dpi="@Embed('../assets/320/catratingpriceoption3.png')"
												source480dpi="@Embed('../assets/480/catratingpriceoption3.png')"
												source640dpi="@Embed('../assets/640/catratingpriceoption3.png')"/>
					</s:source>
				</s:BitmapImage>		
				<s:HGroup width="{filterimage1.width}" horizontalCenter="0" height="100%" >
					<s:Group width="33%"  height="100%" id="toggleclick1" click="filterClick(1);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
					<s:Group width="33%"  height="100%" id="toggleclick2" click="filterClick(2);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
					<s:Group width="33%"  height="100%" id="toggleclick3" click="filterClick(3);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
				</s:HGroup>
			</s:Group>
			<s:Group width="100%" maxWidth="{this.width}" top="{75/(320/Capabilities.screenDPI)}" height="{75/(320/Capabilities.screenDPI)}">
				<s:Rect width="100%"  height="100%">
					<s:fill>
						<s:SolidColor alpha="1" color="#f2f2f2"/>
					</s:fill>
				</s:Rect>
				<s:Image right="{29/(320/Capabilities.screenDPI)}" mouseEnabled="false" 
						 visible="{dropDownContainer.alpha == 1}" rotation="90"  verticalCenter="0" contentLoader="{s_imageCache}">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/dropdown.png')"
												source240dpi="@Embed('../assets/240/dropdown.png')"
												source320dpi="@Embed('../assets/320/dropdown.png')"
												source480dpi="@Embed('../assets/480/dropdown.png')"
												source640dpi="@Embed('../assets/640/dropdown.png')"
												/>
					</s:source>
				</s:Image>
				<s:Image right="{29/(320/Capabilities.screenDPI)}" mouseEnabled="false" 
						 visible="{dropDownContainer.alpha == 0}"  verticalCenter="0" contentLoader="{s_imageCache}">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/dropdown.png')"
												source240dpi="@Embed('../assets/240/dropdown.png')"
												source320dpi="@Embed('../assets/320/dropdown.png')"
												source480dpi="@Embed('../assets/480/dropdown.png')"
												source640dpi="@Embed('../assets/640/dropdown.png')"
												/>
					</s:source>
				</s:Image>
				<s:HGroup id="selectview1" visible="true"  mouseDown="goFilterScreen(1);" maxWidth="{this.width}"    alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="{30/(320/Capabilities.screenDPI)}" gap="{15/(320/Capabilities.screenDPI)}" verticalAlign="middle">
					<s:Label left="{29/(320/Capabilities.screenDPI)}" mouseEnabled="false"  color="#2dad9e" 
							 styleName="textsize1" text="Sort" verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="{115/(320/Capabilities.screenDPI)}" id="sv1label" mouseEnabled="false"  
							 color="#4d4d4d" fontWeight="bold" styleName="textsize1"
							 text="All" verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
				<s:HGroup id="selectview2"  mouseDown="goFilterScreen(2);" maxWidth="{this.width}"   alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="{30/(320/Capabilities.screenDPI)}" gap="{15/(320/Capabilities.screenDPI)}" verticalAlign="middle">
					<s:Label left="{29/(320/Capabilities.screenDPI)}" mouseEnabled="false"  color="#2dad9e" styleName="textsize1" text="Sort"
							 verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="{107/(320/Capabilities.screenDPI)}" id="sv2label" width="{124/(320/Capabilities.screenDPI)}" color="#4d4d4d" fontWeight="bold"
							 mouseEnabled="false" styleName="textsize1" text="Highest"
							 verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
				<s:HGroup id="selectview3"  mouseDown="goFilterScreen(3);" maxWidth="{this.width}"   alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="{30/(320/Capabilities.screenDPI)}" gap="{15/(320/Capabilities.screenDPI)}" verticalAlign="middle">
					<s:Label left="{29/(320/Capabilities.screenDPI)}" color="#2dad9e" mouseEnabled="false" styleName="textsize1"
							 text="Sort" verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="{93/(320/Capabilities.screenDPI)}" id="sv3label" width="{117/(320/Capabilities.screenDPI)}" color="#4d4d4d" fontWeight="bold" mouseEnabled="false"
							 styleName="textsize1" text="Highest" verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
			</s:Group>
			
		
		
		
		</s:Group>
	<s:Label color="#FFFFFF"  id="warn" visible="false" horizontalCenter="0" 
			 styleName="textsize20"  text="No Items Available" verticalCenter="0"/>
	<s:Group id="nofind" visible="false" width="100%" height="100%">
		<s:Rect width="100%"  height="100%">
			<s:fill>
				<s:SolidColor alpha="1" color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:Label horizontalCenter="0" verticalCenter="0" verticalAlign="middle"
				 text="No Results Found" color="#8c8c8c"/>
	</s:Group>
	
	<s:Group id="dropDownContainer"  visible="false" alpha="0" width="100%" bottom="0" top="{filterarea.height*2-2}">
		<s:Rect width="100%"  height="100%">
			<s:fill>
				<s:SolidColor alpha="0.8" color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:List width="100%" horizontalCenter="0" height="100%"
				contentBackgroundAlpha="0" visible="true"
				id="filterList1"  horizontalScrollPolicy="off" 
				dataProvider="{filterData1}"
				itemRenderer="components.dropdownitem"
				click="filter1Click();" >
			<s:layout>
				<s:VerticalLayout horizontalAlign="contentJustify"  gap="0"/>
			</s:layout>
		</s:List>
		<s:List width="100%" horizontalCenter="0" height="100%"
				contentBackgroundAlpha="0" visible="false"
				id="filterList2"  horizontalScrollPolicy="off" 
				dataProvider="{filterData2}"
				itemRenderer="components.dropdownitem"
				click="filter2Click();" >
			<s:layout>
				<s:VerticalLayout horizontalAlign="contentJustify" gap="0"/>
			</s:layout>
		</s:List>
		<s:List width="100%" horizontalCenter="0" height="100%"
				contentBackgroundAlpha="0" visible="false"
				id="filterList3"  horizontalScrollPolicy="off" 
				dataProvider="{filterData3}"
				itemRenderer="components.dropdownitem"
				click="filter3Click();" >
			<s:layout>
				<s:VerticalLayout horizontalAlign="contentJustify" gap="0"/>
			</s:layout>
		</s:List>
	</s:Group>
</s:View>