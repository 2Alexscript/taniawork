<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:controls="com.flexcapacitor.controls.*"
		xmlns:components="components.*" xmlns:cs="cs.*"
		viewActivate="init()"
		menuKeyPressed="menupress(event)"
		title="Menu">
	<s:navigationContent >
		<components:backbutton width="{this.width*0.15}" mouseEnabledWhereTransparent="true"
							   height="100%"   mouseDown="navigator.popView(); "/>
	</s:navigationContent>
	<s:actionContent></s:actionContent>
	<fx:Script source="../func/global.as"/>
	<fx:Script source="../func/menuglobal.as"/>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.MouseEvent;
			import spark.collections.SortField;
			import spark.collections.Sort
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.rpc.events.ResultEvent;
			import views.MenuDescription;
			[Bindable]
			public var locationid:String = "";
			[Bindable]
			public var ratingpriceoptionval:uint = 0;
			public var allreadylistclicked:Boolean = false;
			protected function init():void
			{
				enableHardwareKeyListeners();
				allreadylistclicked = false;
				this.parentApplication.showloading();
				setLoginVars();
				createIfNotExsist("resvalues");
				warn.visible = false;
				locationid = data.locationid;
				getMenu.send();
			}	
			public function afterGetMenu(ev:ResultEvent):void
			{	
				this.parentApplication.hideloading();
				filterarea.visible = true;
				listData = new ArrayCollection();
				modData = new ArrayCollection();
				resData = new ArrayCollection();
				try{			
					listData = ev.result[0].ress.res;		
				}
				catch(e:Error){
					try{
						listData.addItem(ev.result[0].ress.res);
					}
					catch(e:Error){}}
				
				try{			
					resData = ev.result[0].ress2.res2;		
				}
				catch(e:Error){
					try{	
						resData.addItem(ev.result[0].ress2.res2);
					}
					catch(e:Error){}}
				
				try{			
					modData = ev.result[0].ress3.res3;		
				}
				catch(e:Error){
					try{	
						modData.addItem(ev.result[0].ress3.res3);
					}
					catch(e:Error){}}
				syncmenurestrictions();
				if (listData.length <= 0){
					warn.visible = true;
				}
				else {
					populatelist();
				}
			} 
			
			public function populatelist():void {
				var srt:Sort = new Sort();
				if (ratingpriceoptionval == 0){
					srt.fields = [new SortField("rating",true)];
					listData.sort = srt;
					listData.refresh();
				}
				else if (ratingpriceoptionval == 1){
					srt.fields = [new SortField("cost")];
					listData.sort = srt;
					listData.refresh();
				}
				menuList.dataProvider = listData;
			}
			public function listClick():void {	
				if (allreadylistclicked == false){
					if (menuList.selectedIndex != -1){
						allreadylistclicked = true;
						navigator.pushView(MenuDescription, listData[menuList.selectedIndex]);	
					}
				}
			}
			public function ratingpriceoptionclick():void {
				if (ratingpriceoptionval == 0){
					ratingpriceoptionval = 1;
					ratingpriceimage1.visible = false;
					ratingpriceimage2.visible = true;
					selectview1.visible = false
					selectview2.visible = true;
				}
				else {
					ratingpriceoptionval = 0;
					ratingpriceimage1.visible = true;
					ratingpriceimage2.visible = false;
					selectview1.visible = true
					selectview2.visible = false;
				}
				populatelist();
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getMenu" method="GET" resultFormat="array"
					   url="http://www.menutria.com/php/mobile/getMenu.php"
					   result="afterGetMenu(event)" >
			<s:request xmlns="">
				<locationid>{locationid}</locationid>		
				<categoryid>{data.categoryid}</categoryid>	
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:VGroup width="100%" gap="0" height="100%" horizontalAlign="center">
		<s:Group id="filterarea" click="ratingpriceoptionclick();" width="100%" height="{75/(320/Capabilities.screenDPI)}">
			<s:Rect width="100%"  height="100%">
				<s:fill>
					<s:SolidColor alpha="1" color="#8eddce"/>
				</s:fill>
			</s:Rect>
			<s:BitmapImage id="ratingpriceimage1" horizontalCenter="0" verticalCenter="0"
						   contentLoader="{s_imageCache}" visible="true">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/ratingpriceoption1.png')"
											source240dpi="@Embed('../assets/240/ratingpriceoption1.png')"
											source320dpi="@Embed('../assets/320/ratingpriceoption1.png')"
											source480dpi="@Embed('../assets/480/ratingpriceoption1.png')"
											source640dpi="@Embed('../assets/640/ratingpriceoption1.png')"/>
				</s:source>
			</s:BitmapImage>
			<s:Image id="ratingpriceimage2" horizontalCenter="0" verticalCenter="0"
					 contentLoader="{s_imageCache}" visible="false">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/ratingpriceoption2.png')"
											source240dpi="@Embed('../assets/240/ratingpriceoption2.png')"
											source320dpi="@Embed('../assets/320/ratingpriceoption2.png')"
											source480dpi="@Embed('../assets/480/ratingpriceoption2.png')"
											source640dpi="@Embed('../assets/640/ratingpriceoption2.png')"/>
				</s:source>
			</s:Image>
		</s:Group>
		<s:Group width="100%" height="{75/(320/Capabilities.screenDPI)}">
			<s:Rect width="100%"  height="100%">
				<s:fill>
					<s:SolidColor alpha="1" color="#f2f2f2"/>
				</s:fill>
			</s:Rect>
			<s:Group id="selectview1"  visible="true" height="100%" width="100%">
				<s:Label left="{29/(320/Capabilities.screenDPI)}" color="#4d4d4d" styleName="textsize0" text="Showing"
						 verticalAlign="middle" verticalCenter="0"/>
				<s:Label left="{132/(320/Capabilities.screenDPI)}" color="#4d4d4d" fontWeight="bold" styleName="textsize1"
						 text="Best Rated" verticalAlign="middle" verticalCenter="2"/>
			</s:Group>
			<s:Group id="selectview2"   visible="false" height="100%" width="100%">
				<s:Label left="{29/(320/Capabilities.screenDPI)}" color="#4d4d4d" styleName="textsize0" text="Showing"
						 verticalAlign="middle" verticalCenter="0"/>
				<s:Label left="{132/(320/Capabilities.screenDPI)}" color="#4d4d4d" fontWeight="bold" styleName="textsize1"
						 text="Best Price" verticalAlign="middle" verticalCenter="2"/>
			</s:Group>
		</s:Group>
		<s:List width="100%" horizontalCenter="0"  height="100%"
				id="menuList" useVirtualLayout="true" 
				verticalScrollPolicy="on"  
				horizontalScrollPolicy="off"  
				contentBackgroundColor="#FFFFFF"
				skinClass="skins.MenuTileListSkin"
				selectedIndex="1" 
				click="listClick();"
				change="listClick();"/>
	</s:VGroup>
	<s:Label color="#FFFFFF"  id="warn" visible="false" horizontalCenter="0" 
		 styleName="textsize20"  text="No Items Available" verticalCenter="0"/>
</s:View>