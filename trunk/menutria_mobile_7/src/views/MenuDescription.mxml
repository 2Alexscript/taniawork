<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:components="components.*"
		backgroundColor="#FFFFFF"
		viewActivate="init()"
		menuKeyPressed="menupress(event)"
		actionBarVisible="false">
	<fx:Script source="../func/global.as"/>
	<fx:Script>
		<![CDATA[
			import flash.display.Bitmap;
			import flash.display.Graphics;
			import flash.display.Sprite;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			import flash.media.StageWebView;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.filters.GlowFilter;
			import spark.primitives.Graphic;
			
			import components.modItem;
			
			import views.MenuReviews;
			import views.StoresDescription;
			import views.ViewReview;
			[Bindable]
			public var googleTravelUrl:String = "";
			[Bindable]
			public var picture:String = "";
			[Bindable]
			public var dragBar:Sprite;
			[Bindable]
			public var dragBitmap:Bitmap;
			[Bindable]
			public var stageWeb:StageWebView;
			[Bindable]
			public var topreviews:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var topratedrecentval:uint = 1;
			[Bindable]
			public var recentreviews:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var modifications:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var reviewPopupStage:uint = 0;
			[Bindable]
			public var globalradious:uint = 200;
			[Bindable]
			public var currentpercentage:Number = 100;
			public var circleToMask:Graphic = new Graphic();
			public var circleMask:Graphic = new Graphic();
			public var circleToMask2:Graphic = new Graphic();
			public var circleMask2:Graphic = new Graphic();
			[Bindable]
			public var actualRateValue:Number = 0;
			[Bindable]
			public var shareType:uint = 0;
			[Bindable]
			public var eatenstatus:uint = 0;
			public function init():void
			{
				enableHardwareKeyListeners();
				didlistclick = false;
				this.parentApplication.showloading();
				setLoginVars();			
				scroller.visible = true;
			
				var ratingstring:String = data.rating.toString();
				var ratingnumber:Number = Number(data.rating);
				if (ratingnumber == 0){
					ratinglabel.text = "-";
				}
				else if (ratingnumber >= 10){
					ratingnumber = 10;
					ratinglabel.text = "10";
				}
				else {
					ratinglabel.text = ratingnumber.toPrecision(2).toString();
				}
				
				if ((data.picture == "None")||(data.picture == "")||(data.picture == null)||(data.picture == "null")){
					img1.source = "assets/320/dish_place_wide.png";	
				}
				img1.visible = true;
				
				
				// Store sprites
				var container:UIComponent = new UIComponent();
				gr.addElementAt(container, 0);
				// Draw the full circle with colors
				circleToMask.graphics.beginFill(0x36ccba,1);
				circleToMask.graphics.drawCircle(0, 0, globalradious);
				circleToMask.graphics.endFill();
				
				circleToMask2.graphics.beginFill(0x8eddce,1);
				circleToMask2.graphics.drawCircle(0, 0, globalradious);
				circleToMask2.graphics.endFill();
				
				// Add the circle
				container.addChildAt(circleToMask, 0);
				container.addChildAt(circleToMask2, 0);
				
				
				
				circleMask.width = 400;
				circleMask.height = 400
				circleMask.verticalCenter = 0;
				circleMask.horizontalCenter = 0;
				
				circleMask2.width = 400;
				circleMask2.height = 400
				circleMask2.verticalCenter = 0;
				circleMask2.horizontalCenter = 0;
				// Add the mask
				container.addChild(circleMask);
				container.addChild(circleMask2);
				
				
				//Set the position of the circle
				circleToMask.x = (circleMask.x = 100);
				circleToMask.y = (circleMask.y = 100);
				circleToMask.mask = circleMask;
				circleToMask.width = 400;
				circleToMask.height = 400
				circleToMask.verticalCenter = 0;
				circleToMask.horizontalCenter = 0;
				
				circleToMask2.x = (circleMask2.x = 100);
				circleToMask2.y = (circleMask2.y = 100);
				circleToMask2.mask = circleMask2;
				circleToMask2.width = 400;
				circleToMask2.height = 400
				circleToMask2.verticalCenter = 0;
				circleToMask2.horizontalCenter = 0;
				
				
				// Draw the circle at 100%
				renderChart(currentpercentage/100);
				//	container.setStyle("mouseEnabledWhereTransparent",true);
				gr.addEventListener(MouseEvent.MOUSE_MOVE, circleMove);

				getMenuItemInformation.send();
			}
			
			public function circleMove(ev:MouseEvent):void {
				var angleRadians:Number=Math.abs(Math.atan2(ev.localY-0,ev.localX-0)-Math.atan2(-200-0,0-0));
				if (angleRadians>0.5*Math.PI) angleRadians=Math.PI-angleRadians;
				var degreeso:Number = angleRadians* 180/Math.PI;
				
				if ((ev.localX >= 0)&&(ev.localY >= 0)) {
					degreeso = degreeso+180;
					
				}
				else if (ev.localX >= 0){
					degreeso = 270+(90-Math.abs(degreeso));
				}
				else if (ev.localY >= 0){
					degreeso = 90+(90-Math.abs(degreeso));
				}
				
				var precentageofcircle:Number = (1-(degreeso/360));
				renderChart(precentageofcircle);
			}
			private function onViewDeactivate():void {
				//hide the map's infowindow
				this.parentApplication.map.infoWindow.hide();
				this.parentApplication.disableTraffic();
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}
			public function backOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("backgroundColor",0xecf9f7);
			}
			public function backDown(ev:MouseEvent):void {
				ev.currentTarget.setStyle("backgroundColor",0xecf9f7);
			}
			public function backOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("backgroundColor",0xFFFFFF);
			}
			protected function descriptionclick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (descriptiontext.maxDisplayedLines == 4){
					descriptiontext.maxDisplayedLines = 30;
				}
				else {
					descriptiontext.maxDisplayedLines = 4;
				}
				
			}
			protected function additionclick(event:MouseEvent):void
			{
				if (additiontext.maxDisplayedLines == 4){
					additiontext.maxDisplayedLines = 30;
				}
				else {
					additiontext.maxDisplayedLines = 4;
				}
				
			}
			public function afterGetMenuInformation(ev:ResultEvent):void {
				reviewText.text = "";
				this.parentApplication.hideloading();
				
				topreviews = new ArrayCollection();
				recentreviews = new ArrayCollection();
				modifications = new ArrayCollection();
				descriptiontext.text = ev.result[0].results5.result5.description;
				additiontext.text =  ev.result[0].results5.result5.additions;
				if (ev.result[0].eatinthis == 0){
					eatenimage.source = eatenthis2;
					eatenstatus = 0;
				}
				else {
					eatenimage.source = eatenthis1;
					eatenstatus = 1;
				}
				eatenimage.visible = true;
				
				
				try{			
					topreviews = ev.result[0].results.result;	
				}
				catch(e:Error){
					try{
						
						topreviews.addItem(ev.result[0].results.result);
					}
					catch(e:Error){
					}
				}
				
				try{			
					recentreviews = ev.result[0].results2.result2;	
				}
				catch(e:Error){
					try{
						
						recentreviews.addItem(ev.result[0].results2.result2);
					}
					catch(e:Error){
					}
				}
				
				try{			
					modifications = ev.result[0].results4.result4;	
					modList.dataProvider = modifications;
				}
				catch(e:Error){
					try{
						
						modifications.addItem(ev.result[0].results4.result4);
					}
					catch(e:Error){
					}
				}
				
				//	modList.dataProvider = modifications;
				reviewList.dataProvider = topreviews;
				reviewlabel.text = 'Reviews ('+topreviews.length.toString()+')';
			}
			public function topratedrecentclick(event:MouseEvent):void
			{
				if (topratedrecentval == 1){
					topratedrecentval = 2;
					topratedrecentimg.source = topratedrecent2;
					reviewList.dataProvider = recentreviews;
					reviewlabel.text = 'Reviews ('+recentreviews.length.toString()+')';
				}
				else {
					topratedrecentval = 1;
					topratedrecentimg.source = topratedrecent1;
					reviewList.dataProvider = topreviews;
					reviewlabel.text = 'Reviews ('+topreviews.length.toString()+')';
				}
				
				
			}
			public function seemoreclick():void {
				navigator.pushView(MenuReviews,{id:data.id});
			}
			public function startReview():void {
				check.visible = false;
				forward.visible = true;
				
				reviewPopupStage = 1;
				writeholder.visible = false;
				grholder.visible = true;
				reviewPopupGroup.visible = true;
			}
			public function backOnMenu():void {
				if (reviewPopupStage == 0){
					reviewseq1.visible = true;
					reviewseq2.visible = false;
				}
				else if (reviewPopupStage == 1){
					reviewPopupGroup.visible = false;
					reviewPopupStage = 0;
					reviewseq1.visible = true;
					reviewseq2.visible = false;
					writeholder.visible = false;
					renderChart(0.6);
				}
				else if (reviewPopupStage == 2){
					check.visible = false;
					forward.visible = true;
					grholder.visible = true;
					reviewseq1.visible = true;
					reviewseq2.visible = false;
					writeholder.visible = false;
					reviewPopupStage = 1;
					renderChart(0.4);
					
				}
				
				
			}
			public function forwardOnMenu():void {
				 if (reviewPopupStage == 1){
					reviewseq1.visible = false;
					reviewseq2.visible = true;
					check.visible = true;
					forward.visible = false;
					grholder.visible = false;
					writeholder.visible = true;
					reviewPopupStage = 2;
					
				}
				else if (reviewPopupStage == 2){
					reviewPopupGroup.visible = false;
					writeholder.visible = false;
					reviewseq1.visible = true;
					reviewseq2.visible = false;
					check.visible = false;
					forward.visible = true;
					reviewPopupStage = 0;
					//Commit review
					
					sendReview.send();
					
				}
			}
			public function renderChart(percentage:Number):void
			{	
				circleMask2.graphics.clear();
				circleMask2.graphics.beginFill(0);
				circleMask.graphics.clear();
				circleMask.graphics.beginFill(0);
				if (percentage <= 0.1){
					percentage = 0.1;
				}
				
				ratevalue.text = Math.round(percentage*10).toString();
				actualRateValue =  Math.round(percentage*10);
				
				// Draw the circle at the given percentage            /------ set the begin at the middle top
				drawPieMask(circleMask2.graphics, 1, globalradious, -1.57, 8);
				drawPieMask(circleMask.graphics, percentage, globalradious, -1.57, 8);
				circleMask2.graphics.endFill();
				circleMask.graphics.endFill();
			}
			// Function from flassari (a little simplified)
			private function drawPieMask(graphics:Graphics, percentage:Number, radius:Number = 200, rotation:Number = 0, sides:int = 6):void {
				radius /= Math.cos(1/sides * Math.PI);
				var lineToRadians:Function = function(rads:Number):void {
					graphics.lineTo(Math.cos(rads) * radius + x, Math.sin(rads) * radius + y);
				};
				var sidesToDraw:int = Math.floor(percentage * sides);
				for (var i:int = 0; i <= sidesToDraw; i++)
					lineToRadians((i / sides) * (Math.PI * 2) + rotation);
				if (percentage * sides != sidesToDraw)
					lineToRadians(percentage * (Math.PI * 2) + rotation);
			}
			public var didlistclick:Boolean = false;
			public function ratingitemclick():void {
				if (didlistclick == false){
					didlistclick = true;
					if (reviewList.selectedIndex != -1){
						if (topratedrecentval == 1){
							navigator.pushView(ViewReview, topreviews[reviewList.selectedIndex]);	
						}
						else {
							navigator.pushView(ViewReview, recentreviews[reviewList.selectedIndex]);	
						}
					}
				}
			}
			public function startShare():void {
				var gl:GlowFilter = new GlowFilter(0x36ccba,1,20,20,5,1,true);
				shareType = 0;
				sharefacebook.filters = [gl];
				sharetwitter.filters = [];
				shareText.text = "";
				sharePopup.visible = true;	
			}
			public function eatenClick():void {
				if (eatenstatus == 0){
					eatenimage.source = eatenthis1;
					eatenstatus = 1;
				}
				else {
					eatenimage.source = eatenthis2;
					eatenstatus = 0;
				}
				sendEatenThis.send();	
			}
			public function backOnShare():void {
				sharePopup.visible = false;
			}
			public function forwardOnShare():void {
				sharePopup.visible = false;
				if (shareType == 0){
				//share facebook
				}
				else {
					//share twitter
				
				}
			}
			public function switchShare(u:uint):void{
				shareType = u;
				var gl:GlowFilter = new GlowFilter(0x36ccba,1,20,20,15,1,true);
				if (u == 0){
					sharefacebook.filters = [gl];
					sharetwitter.filters = [];
				}
				else {
					sharefacebook.filters = [];
					sharetwitter.filters = [gl];
				}
			}
			public function afterGetEatenThis(ev:ResultEvent):void {
				eatenimage.visible = true;
			}
			private function afterpost(result:Object, fail:Object):void{
				var stop:String = "";
			}
			public function gotobusiness():void {
				try{
					var dataArray:ArrayCollection = getDatabaseArray("SELECT * FROM merchusers");
					if (dataArray.length != 0){
						for (var i:uint = 0; i < dataArray.length; i++){
							if (dataArray[i].id == data.locationid){
								navigator.pushView(StoresDescription, dataArray[i]);	
							}
						}
					}
				}
				catch(e:Error){}
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getMenuItemInformation" method="GET" resultFormat="array"
					   url="http://www.menutria.com/php/mobile/getMenuItemInformation.php"
					   result="afterGetMenuInformation(event)" >
			<s:request xmlns="">
				<menuid>{data.id}</menuid>		
				<emailGo>{emailGo}</emailGo>		
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="sendReview" method="GET" resultFormat="array"
					   url="http://www.menutria.com/php/mobile/sendReview.php"
					   result="afterGetMenuInformation(event)" >
			<s:request xmlns="">
				<menuid>{data.id}</menuid>	
				<emailGo>{emailGo}</emailGo>		
				<locationid>{data.locationid}</locationid>		
				<reviewValue>{actualRateValue}</reviewValue>		
				<reviewText>{reviewText.text}</reviewText>		
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="sendEatenThis" method="GET" resultFormat="array"
					   url="http://www.menutria.com/php/mobile/updateEatenThis.php"
					   result="afterGetEatenThis(event)" >
			<s:request xmlns="">
				<menuid>{data.id}</menuid>	
				<emailGo>{emailGo}</emailGo>	
				<locationid>{data.locationid}</locationid>		
				<eatenvalue>{eatenstatus}</eatenvalue>
			</s:request>
		</s:HTTPService>
		<s:MultiDPIBitmapSource id="eatenthis1"
								source160dpi="@Embed('../assets/160/eatenthis1.png')"
								source240dpi="@Embed('../assets/240/eatenthis1.png')"
								source320dpi="@Embed('../assets/320/eatenthis1.png')"
								source480dpi="@Embed('../assets/480/eatenthis1.png')"
								source640dpi="@Embed('../assets/640/eatenthis1.png')"/>
		<s:MultiDPIBitmapSource id="eatenthis2"
								source160dpi="@Embed('../assets/160/eatenthis2.png')"
								source240dpi="@Embed('../assets/240/eatenthis2.png')"
								source320dpi="@Embed('../assets/320/eatenthis2.png')"
								source480dpi="@Embed('../assets/480/eatenthis2.png')"
								source640dpi="@Embed('../assets/640/eatenthis2.png')"/>
		<s:MultiDPIBitmapSource id="topratedrecent1"
								source160dpi="@Embed('../assets/160/topratedrecent1.png')"
								source240dpi="@Embed('../assets/240/topratedrecent1.png')"
								source320dpi="@Embed('../assets/320/topratedrecent1.png')"
								source480dpi="@Embed('../assets/480/topratedrecent1.png')"
								source640dpi="@Embed('../assets/640/topratedrecent1.png')"/>
		<s:MultiDPIBitmapSource id="topratedrecent2"
								source160dpi="@Embed('../assets/160/topratedrecent2.png')"
								source240dpi="@Embed('../assets/240/topratedrecent2.png')"
								source320dpi="@Embed('../assets/320/topratedrecent2.png')"
								source480dpi="@Embed('../assets/480/topratedrecent2.png')"
								source640dpi="@Embed('../assets/640/topratedrecent2.png')"/>
	</fx:Declarations>	
	<s:Scroller id="scroller" visible="true" left="0" right="0" height="100%"
				horizontalScrollPolicy="off" verticalCenter="0" verticalScrollPolicy="on">
		<s:VGroup height="100%" paddingTop="0" gap="{30/(320/Capabilities.screenDPI)}" horizontalCenter="0" verticalCenter="0"  width="100%"  >
			<s:Group width="100%"   id="megacont"  >
				<s:Image id="img1" visible="false" 
						 width="100%" top="0"
						 source="{data.picture}" 
						 contentLoader="{s_imageCache}"  height="{this.width/(640/300)}"   />
				<s:Image width="100%" height="100%"  smooth="true" 
						 contentLoader="{s_imageCache}" scaleMode="stretch"  >
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/pictureshadow.png')"
												source240dpi="@Embed('../assets/240/pictureshadow.png')"
												source320dpi="@Embed('../assets/320/pictureshadow.png')"/>
					</s:source>
				</s:Image>
				<s:Group width="{this.width*0.30}" height="{this.width*0.30}" 
						 mouseEnabledWhereTransparent="true" top="0" left="0"  
						 mouseDown="navigator.popView();">
					<s:BitmapImage top="{30/(320/Capabilities.screenDPI)}"
							  left="{30/(320/Capabilities.screenDPI)}"
							  contentLoader="{s_imageCache}" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/back.png')"
													source240dpi="@Embed('../assets/240/back.png')"
													source320dpi="@Embed('../assets/320/back.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
			</s:Group>
			<s:VGroup width="100%" gap="{25/(320/Capabilities.screenDPI)}">
				<s:HGroup width="100%" 
						  gap="{15/(320/Capabilities.screenDPI)}" verticalAlign="top"  
						  paddingLeft="{20/(320/Capabilities.screenDPI)}"
						  paddingRight="{20/(320/Capabilities.screenDPI)}" >
					<s:Group height="{70/(320/Capabilities.screenDPI)}" 
									   width="{70/(320/Capabilities.screenDPI)}"
									   horizontalCenter="0" verticalCenter="0">
						<s:Rect width="100%" height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#b3b3b3"/>
							</s:fill>
						</s:Rect>
						<s:Label id="ratinglabel" color="#FFFFFF"
								 horizontalCenter="0" styleName="textsize7"
								 fontWeight="bold" verticalCenter="0"/>
					</s:Group>
					<s:VGroup height="100%" width="10" >
						<s:Label id="selectedTitle"  width="{this.width-100}" 
								 color="#4d4d4d" paddingRight="{20/(320/Capabilities.screenDPI)}"
								 styleName="textsize6" fontWeight="bold" text="{data.name}"/>
						<s:Label  color="#36ccba" fontWeight="bold" click="gotobusiness();"
								  mouseDown="gDown(event)" mouseOver="gOver(event)" 
								  mouseUp="gOut(event)" mouseOut="gOut(event)"
								  styleName="textsize3" text="{data.business_name+ ' $' + data.cost }"
								  verticalAlign="middle"/>
					</s:VGroup>
				</s:HGroup>
				<s:Label width="99%" paddingLeft="{20/(320/Capabilities.screenDPI)}"
						 paddingRight="{20/(320/Capabilities.screenDPI)}"  
						 color="#4d4d4d" fontWeight="normal" id="descriptiontext"
						 lineHeight="{35/(320/Capabilities.screenDPI)}" styleName="textsize0" 
						 click="descriptionclick(event)"
						 maxDisplayedLines="4" textDecoration="none"
						 verticalAlign="middle"/>
				<s:Group width="100%">
					<s:Line left="{20/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:Label width="99%" paddingLeft="{20/(320/Capabilities.screenDPI)}" 
						 paddingRight="{20/(320/Capabilities.screenDPI)}"  
						 color="#4d4d4d" fontWeight="normal" id="additiontext" 
						 lineHeight="{35/(320/Capabilities.screenDPI)}" styleName="textsize0" 
						 click="additionclick(event)"
						 maxDisplayedLines="4" textDecoration="none"
						 verticalAlign="middle"/>
				<s:Group width="100%">
					<s:Line left="{20/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:Group width="100%"  horizontalCenter="0"  verticalCenter="0">
					<s:Group click="startReview();" height="{60/(320/Capabilities.screenDPI)}" 
							 mouseDown="gDown(event)" mouseOver="gOver(event)"
							 mouseUp="gOut(event)" mouseOut="gOut(event)"
							 width="{this.width/2-30}" left="{20/(320/Capabilities.screenDPI)}">
						<s:Rect width="100%"  height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#36ccba"/>
							</s:fill>
						</s:Rect>
						<s:Label verticalAlign="middle" mouseEnabled="false" horizontalCenter="0"  verticalCenter="2" 
								 text="Rate" color="#FFFFFF"  textAlign="center" styleName="textsize2"  fontWeight="bold"/>
					</s:Group>
					<s:Group click="startShare();" height="{60/(320/Capabilities.screenDPI)}" 
							 width="{this.width/2-30}" right="{20/(320/Capabilities.screenDPI)}"
							 mouseDown="gDown(event)" mouseOver="gOver(event)"
							 mouseUp="gOut(event)" mouseOut="gOut(event)">
						<s:Rect width="100%"  height="100%"
								radiusX="{10/(320/Capabilities.screenDPI)}"
								radiusY="{10/(320/Capabilities.screenDPI)}">
							<s:fill>
								<s:SolidColor alpha="1" color="#6594db"/>
							</s:fill>
						</s:Rect>
						<s:Label verticalAlign="middle" textAlign="center"  mouseEnabled="false"  
								 text="Share" color="#FFFFFF" styleName="textsize2"  
								 fontWeight="bold" horizontalCenter="0"  verticalCenter="2" />
					</s:Group>
				</s:Group>
				<s:Group width="100%">
					<s:Line left="{20/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				
				
				<s:Group height="100%"  mouseEnabledWhereTransparent="true" click="eatenClick();">
					<s:BitmapImage id="eatenimage" left="{20/(320/Capabilities.screenDPI)}" 
								   contentLoader="{s_imageCache}" visible="false" >
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/eatenthis2.png')"
													source240dpi="@Embed('../assets/240/eatenthis2.png')"
													source320dpi="@Embed('../assets/320/eatenthis2.png')"
													source480dpi="@Embed('../assets/480/eatenthis2.png')"
													source640dpi="@Embed('../assets/640/eatenthis2.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				<s:Group width="100%">
					<s:Line left="{20/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:VGroup  paddingLeft="{20/(320/Capabilities.screenDPI)}" 
						   paddingRight="{20/(320/Capabilities.screenDPI)}"  
						   width="100%" height="100%">
					<s:Label width="100%" color="#4d4d4d"
							 styleName="textsize5" fontWeight="bold"
							 text="{'Modifications ('+modifications.length.toString()+')'}"/>
					<s:List  id="modList" mouseEnabled="false"
							 width="100%" 
							 verticalScrollPolicy="off" 
							 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
							 itemRenderer="components.modItem" dataProvider="{modifications}" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											   variableRowHeight="true"
											  gap="{5/(320/Capabilities.screenDPI)}"/>
						</s:layout>
					</s:List>
				</s:VGroup>
				<s:Group width="100%">
					<s:Line left="{20/(320/Capabilities.screenDPI)}" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
				</s:Group>
				<s:Group width="100%" >
					<s:Label  left="{20/(320/Capabilities.screenDPI)}" color="#4D4D4D"
							  fontWeight="bold" styleName="textsize5"
							  id="reviewlabel"
							  verticalCenter="0"/>
					<s:Image id="topratedrecentimg" 
							 right="{20/(320/Capabilities.screenDPI)}" contentLoader="{s_imageCache}" 
							 click="topratedrecentclick(event)" 
							 source="{topratedrecent1}"
							 verticalCenter="0"/>
				</s:Group>
				<s:List  id="reviewList" 
						 width="100%"
						 verticalScrollPolicy="off" 
						 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
						 click="ratingitemclick();"
						 change="ratingitemclick();"
						 itemRenderer="components.ratingsResultStore">
					<s:layout>
						<s:VerticalLayout horizontalAlign="contentJustify" gap="0"/>
					</s:layout>
				</s:List>
				<s:Group width="100%"  click="seemoreclick();" visible="{topreviews.length > 0}" height="{80/(320/Capabilities.screenDPI)}" >
					<s:Label styleName="textsize5"  fontWeight="bold" mouseEnabled="false" color="#b3b3b3" verticalCenter="0"
							 textAlign="center" horizontalCenter="0"  verticalAlign="middle" text="See More"/>
				</s:Group>
			</s:VGroup>
		</s:VGroup>
	</s:Scroller>
	
	<s:Group id="sharePopup" horizontalCenter="0"
					   verticalCenter="0" visible="false" 
					   height="95%" width="90%">
		<s:Rect width="100%"  height="100%"
				radiusX="{10/(320/Capabilities.screenDPI)}"
				radiusY="{10/(320/Capabilities.screenDPI)}">
			<s:fill>
				<s:SolidColor alpha="1" color="#36ccba"/>
			</s:fill>
		</s:Rect>
		<s:Group left="0" top="{10/(320/Capabilities.screenDPI)}" mouseDown="backOnShare();"  
				 mouseEnabledWhereTransparent="true" width="100" height="50">
			<s:BitmapImage width="40" height="40" contentLoader="{s_imageCache}"
						   horizontalCenter="0" verticalCenter="0">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/back.png')"
											source240dpi="@Embed('../assets/240/back.png')"
											source320dpi="@Embed('../assets/320/back.png')"
											source480dpi="@Embed('../assets/480/back.png')"
											source640dpi="@Embed('../assets/640/back.png')"/>
				</s:source>
			</s:BitmapImage>
		</s:Group>
		<s:Group horizontalCenter="0" top="{10/(320/Capabilities.screenDPI)}"  height="50">
			<s:Label height="100%" color="#FFFFFF" styleName="textsize3" text="Share"
					 verticalAlign="middle"/>
		</s:Group>
		<s:Group  mouseDown="forwardOnShare();" right="0" top="{10/(320/Capabilities.screenDPI)}" 
				  mouseEnabledWhereTransparent="true"  width="100" height="50">
			<s:BitmapImage id="checkshare" width="40" visible="true" height="40" contentLoader="{s_imageCache}"
					 horizontalCenter="0" verticalCenter="0">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/checkwhite.png')"
											source240dpi="@Embed('../assets/240/checkwhite.png')"
											source320dpi="@Embed('../assets/320/checkwhite.png')"
											source480dpi="@Embed('../assets/480/checkwhite.png')"
											source640dpi="@Embed('../assets/640/checkwhite.png')"/>
				</s:source>
			</s:BitmapImage>
		</s:Group>
		<s:Group x="0" top="65" bottom="60" width="100%" >
			<s:Rect width="100%"  height="100%">
				<s:fill>
					<s:SolidColor alpha="1" color="#FFFFFF"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%" horizontalAlign="center" gap="20">
				<s:TextArea id="shareText" width="95%" height="100%" borderVisible="false"
							color="#5D5D5D" fontFamily="Arial" horizontalCenter="0" 
							contentBackgroundAlpha="1" contentBackgroundColor="#FFFFFF"
							prompt="Write something about this dish">
				</s:TextArea>
			</s:VGroup>
		</s:Group>
		<s:Group width="100%" bottom="0" height="70">
			<s:Rect width="100%"  height="100%"
					radiusX="{10/(320/Capabilities.screenDPI)}"
					radiusY="{10/(320/Capabilities.screenDPI)}">
				<s:fill>
					<s:SolidColor alpha="1" color="#f2f2f2"/>
				</s:fill>
			</s:Rect>
			<s:HGroup paddingLeft="{30/(320/Capabilities.screenDPI)}" 
					  top="{20/(320/Capabilities.screenDPI)}"
					  bottom="{20/(320/Capabilities.screenDPI)}"
					  width="100%" gap="80" 
					  verticalAlign="middle">
				<s:BitmapImage contentLoader="{s_imageCache}" >
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/rate-share.png')"
												source240dpi="@Embed('../assets/240/rate-share.png')"
												source320dpi="@Embed('../assets/320/rate-share.png')"
												source480dpi="@Embed('../assets/480/rate-share.png')"
												source640dpi="@Embed('../assets/640/rate-share.png')"/>
					</s:source>
				</s:BitmapImage>
				<s:Group width="100" height="100%"  mouseEnabledWhereTransparent="true" mouseDown="switchShare(0)">
					<s:BitmapImage horizontalCenter="0" verticalCenter="0" contentLoader="{s_imageCache}"  id="sharefacebook">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/rate-facebook.png')"
													source240dpi="@Embed('../assets/240/rate-facebook.png')"
													source320dpi="@Embed('../assets/320/rate-facebook.png')"
													source480dpi="@Embed('../assets/480/rate-facebook.png')"
													source640dpi="@Embed('../assets/640/rate-facebook.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				<s:Group width="100" height="100%"  mouseEnabledWhereTransparent="true" mouseDown="switchShare(1)">
					<s:BitmapImage horizontalCenter="0" verticalCenter="0" contentLoader="{s_imageCache}"  id="sharetwitter">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/rate-twitter.png')"
													source240dpi="@Embed('../assets/240/rate-twitter.png')"
													source320dpi="@Embed('../assets/320/rate-twitter.png')"
													source480dpi="@Embed('../assets/480/rate-twitter.png')"
													source640dpi="@Embed('../assets/640/rate-twitter.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
			</s:HGroup>
		</s:Group>
	</s:Group>
	
	
	
	
	
	
	
	
	
	
	<s:Group id="reviewPopupGroup" visible="false"
			 width="100%" height="100%" 
			 horizontalCenter="0" verticalCenter="0">
		<s:Rect width="100%"  height="100%">
			<s:fill>
				<s:SolidColor alpha="0.5" color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:Rect height="90%" width="{reviewseq1.width}"
				horizontalCenter="0" verticalCenter="0">
			<s:fill>
				<s:SolidColor alpha="1" color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:VGroup gap="0" height="98%" width="{reviewseq1.width}"
				   horizontalCenter="0" verticalCenter="0">
			<s:Group height="{reviewseq1.height}" width="100%">
				<s:Rect width="100%"  height="100%">
					<s:fill>
						<s:SolidColor alpha="1" color="#36ccba"/>
					</s:fill>
				</s:Rect>
				
				
				<s:Group left="0" top="10"  mouseDown="backOnMenu();" width="100" height="50">
					<s:BitmapImage width="40" height="40" horizontalCenter="0"
								   contentLoader="{s_imageCache}" verticalCenter="0">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/back.png')"
													source240dpi="@Embed('../assets/240/back.png')"
													source320dpi="@Embed('../assets/320/back.png')"
													source480dpi="@Embed('../assets/480/back.png')"
													source640dpi="@Embed('../assets/640/back.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				
				<s:Label color="#FFFFFF" fontWeight="bold" styleName="textsize5" 
						 text="Review" horizontalCenter="0" verticalCenter="0" textAlign="center"/>
				
				<s:Group   mouseDown="forwardOnMenu();" mouseEnabledWhereTransparent="true"
						 right="0" top="10"  width="100" height="50">
					<s:BitmapImage id="check" width="40" visible="false" height="40" 
								   horizontalCenter="0" contentLoader="{s_imageCache}"
								   verticalCenter="0">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/checkwhite.png')"
													source240dpi="@Embed('../assets/240/checkwhite.png')"
													source320dpi="@Embed('../assets/320/checkwhite.png')"
													source480dpi="@Embed('../assets/480/checkwhite.png')"
													source640dpi="@Embed('../assets/640/checkwhite.png')"/>
						</s:source>
					</s:BitmapImage>
					<s:BitmapImage width="40" id="forward" visible="true" height="40" 
								   horizontalCenter="0" contentLoader="{s_imageCache}" verticalCenter="0">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/forwardwhite.png')"
													source240dpi="@Embed('../assets/240/forwardwhite.png')"
													source320dpi="@Embed('../assets/320/forwardwhite.png')"
													source480dpi="@Embed('../assets/480/forwardwhite.png')"
													source640dpi="@Embed('../assets/640/forwardwhite.png')"/>
						</s:source>
					</s:BitmapImage>
				</s:Group>
				
				
			</s:Group>
			<s:Group height="{reviewseq1.height}" width="100%">
				<s:BitmapImage id="reviewseq1" visible="true"
							   horizontalCenter="0"
							   verticalCenter="0" 
							   contentLoader="{s_imageCache}">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/reviewseq1.png')"
												source240dpi="@Embed('../assets/240/reviewseq1.png')"
												source320dpi="@Embed('../assets/320/reviewseq1.png')"
												source480dpi="@Embed('../assets/480/reviewseq1.png')"
												source640dpi="@Embed('../assets/640/reviewseq1.png')"/>
					</s:source>
				</s:BitmapImage>
				<s:BitmapImage id="reviewseq2" visible="false"
							   horizontalCenter="0" 
							   verticalCenter="0" 
							   contentLoader="{s_imageCache}">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/reviewseq2.png')"
												source240dpi="@Embed('../assets/240/reviewseq2.png')"
												source320dpi="@Embed('../assets/320/reviewseq2.png')"
												source480dpi="@Embed('../assets/480/reviewseq2.png')"
												source640dpi="@Embed('../assets/640/reviewseq2.png')"/>
					</s:source>
				</s:BitmapImage>
			</s:Group>
			
			<s:VGroup width="100%"  horizontalAlign="center" gap="0">
				<s:Group width="90%" height="120" horizontalCenter="0" mouseEnabled="false"    >
					<s:HGroup width="100%" gap="0" verticalAlign="middle" height="90%" verticalCenter="0">
						<s:Group height="100%" >
							<s:BitmapImage left="{10/(320/Capabilities.screenDPI)}" verticalCenter="0"
										   width="60" height="60" contentLoader="{s_imageCache}" >
								<s:source>
									<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/menu-account.png')"
															source240dpi="@Embed('../assets/240/menu-account.png')"
															source320dpi="@Embed('../assets/320/menu-account.png')"
															source480dpi="@Embed('../assets/480/menu-account.png')"
															source640dpi="@Embed('../assets/640/menu-account.png')"/>
								</s:source>
							</s:BitmapImage>
						</s:Group>
						<s:Group width="20">
						</s:Group>
						<s:VGroup width="100%" verticalAlign="middle"  height="100%">
							<s:Label  text="{data.name}" width="100%"  color="#4d4d4d"  
									  fontWeight="bold" styleName="textsize3" verticalAlign="middle"/>
							
							<s:Label  text="{data.business_name}" width="100%" 
									  color="#4d4d4d"  styleName="textsize2" verticalAlign="middle"/>
							
						</s:VGroup>
					</s:HGroup>
					<s:BitmapImage id="bmpImg22" right="0"  width="120" 	
								   height="120" source="{data.picture}" 
								   contentLoader="{s_imageCache}"  scaleMode="zoom" />
					<s:Line left="0" right="0"  bottom="0" > 
						<s:stroke><s:SolidColorStroke color="0xb2b2b2" weight="{1/(320/Capabilities.screenDPI)}"/></s:stroke>
					</s:Line>
					
				</s:Group>
				<s:Group width="100%" height="100%" >
					<s:Group id="grholder"  y="50" mouseEnabledWhereTransparent="true" visible="false"
							 width="400" height="400" horizontalCenter="0">
						<s:Group id="gr" width="200" mouseEnabledWhereTransparent="true"  
								 height="200" blendMode="layer" cacheAsBitmap="true"
								 horizontalCenter="0" verticalCenter="0">
							
							<s:Group width="200" height="200" mouseEnabledWhereTransparent="true"
									 blendMode="erase" cacheAsBitmap="true"
									 horizontalCenter="0" verticalCenter="0">
								<s:Ellipse width="200"   height="200" 
										   horizontalCenter="0" verticalCenter="0" >
									<s:fill>
										<s:SolidColor color="0"/>
									</s:fill>
								</s:Ellipse>
							</s:Group>
						</s:Group>
						<s:Label id="ratevalue" color="#808080" 
								 fontWeight="bold" horizontalCenter="-2" fontSize="110"
								 text="10" textAlign="center" 
								 verticalAlign="bottom" verticalCenter="6"/>
						<s:Image id="confirmbtn"   mouseDown="forwardOnMenu();"  bottom="-60" 
								 horizontalCenter="0" contentLoader="{s_imageCache}"
								  mouseOver="gOver(event)"
								 mouseUp="gOut(event)" mouseOut="gOut(event)" >
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('../assets/160/confirmbtn.png')"
														source240dpi="@Embed('../assets/240/confirmbtn.png')"
														source320dpi="@Embed('../assets/320/confirmbtn.png')"
														source480dpi="@Embed('../assets/480/confirmbtn.png')"
														source640dpi="@Embed('../assets/640/confirmbtn.png')"/>
							</s:source>
						</s:Image>
					</s:Group>
					<s:Group id="writeholder" visible="false" x="10" y="0"
							 width="580" height="{this.height/2}">
						<s:VGroup width="100%" horizontalAlign="center" 
								  paddingTop="{10/(320/Capabilities.screenDPI)}" gap="20">
							<s:TextArea id="reviewText" width="95%"  returnKeyLabel="done"
										height="{this.height/2.5}" borderVisible="false"
										color="#5D5D5D" fontFamily="Arial" horizontalCenter="0" 
										paddingLeft="{10/(320/Capabilities.screenDPI)}" 
										paddingTop="{10/(320/Capabilities.screenDPI)}" 
										paddingRight="{10/(320/Capabilities.screenDPI)}"
										paddingBottom="{10/(320/Capabilities.screenDPI)}"
										contentBackgroundAlpha="0" contentBackgroundColor="#FFFFFF"
										prompt="Write someting about this dish">
								
							</s:TextArea>
						</s:VGroup>
					</s:Group>
				</s:Group>
			</s:VGroup>
			
		</s:VGroup>
	

	</s:Group>
</s:View>