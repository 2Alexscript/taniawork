<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		backgroundColor="#e8e8e8"
		menuKeyPressed="navigator.pushView(Home)"
		backKeyPressed="navigator.popView()" 
		title="" viewActivate="onActivate(event)" 
		xmlns:components="components.*" >
	<s:actionContent>	
	</s:actionContent>
	<fx:Script source="../func/loadingfunctions.as"/>
	<fx:Script source="../func/cameraroll.as"/>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.BitmapData;
			import flash.display.Loader;
			import flash.display.MovieClip;
			import flash.display.Sprite;
			import flash.display.StageAlign;
			import flash.display.StageScaleMode;
			import flash.events.ErrorEvent;
			import flash.events.Event;
			import flash.events.GeolocationEvent;
			import flash.events.MediaEvent;
			import flash.events.MouseEvent;
			import flash.media.CameraRoll;
			import flash.media.MediaPromise;
			import flash.sensors.Geolocation;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.core.ContentCache;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			[Bindable]
			public var rateArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var likeArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var placesArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var selectedThing:Number = -1;
			[Bindable]
			public var mylat:Number = 53.59221;
			[Bindable]
			public var mylong:Number = -113.54009;
			protected var g:Geolocation = new Geolocation();    
			static public const s_imageCache:ContentCache = new ContentCache();
			public function onActivate(event:Event):void
			{
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						var foundactive:Boolean = false;
						for (var i:uint = 0; i < resData.length; i++){
							if (resData[i].active == "yes"){
								foundactive = true;
								emailGo = resData[i].email;
								nameGo = resData[i].name;
							}
						}
					}
					else {
					}
				}
				catch(e:Error){
				}
				
				try{
					if (Geolocation.isSupported)
					{
						g.addEventListener(GeolocationEvent.UPDATE, onUpdate);
						addEventListener(ViewNavigatorEvent.REMOVING,onRemove);	
					}
					else
					{	
						mylat = 53.55921;
						mylong = -113.54009;
					}		
				}
				catch(e:Error){
					mylat = 53.59221;
					mylong = -113.54009;
				}
				
				
				this.title = nameGo.charAt(0).toUpperCase()+nameGo.substring(1,nameGo.length);
				getRatings.send();
				selectedThing = 1;
				thing1.alpha = 0.5;
			}
			
			protected function onUpdate(event:GeolocationEvent):void
			{
				mylat = event.latitude;
				mylong = event.longitude;
			}	
			protected function onRemove(event:ViewNavigatorEvent):void
			{
				g.removeEventListener(GeolocationEvent.UPDATE, onUpdate);                
			}
			
			
			public function showThings(u:uint):void {
				busy = true;
				selectedThing = u;
				if (u == 1){
					rateList.dataProvider = new ArrayCollection();
					rateList.visible = true;
					placesList.visible = false;
					thing1.alpha = 0.5;
					thing2.alpha = 1;
					thing3.alpha = 1;
					getRatings.send();
				}
				else if (u == 2){
					rateList.dataProvider = new ArrayCollection();
					rateList.visible = true;
					placesList.visible = false;
					thing1.alpha = 1;
					thing2.alpha = 0.5;
					thing3.alpha = 1;
					getReviewsILiked.send();
				}
				else if (u == 3){
					placesList.dataProvider = new ArrayCollection();
					rateList.visible = false;
					placesList.visible = true;
					thing1.alpha = 1;
					thing2.alpha = 1;
					thing3.alpha = 0.5;
					getPlacesEaten.send();
				}
			}
			public function afterGetRatings(ev:ResultEvent):void {
				busy = false;
				rateArray = new ArrayCollection();
				try{			
					rateArray = ev.result[0].results.result;		
				}
				catch(e:Error){
					try{	
						rateArray.addItem(ev.result[0].results.result);
					}
					catch(e:Error){}
				}
				rateList.dataProvider = rateArray;
			}
			public function afterGetLiked(ev:ResultEvent):void {
				busy = false;
				
				likeArray = new ArrayCollection();
				try{			
					likeArray = ev.result[0].results.result;		
				}
				catch(e:Error){
					try{	
						likeArray.addItem(ev.result[0].results.result);
					}
					catch(e:Error){}
				}
				rateList.dataProvider = likeArray;
			}
			public function afterGetPlacesEaten(ev:ResultEvent):void {
				busy = false;
				var i:uint = 0;
				placesArray = new ArrayCollection();
				try{			
					placesArray = ev.result[0].results.result;		
				}
				catch(e:Error){
					try{	
						placesArray.addItem(ev.result[0].results.result);
					}
					catch(e:Error){}
				}
				for (i=  0; i < placesArray.length; i++){
					placesArray[i].distance = Number(getDistance(mylat,mylong,placesArray[i].lat,placesArray[i].longa));
				}
				placesList.dataProvider = placesArray;
			}
			public function getDistance(lat1:Number, lon1:Number, lat2:Number, lon2:Number):String {
				var R1:Number = 6371; // km
				var dLat:Number = degreesToRadians(lat2-lat1);
				var dLon:Number = degreesToRadians(lon2-lon1);
				var lat1:Number = degreesToRadians(lat1);
				var lat2:Number = degreesToRadians(lat2);
				var a:Number = Math.sin(dLat/2) * Math.sin(dLat/2) +
					Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); 
				var c:Number = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
				var d:Number = R1 * c;
				return d.toFixed(2);
			}
			public function degreesToRadians(degrees:Number):Number {
				return degrees * Math.PI / 180;
			}
			public function radiansToDegrees(radians:Number):Number{
				return radians * 180 / Math.PI;	
			}
			public function gOver(ev:MouseEvent):void {
				ev.currentTarget.alpha = 0.5;
			}
			public function gDown(ev:MouseEvent):void {
				ev.currentTarget.alpha = 0.5;
			}
			public function gOut(ev:MouseEvent):void {
				if (((ev.currentTarget.id == 'thing1')&&(selectedThing == 1))||
					((ev.currentTarget.id == 'thing2')&&(selectedThing == 2))||
					((ev.currentTarget.id == 'thing3')&&(selectedThing == 3))){
					ev.currentTarget.alpha = 0.5;
				}
				else {
					ev.currentTarget.alpha = 1;
				}
				
			}
			
			public var goingtonext:Boolean = false;
			
			
			public function ratingitemclick():void {
				if (goingtonext == false){
					goingtonext = true;
					if (rateList.selectedIndex != -1){
						if (selectedThing == 1){
							navigator.pushView(ViewReview, rateArray[rateList.selectedIndex]);	
						}
						else {
							navigator.pushView(ViewReview, likeArray[rateList.selectedIndex]);	
						}
						
					}
				}
				else {
					goingtonext = false;
				}
			}
			
			
			public function storeListClick():void {	
				if (goingtonext == false){
					goingtonext = true;
					if (placesList.selectedIndex != -1){
						try{
							data.homefilterarray = [];
						}
						catch(e:Error){}
						navigator.pushView(StoresDescription, placesArray[placesList.selectedIndex]);	
					}
					else {
						goingtonext = false;
					}
				}
					
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getRatings" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/mobile/getMyRatings.php"
					   result="afterGetRatings(event)" >
			<s:request xmlns="">
				<useremail>{emailGo}</useremail>	
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="getReviewsILiked" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/mobile/getMyLikedReviews.php"
					   result="afterGetLiked(event)" >
			<s:request xmlns="">
				<useremail>{emailGo}</useremail>	
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="getPlacesEaten" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/mobile/getMyPlacesEaten.php"
					   result="afterGetPlacesEaten(event)" >
			<s:request xmlns="">
				<useremail>{emailGo}</useremail>	
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	
	
	<s:Group width="100%" horizontalCenter="0" height="100%" >
		<s:Scroller left="0" horizontalCenter="0" verticalCenter="0" id="v2" right="0" height="100%"
					verticalScrollPolicy="on" horizontalScrollPolicy="off" >
			<s:VGroup gap="0" width="100%" height="100%">
				<s:BorderContainer  width="100%"  borderVisible="false" backgroundColor="#c4c4c4">
					<s:Image id="mainprofimage" width="100%" mouseEnabled="false" visible="false"/>
					<s:VGroup width="100%" id="defaultimggroup" click="editImageClick(event)"  visible="true" horizontalAlign="center" gap="0">
						<s:Group height="60" width="100%">
							<s:Image id="editimg" click="editImageClick(event)" height="100%" smooth="true" width="{editimg.height}"
									 scaleMode="stretch" source="assets/editimage.png" right="10" top="10"/>
						</s:Group>
						<s:Image  horizontalCenter="0" mouseEnabled="false" verticalCenter="0"  contentLoader="{s_imageCache}" >
							<s:source>
								<s:MultiDPIBitmapSource source160dpi="@Embed('assets/profile-default.png')"
														source240dpi="@Embed('assets/profile-default.png')"
														source320dpi="@Embed('assets/profile-default.png')"
														source480dpi="@Embed('assets/profile-default.png')"
														source640dpi="@Embed('assets/profile-default.png')"/>
							</s:source>
						</s:Image>
						<s:Group height="30" width="100%">
						</s:Group>
					</s:VGroup>
				</s:BorderContainer>
				<s:BorderContainer borderAlpha="0"  backgroundColor="#f2f2f2" backgroundAlpha="1" width="100%" height="70">
					<s:Label  styleName="textsize0"  color="#808080" horizontalCenter="0" text="{'Edmonton, Alberta • '+rateArray.length+' Reviews'}"
							  verticalCenter="0"/>
				</s:BorderContainer>
				<s:HGroup gap="0"  width="100%" height="140">
					<s:BorderContainer id="thing1" height="100%" width="{this.width/3}" 
									    click="showThings(1)"
									    mouseDown="gDown(event)"  mouseUp="gOut(event)" 
										mouseOver="gOver(event)" mouseOut="gOut(event)"
									   borderAlpha="0" backgroundColor="#8eddce">
						<s:VGroup mouseEnabled="false" horizontalCenter="0" 
								  gap="10" verticalCenter="0" horizontalAlign="center" verticalAlign="middle">
							<s:Image mouseEnabled="false" source="../assets/profile-myreviews.png"/>
							<s:Label mouseEnabled="false" text="My Reviews" styleName="textsize0"  color="#FFFFFF"/>
						</s:VGroup>
					</s:BorderContainer>
					<s:BorderContainer id="thing2" height="100%" width="{this.width/3}"
									   click="showThings(2)"
									   mouseDown="gDown(event)"  mouseUp="gOut(event)" 
									   mouseOver="gOver(event)" mouseOut="gOut(event)"
									   borderAlpha="0" backgroundColor="#9ebade">
						<s:VGroup mouseEnabled="false" horizontalCenter="0" 
								  gap="10" verticalCenter="0" horizontalAlign="center" verticalAlign="middle">
							<s:Image mouseEnabled="false" source="../assets/profile-reviewiliked.png"/>
							<s:Label mouseEnabled="false" text="Reviews I've Liked" styleName="textsize0"  color="#FFFFFF"/>
						</s:VGroup>
					</s:BorderContainer>
					<s:BorderContainer id="thing3" height="100%" width="{this.width/3}" 
									   click="showThings(3)"
									   mouseDown="gDown(event)"  mouseUp="gOut(event)" 
									   mouseOver="gOver(event)" mouseOut="gOut(event)"
									   borderAlpha="0" backgroundColor="#c7c7c7">
						<s:VGroup mouseEnabled="false" horizontalCenter="0" 
								  gap="10" verticalCenter="0" horizontalAlign="center" verticalAlign="middle">
							<s:Image mouseEnabled="false" source="../assets/profile-placesieat.png"/>
							<s:Label mouseEnabled="false" text="Places I've Eaten" styleName="textsize0"  color="#FFFFFF"/>
						</s:VGroup>
					</s:BorderContainer>
				</s:HGroup>
				<s:Group width="100%" height="100%">
					<s:List  id="rateList" visible="true"
							 width="{this.width}" 
							 horizontalCenter="0" 
							 verticalScrollPolicy="off"  horizontalScrollPolicy="off"  	 contentBackgroundAlpha="0" 
							 itemRenderer="components.ratingsResultProfile"
							 change="ratingitemclick();"
							 click="ratingitemclick();"  >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" variableRowHeight="true"
											  gap="0"/>
						</s:layout>
					</s:List>
					<s:List  id="placesList" visible="false"
							 width="{this.width}" 
							 horizontalCenter="0" 
							 change="storeListClick();"
							 click="storeListClick();"
							 verticalScrollPolicy="off"  horizontalScrollPolicy="off"  	 contentBackgroundAlpha="0" 
							 itemRenderer="components.storeResult"
							   >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" variableRowHeight="true"
											  gap="0"/>
						</s:layout>
					</s:List>
				</s:Group>
				
				
				</s:VGroup>
			</s:Scroller>
		</s:Group>
	
</s:View>