<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		backgroundColor="#e8e8e8"
		menuKeyPressed="navigator.pushView(Home)"
		backKeyPressed="navigator.popView()" 
		title="Reviews" viewActivate="onActivate(event)" 
		xmlns:components="components.*" >
	<s:actionContent></s:actionContent>
	<fx:Script source="../func/loadingfunctions.as"/>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.events.Event;
			import flash.events.MouseEvent;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			[Bindable]
			public var rateArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var likedArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var switchval:uint = 1;
			public function onActivate(event:Event):void
			{
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						var foundactive:Boolean = false;
						for (var i:uint = 0; i < resData.length; i++){
							if (resData[i].active == "yes"){
								foundactive = true;
								emailGo = resData[i].email;
								nameGo = resData[i].name;
							}
						}
					}
					else {
					}
				}
				catch(e:Error){
				}
				getRatings.send();
			}
			public function rateListChange(ev:IndexChangeEvent):void {
				if (rateList.selectedIndex != -1){
					if (switchval == 1){
						navigator.pushView(ViewReview, {
							description:rateArray[rateList.selectedIndex].ratingdescription,
							business_name:rateArray[rateList.selectedIndex].business_name,
							firstname:rateArray[rateList.selectedIndex].firstname,
							id:rateArray[rateList.selectedIndex].id,
							lastname:rateArray[rateList.selectedIndex].lastname,
							locationid:rateArray[rateList.selectedIndex].locationid,
							menuid:rateArray[rateList.selectedIndex].ratingdmenuidescription,
							menuname:rateArray[rateList.selectedIndex].menuname,
							rating:rateArray[rateList.selectedIndex].rating,
							ratingdate:rateArray[rateList.selectedIndex].ratingdate,
							totallikecount:rateArray[rateList.selectedIndex].totallikecount,
							useremail:rateArray[rateList.selectedIndex].useremail
						}
						);	
					}
					else {
						navigator.pushView(ViewReview, {
							description:likedArray[rateList.selectedIndex].ratingdescription,
							business_name:likedArray[rateList.selectedIndex].business_name,
							firstname:likedArray[rateList.selectedIndex].firstname,
							id:likedArray[rateList.selectedIndex].id,
							lastname:likedArray[rateList.selectedIndex].lastname,
							locationid:likedArray[rateList.selectedIndex].locationid,
							menuid:likedArray[rateList.selectedIndex].ratingdmenuidescription,
							menuname:likedArray[rateList.selectedIndex].menuname,
							rating:likedArray[rateList.selectedIndex].rating,
							ratingdate:likedArray[rateList.selectedIndex].ratingdate,
							totallikecount:likedArray[rateList.selectedIndex].totallikecount,
							useremail:likedArray[rateList.selectedIndex].useremail
						});	
					}
					
				}
			}
			public function afterGetRatings(ev:ResultEvent):void {
				busy = false;
				rateArray = new ArrayCollection();
				likedArray = new ArrayCollection();
				try{			
					rateArray = ev.result[0].results.result;		
				}
				catch(e:Error){
					try{
						
						rateArray.addItem(ev.result[0].results.result);
					}
					catch(e:Error){
					}
				}
				
				try{			
					likedArray = ev.result[0].results2.result2;		
				}
				catch(e:Error){
					try{
						
						likedArray.addItem(ev.result[0].results2.result2);
					}
					catch(e:Error){
					}
				}
			}
			public function switchclick(event:MouseEvent):void
			{
				if (switchval == 1){
					switchval = 2;
					switchimage.source = 'assets/myreviewsliked2.png';
					rateList.dataProvider = likedArray;
					
				}
				else {
					switchval = 1;
					switchimage.source = 'assets/myreviewsliked1.png';
					rateList.dataProvider = rateArray;
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getRatings" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/mobile/getMyRatings.php"
					   result="afterGetRatings(event)" >
			<s:request xmlns="">
				<useremail>{emailGo}</useremail>	
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:VGroup width="100%" gap="0" height="100%" horizontalAlign="center">
		<s:BorderContainer borderAlpha="0"  visible="true" backgroundColor="#8eddce" backgroundAlpha="1" width="100%" height="75">
 		<s:Image id="switchimage"  click="switchclick(event)"  horizontalCenter="0" verticalCenter="0">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/myreviewsliked1.png')"
										source240dpi="@Embed('assets/myreviewsliked1.png')"
										source320dpi="@Embed('assets/myreviewsliked1.png')"
										source480dpi="@Embed('assets/myreviewsliked1.png')"
										source640dpi="@Embed('assets/myreviewsliked1.png')"
										/>
			</s:source>
		</s:Image>
		</s:BorderContainer>
		<s:List  id="rateList" 
				 width="{this.width}" 
				 horizontalCenter="0" height="100%"
				 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
				dataProvider="{rateArray}" 
				itemRenderer="components.ratingsResultProfile"
				change="rateListChange(event);"  >
			<s:layout>
				<s:VerticalLayout variableRowHeight="true" horizontalAlign="contentJustify" 
								  gap="0"/>
			</s:layout>
		</s:List>
	</s:VGroup>
	
</s:View>