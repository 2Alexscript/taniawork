<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:michaelvandaniker="com.michaelvandaniker.visualization.*"
			   xmlns:s="library://ns.adobe.com/flex/spark"  initialize="init(event)"
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="1024" height="1024">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.FlexEvent;
			import mx.graphics.ImageSnapshot;
			import mx.graphics.codec.PNGEncoder;
			import mx.rpc.events.ResultEvent;
			[Bindable]
			public var goCat:String = "";
			[Bindable]
			public var points:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var res:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var cat1:String = "science";
			[Bindable]
			public var cat2:String = "medic";
			[Bindable]
			public var cat3:String = "business";
		
			
			private function takeSnapshot(source:IBitmapDrawable,name:String):void {
				var imageBitmapData:BitmapData = ImageSnapshot.captureBitmapData(source);
				//swfLoader.source = new Bitmap(imageBitmapData);
				var fr:FileReference = new FileReference();
				var encoder:PNGEncoder = new PNGEncoder();	
				fr.save( new Bitmap(imageBitmapData),name);
			}
			public function init(event:FlexEvent):void
			{
				goCat = "science";
				getHomeSquares.send();
				
			}
			public function afterGet(ev:ResultEvent):void {
				var stop:String = "";
				var dataSortField:SortField = new SortField(); 
				dataSortField.caseInsensitive = true; 
				res = ev.result.items.ress1.res2;
				//var res2:ArrayCollection = ev.result.items.ress.res2;
				//var res3:ArrayCollection = ev.result.items.ress.res3;
				//var res4:ArrayCollection = ev.result.items.ress.res4;
				var dataSort:Sort = new Sort(); 				
					dataSortField.name = "heatcount"; 	
					dataSortField.numeric = true; 
					dataSortField.descending = true;
					dataSort.fields = [dataSortField]; 				
					res.sort = dataSort; 
					res.refresh();	
					display(res,1);			
			}
			public function display(res1:ArrayCollection,i:uint):void {
				nav1.removeChildren();
				var imageTitle:String;
				var tripVal:uint = 1;
				var tripCounter:uint = 1;
				var j:uint = 0;
				var startx:uint = 0;
				var starty:uint = 0;
				imageTitle = goCat+i.toString()+".jpg";
				var orgx:uint = (nav1.width/2)-5;
				var orgy:uint =  (nav1.height/2)-5;
				startx = (nav1.width/2)-5;
				starty = (nav1.height/2)-5;
				var direction:String = "up";
				var s:Shape = new Shape();
				s.graphics.lineStyle(1, 0x555555, 1);
				s.graphics.beginFill(colorSlider.value, 1);
				s.graphics.drawRect(startx,starty,10,10);
				nav1.addChild(s);
				//for (j = 0; j < 3500; j++){
				for (j = 0; j < res1.length; j++){
					if (tripCounter != tripVal*tripVal){
						var triphalf:uint = (tripVal-1)/2;
						var heatAlpha:Number = ((res1[j].heatcount)/(res1[0].heatcount))*(multSlider.value);
						var v2alpha:Number = (res1[j].heatcount)/(res1[0].heatcount)
						if (direction == "up"){
							if (starty <= orgy-(10*triphalf)){
								direction = "right";
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								startx = startx + 10;
							}
							else {
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								starty = starty - 10;
							}
						}
						else if (direction == "right"){
							if (startx >= orgx+(10*triphalf)){
								direction = "down";
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								starty = starty + 10;	
							}
							else {
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								startx = startx + 10;
							}
						}
						else if (direction == "down"){
							if (starty >= (orgy+(10*triphalf))){
								direction = "left";
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								startx = startx - 10;
							}
							else {
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								starty = starty + 10;
							}
						}
						else if (direction == "left"){
							if (startx <= orgx-(10*triphalf)){
								direction = "up";
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								starty = starty - 10;
							}
							else {
								nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
								startx = startx - 10;
							}
						}
					}
					else {
						nav1.addChild( getGraphic(heatAlpha,startx,starty,v2alpha));
						tripVal = tripVal+2;
						orgx = orgx;
						startx = orgx-(10*(tripVal-1)/2);
						starty = orgy;
						direction = "up";
						
					}
					tripCounter++;	
				}	
				
				
				//print and save images here
				
				takeSnapshot(nav1,"heat1.png");
				
				
				
			/*	nav1.removeChildren();
				if (goCat == "science"){
					goCat = "medic";
					getHomeSquares.send();
				}
				else if (goCat == "medic"){
					goCat = "business";
					getHomeSquares.send();
				} 
				else {
					//done
				}*/
			}
			public function getGraphic(alpha:Number,x:uint,y:uint,v2alpha:Number):Shape {
				var s:Shape = new Shape();
				
					s.graphics.lineStyle(1, 0x555555, 1);
					s.graphics.beginFill(colorSlider.value, (v2alpha+0.5));
					s.graphics.drawRect(x,y,10,10);
			
			
				return s;		
				
			}
			protected function changeColor(event:Event):void
			{
				// TODO Auto-generated method stub
				display(res,taby.selectedIndex+1);
			}
			
			protected function radiochange(event:Event):void
			{
				// TODO Auto-generated method stub
				display(res,taby.selectedIndex+1);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id = "getHomeSquares" url="http://paperdrill.info/program/php/getItemsByDateSpanForHeat.php" 
					   result="afterGet(event)"
					   method="POST" resultFormat="object">
			<s:request xmlns="">
				<caty1>{goCat}</caty1>
			
			</s:request>
		</s:HTTPService>
		<s:RadioButtonGroup change="radiochange(event)" id="options"/>
	</fx:Declarations>
	<mx:TabNavigator id="taby" x="0" y="0" width="100%" height="100%">
		<s:NavigatorContent  width="100%" height="100%" label="Image 1">
			<s:Label id="yearoWarning5" width="184" height="16" fontFamily="Verdana" fontSize="12" 
					 text="Color" textAlign="center" verticalAlign="middle"/>
			<s:HSlider y="17.2" id="colorSlider"  changeEnd="changeColor(event)"
					   minimum="1" maximum="16777215" stepSize="1" value="50000" width="189" horizontalCenter="-407"/>
			<s:Label id="yearoWarning0" x="211" y="0" width="184" height="16" fontFamily="Verdana"
					 fontSize="12" text="Color Multiplier" textAlign="center" verticalAlign="middle"/>
			<s:HSlider y="17.2" id="multSlider"  changeEnd="changeColor(event)"
					   minimum="1" maximum="5000" stepSize="1" value="100" width="189" horizontalCenter="-196"/>
					 

			<mx:UIComponent id="nav1" y="56" width="1022" height="934">
				
			</mx:UIComponent>
			<mx:SWFLoader height="100%" width="100%" id="swfLoader">
				<mx:filters>
					<mx:DropShadowFilter />
				</mx:filters>
			</mx:SWFLoader>
		</s:NavigatorContent>
	
			</mx:TabNavigator>
</s:Application>
