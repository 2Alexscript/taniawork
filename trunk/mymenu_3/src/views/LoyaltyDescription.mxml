<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:components="components.*"
		xmlns:model="model.*"  
		xmlns:mobile="spark.skins.mobile.*"
		backgroundColor="#000000" visible="true" 
		viewActivate="onActivate(event)" 
		title="{data.business_name}"  actionBarVisible="false"
		xmlns:controls="com.flexcapacitor.controls.*" xmlns:cs="cs.*"  >
	
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.MouseEvent;
			import flash.geom.ColorTransform;
			import flash.sensors.Geolocation;	
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.effects.Fade;
			import mx.effects.effectClasses.FadeInstance;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import spark.components.supportClasses.StyleableTextField;
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			import spark.events.PopUpEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.managers.PersistenceManager;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			public var profDraging:Boolean = false;
			[Bindable]
			public var loyaltyArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			[Bindable]
			public var sortMode:Number = 0;
			[Bindable]
			public var reverse:Boolean = false;
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var done:Boolean = false;
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var purchaseCost:String = "";
			[Bindable]
			public var mylat:Number = 53.59221;
			[Bindable]
			public var mylong:Number = -113.54009;
			[Bindable]
			public var couponid:String = "";
			[Bindable]
			public var mapUrl:String = "http://mymenuapp.ca/php/locations/mobilemap.php";
			[Bindable]
			public var totalurl:String = mapUrl;
			[Bindable]
			public var purchased2:Boolean = false;
			[Bindable]
			public var picture:String = "";
			[Bindable]
			public var scaleval:Number = 0;
			private var roundedMask:Sprite;
			[Bindable]
			public var mmax:uint = 0;
			[Bindable]
			public var mmin:uint = 0;
			[Bindable]
			public var superamount:String = "";
			[Bindable]
			public var minwidthval:Number = 7;
			[Bindable]
			public var idout:String = "";
			public function onActivate(event:Event):void
			{
				try{
					var loadManager:PersistenceManager = new PersistenceManager();
					if(loadManager.load()){
						var savedData:Object = loadManager.getProperty("useremail");
						if(savedData){
							if (savedData.toString() != "ERRORBADERRORBAD"){
								emailGo = savedData.toString();
								var saveManager:PersistenceManager = new PersistenceManager();
								saveManager.setProperty("useremail",savedData.toString());
							}
							
						}
						else {
							try{
								sqlConnection = new SQLConnection();
								sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
								var stmt:SQLStatement = new SQLStatement();
								stmt.sqlConnection = sqlConnection;
								stmt.text = "SELECT email, name, country, active FROM localuser";
								stmt.execute();
								var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
								
								if (resData.length != 0){
									//good login
									var foundactive:Boolean = false;
									for (var i:uint = 0; i < resData.length; i++){
										if (resData[i].active == "yes"){
											foundactive = true;
											emailGo = resData[i].email;
										
										}
										
									}
								}
							}
							catch(e:Error){
								
							}
						}
					}	
				}
				catch(e:Error){
					
				}	
				
				var tempamount:String = data.amount;
				if (data.business_name != null){
					img1.source = data.business_picture;
					if ((data.amount == null)||(data.amount == 'null')){
						data.amount = '0';
					}		
				}
				idout = data.id;
				getloyalty.send();
				headitem.imgo.addEventListener(MouseEvent.CLICK,goback);

			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function profDown(ev:MouseEvent):void {
				var gl:spark.filters.GlowFilter = new GlowFilter(000000,0.6,10,10,15,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function profUp(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function afterGetloyalty(ev:ResultEvent):void  {
				try{
					var stop:String = "";
					loyaltyArray = ev.result[0].res.re;
					
					if (loyaltyArray.length > 0){
						data.amount = loyaltyArray[0].amount;
						//pointsamount.text  = loyaltyArray[0].amount+" Points";
					}
					busy = false;	
				}
				catch(e:Error){
					busy = false;	
				}
			
			}
		
			public function goredeemout():void {
				
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getloyalty" method="GET" 
					   resultFormat="array" 
					   url="http://mymenuapp.ca/php/loyalty/getLoyaltyDescription.php"
					   result="afterGetloyalty(event)" >	
			<s:request xmlns="">
				<idout>{idout}</idout>	
				<emailGo>{emailGo}</emailGo>
				
			</s:request>
		</s:HTTPService>
		
	</fx:Declarations>
	<s:Scroller height="95%" horizontalCenter="0" verticalCenter="0"  width="100%" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup height="100%" horizontalCenter="0" verticalCenter="0"  horizontalAlign="center"  width="100%" gap="0"  >
			<s:VGroup horizontalCenter="0" gap="0" verticalCenter="0"  width="85%"  >
			<components:headeritem id="headitem" lbl="Menu"/>
			</s:VGroup>
			
		
		<s:VGroup width="100%" paddingTop="5" gap="0"  horizontalAlign="center" height="100%" >
			
			<s:BorderContainer borderAlpha="1"  borderColor="#1a2029" 
							   backgroundAlpha="0" width="{this.width/1.2}" height="{((this.width/1.2)/16)*9}" >
				<s:Group width="100%" height="100%">
					<s:VGroup  width="100%" gap="0" height="100%" >
						<s:Group width="100%" height="100%"  >
						
							<s:BitmapImage width="100%"  height="100%" id="img1"  scaleMode="stretch" 
										   />
							<s:BorderContainer backgroundAlpha="0.8" borderVisible="false" 
											   backgroundColor="#000000" bottom="0" width="100%" height="65">
								<s:Label left="10" width="100%"  color="#FFFFFF" 
										 fontWeight="bold" text="{data.business_name}" verticalAlign="middle"
										 verticalCenter="0"/>
								
							</s:BorderContainer>
						</s:Group>
						
					</s:VGroup>
				</s:Group>
			</s:BorderContainer>
			<s:BorderContainer width="100%"  height="47"  borderAlpha="0.8"  borderColor="#FFFFFF"  backgroundColor="#000000">
				<s:Label left="10" color="#FFFFFF" text="Offers" verticalCenter="0"/>
			</s:BorderContainer>
			<s:List id="loyaltyList" width="95%" height="100%"  horizontalScrollPolicy="off"
					alternatingItemColors="[0x000000,0x020202 ]" 
					dataProvider="{loyaltyArray}" horizontalCenter="0"
					itemRenderer="components.loyaltydescriptionitem" labelField="name"
					selectedIndex="1">
				<s:layout>
					<s:VerticalLayout horizontalAlign="contentJustify"  variableRowHeight="false"
									  gap="1"/>
				</s:layout>
			</s:List>
		</s:VGroup>
		</s:VGroup>
	</s:Scroller>
	<s:BusyIndicator visible="{busy}" symbolColor="#FFFFFF" verticalCenter="0" horizontalCenter="0"/>
</s:View>