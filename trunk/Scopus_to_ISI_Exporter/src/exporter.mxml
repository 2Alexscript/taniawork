<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   width="400" height="300"
					   xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Script source="cleaningfunctions.as"/>
	<fx:Script>
		<![CDATA[
			import com.shortybmc.data.parser.CSV;
			public var file:File;
			public var author_index:Number = -1;
			public var title_index:Number = -1;
			public var year_index:Number = -1;
			public var abstract_index:Number = -1;
			public var source_index:Number = -1;
			public var sourceabv_index:Number = -1;
			public var reference_index:Number = -1;
			public var referencecount_index:Number = -1;
			public var pmid_index:Number = -1;
			public var outputText:String = "";
			public var lineArray:Array = new Array();
			public function fileSelect():void {
				file = new File();
				file.addEventListener(Event.SELECT, file_select);
				file.browseForOpen("Please select a csv file...");
			}
			public function file_select(evt:Event):void {			
				var fileStream:FileStream = new FileStream(); 
				fileStream.open(file, FileMode.READ); 
				readfromcsvfile(fileStream.readUTFBytes(fileStream.bytesAvailable));	
			}
			public function readfromcsvfile(s:String):void{		
				var text:String = s;	
				outputText = "";
				var deliberator:String = "\n";
				var csv:CSV = new CSV();
				csv.recordsetDelimiter= deliberator;
				csv.data = s;
				csv.decode()
				lineArray = csv.data;
				var fieldArray:Array = csv.header;
				for (var j:uint = 0; j < fieldArray.length; j++){
					var field:String = fieldArray[j];
					var jd:RegExp;
					jd = new RegExp("\"","g")
					field = field.replace(jd,"");
					jd = new RegExp("_","g")
					field = field.replace(jd," ");
					if (field.toLowerCase() == "authors"){
						author_index = j;
					}
					else if (field.toLowerCase() == "title"){
						title_index = j;
					}
					else if (field.toLowerCase() == "year"){
						year_index = j;
					}
					else if (field.toLowerCase() == "abstract"){
						abstract_index = j;
					}
					else if (field.toLowerCase() == "source title"){
						source_index = j;
					}
					else if (field.toLowerCase() == "abbreviated source title"){
						sourceabv_index = j;
					}
					else if (field.toLowerCase() == "references"){
						reference_index = j;
					}
					else if (field.toLowerCase() == "cited by"){
						referencecount_index = j;
					}
					else if (field.toLowerCase() == "times cited"){
						referencecount_index = j;
					}
					else if (field.toLowerCase() == "pubmed id"){
						pmid_index = j;
					}
				}
				
				totalCallCount = lineArray.length;
				DoNextFunction();
			}
			
			
			public var totalCallCount:int = 0;
			private var _timesCalled:int = 0;
			
			
			private function DoNextFunction():void
			{
				if( _timesCalled >= totalCallCount )
				{
					var docsDir:File = File.documentsDirectory;
					docsDir.browseForSave("Save As");
					docsDir.addEventListener(Event.SELECT, saveData);
				}
				else
				{
					processLine(lineArray[_timesCalled],_timesCalled,lineArray.length);
					_timesCalled++;
					callLater( DoNextFunction );
				}
			}
			
			
			
			
			
			
			public function processLine(ar:Array,i:Number,total:Number):void {
				var lineSections:Array = ar;
				var deliberator:String = "\n";
				var author_string:String = lineSections[author_index];
				var title_string:String = lineSections[title_index];
				var year_string:String = lineSections[year_index];
				var abstract_string:String = lineSections[abstract_index];
				var source_string:String = lineSections[source_index];
				var sourceabv_string:String = lineSections[sourceabv_index];
				var reference_string:String = lineSections[reference_index];
				var referencecount_string:String = lineSections[referencecount_index];
				var pmid_string:String = lineSections[pmid_index];
				
				outputText = outputText + deliberator+"FN Thomson Reuters Web of Scienceâ„¢";
				outputText = outputText + deliberator+"VR 1.0";
				outputText = outputText + deliberator+"PT J";
				outputText = outputText + deliberator+"AU "+authorFixer(author_string);
				outputText = outputText + deliberator+"TI "+clean2(title_string);
				outputText = outputText + deliberator+"SO "+sourcefullclean(source_string);
				outputText = outputText + deliberator+"LA English";
				outputText = outputText + deliberator+"DT Article";
				outputText = outputText + deliberator+"DE None";
				outputText = outputText + deliberator+"ID "+pmid_string;
				outputText = outputText + deliberator+"AB "+abstractclean(abstract_string);
				outputText = outputText + deliberator+"C1 XXXX";
				outputText = outputText + deliberator+"RP XXXX";
				outputText = outputText + deliberator+"SA ";
				
				var citationcount:Number = 0;
				var citationarray:Array = reference_string.split("; ");
				for (var k:uint = 0; k < citationarray.length; k++){
					var citationarray2:Array = citationarray[k].split(".,");
					var ref_last:String = citationarray2[citationarray2.length-1];
					
					var iyib:Number = getIndexOfYearBrackets(ref_last);
					if (iyib == -1){
						//trace("Citation missing date");
					}
					else {
						var ref_title:String = trim(ref_last.substr(0,iyib));
						ref_last = ref_last.substr(iyib+1,ref_last.length);
						var ref_year:String = trim(ref_last.substr(0,ref_last.indexOf(")")));
						ref_last = ref_last.substr(ref_last.indexOf(")")+1,ref_last.length);
						var ref_source:String = trim(ref_last.substr(0,ref_last.indexOf(",")));
						for (var p:uint = 0; p < citationarray2.length-1; p++){
							var ref_author:String = authorCitationFixer(citationarray2[p]);
							if (ref_author.length > 3){
								if (citationcount == 0){
									outputText = outputText + deliberator+"CR "+ref_author+", "+ref_year+", "+ref_source.toUpperCase()+", V1, P1";
								}
								else {
									outputText = outputText + deliberator+"   "+ref_author+", "+ref_year+", "+ref_source.toUpperCase()+", V1, P1";
								}
								citationcount++;
							}
						}
					}
				}
				
				outputText = outputText + deliberator+"NR "+citationcount.toString();
				outputText = outputText + deliberator+"TC 0";
				outputText = outputText + deliberator+"PU SAGE PUBLICATIONS LTD";
				outputText = outputText + deliberator+"PI LONDON";
				outputText = outputText + deliberator+"PA 6 BONHILL STREET, LONDON EC2A 4PU, ENGLAND";
				outputText = outputText + deliberator+"SN 1043-4631";
				outputText = outputText + deliberator+"J9 "+sourceabvclean1(sourceabv_string);
				outputText = outputText + deliberator+"JI "+sourceabvclean2(sourceabv_string);
				outputText = outputText + deliberator+"PD MAY";
				outputText = outputText + deliberator+"VL 1";
				outputText = outputText + deliberator+"IS 1";
				outputText = outputText + deliberator+"BP 1";
				outputText = outputText + deliberator+"EP 1";
				outputText = outputText + deliberator+"PG 1";
				
				if (i < 10){
					outputText = outputText + deliberator+"UT WOS:00008729600000"+i.toString();
				}
				else if (i < 100){
					outputText = outputText + deliberator+"UT WOS:0000872960000"+i.toString();
				}
				else if ( i < 1000){
					outputText = outputText + deliberator+"UT WOS:000087296000"+i.toString();
				}
				else if ( i < 10000){
					outputText = outputText + deliberator+"UT WOS:00008729600"+i.toString();
				}
				else if ( i < 100000){
					outputText = outputText + deliberator+"UT WOS:0000872960"+i.toString();
				}
				else if ( i < 1000000){
					outputText = outputText + deliberator+"UT WOS:000087296"+i.toString();	
				}
				else if ( i < 10000000){
					outputText = outputText + deliberator+"UT WOS:00008729"+i.toString();
				}
				else if ( i < 100000000){
					outputText = outputText + deliberator+"UT WOS:0000872"+i.toString();
				}
				
				outputText = outputText + deliberator+"SC ";
				outputText = outputText + deliberator+"GA 275DW";
				outputText = outputText + deliberator+"ER";
				outputText = outputText + "\n";
				
				statuso.text = "Processing "+i.toString()+" / "+total;
			}
			public function saveData(event:Event):void {
				var newFile:File = event.target as File;
				var stream:FileStream = new FileStream();
				stream.open(newFile, FileMode.WRITE);
				stream.writeUTFBytes(outputText);
				stream.close();
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%"  horizontalAlign="center" verticalAlign="middle">
		<s:Label x="5" y="11" width="246" height="29" fontSize="20" text="ISI Exporter"
				 textAlign="center" verticalAlign="middle"/>
		<s:Button x="647" y="33" label="Select Scopus File" click="fileSelect()"/>
		<s:Label id="statuso"></s:Label>
	</s:VGroup>
</s:WindowedApplication>