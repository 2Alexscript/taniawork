<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		  backgroundColor="#e8e8e8" 
		  menuKeyPressed="navigator.pushView(Home)"
		  backKeyPressed="navigator.popView()"
		title="Modifications"  xmlns:components="components.*" >
	<s:navigationContent >
		<components:backbutton width="{this.width*0.15}" mouseEnabledWhereTransparent="true" 
							   height="100%"   click="navigator.popView(crosstrans);"/>
	</s:navigationContent>
	<s:actionContent>
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import spark.transitions.CrossFadeViewTransition;

			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.managers.PersistenceManager;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			public var crosstrans:CrossFadeViewTransition = new CrossFadeViewTransition(); 
			[Bindable]
			public var alphatitle:String = "Restrictions";
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var idGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var togstatus:Boolean = false;
			[Bindable]
			public var catArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var alerArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var listData:ArrayCollection = new ArrayCollection();
			public function onActivate(event:Event):void
			{
				crosstrans.duration = 400;
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good login
						var foundactive:Boolean = false;
						for (var i:uint = 0; i < resData.length; i++){
							if (resData[i].active == "yes"){
								foundactive = true;
								emailGo = resData[i].email;
								nameGo = resData[i].name;
							}
						}
					}
					else {
						//bad login or no local saved login.
					}
				}
				catch(e:Error){
					
				}
					
					busy = false;
					scroller.visible = true;
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function usermenuclick():void {
				navigator.pushView(AccountSettings);
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}
			
			protected function storeList_clickHandler(event:MouseEvent):void
			{
			
			}
			public function press(event:KeyboardEvent):void {
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>		
	</fx:Declarations>
	<s:Group  visible="true" height="100%" horizontalCenter="0"   width="100%"  >
		<s:Image width="100%" height="100%" scaleMode="stretch" smooth="true">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/fogback.png')"
										source240dpi="@Embed('assets/fogback.png')"
										source320dpi="@Embed('assets/fogback.png')"
										source480dpi="@Embed('assets/fogback.png')"
										source640dpi="@Embed('assets/fogback.png')"/>
			</s:source>
		</s:Image>
	<s:VGroup id="scroller" visible="true" height="100%" horizontalCenter="0" verticalCenter="0" paddingTop="0"  width="100%"  >
		<s:List  id="modList" 
				 width="100%" 
				 verticalScrollPolicy="off" 
				 horizontalScrollPolicy="off" contentBackgroundAlpha="0" 
				 itemRenderer="components.modItem" dataProvider="{data.modifications}" >
			<s:layout>
				<s:VerticalLayout horizontalAlign="contentJustify" 
								  gap="0"/>
			</s:layout>
		</s:List>
	</s:VGroup>
		</s:Group>
	<s:BusyIndicator visible="{busy}" symbolColor="#777777" verticalCenter="0" horizontalCenter="0"/>
</s:View>