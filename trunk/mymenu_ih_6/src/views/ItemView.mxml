<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:d="dao.*" xmlns:u="utils.*" 
		contentBackgroundAlpha="1"
		contentBackgroundColor="#f3f3f3"
		backgroundAlpha="1"
		backgroundColor="#f3f3f3" 
		xmlns:components="components.*" 
		title="MyMenu"
		activate="onActivate(event)"
		dataChange="onDataChange(event)">
	<s:actionContent>	
		<s:Button id="Button" label="Submit" color="#f3f3f3" 
				  textShadowAlpha="0" visible="false"  />
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import components.EasyPushExample;
			import events.ReportEvent;
			import flash.net.URLLoader;
			import flash.net.URLRequest;
			import flash.sensors.Geolocation;
			import flash.utils.describeType;
			import model.Expense;
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.AsyncResponder;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import spark.components.DateSpinner;
			import spark.components.Group;
			import spark.components.HGroup;
			import spark.components.RadioButton;
			import spark.components.SpinnerList;
			import spark.components.SpinnerListContainer;
			import spark.components.TextArea;
			import spark.components.TextInput;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			import spark.transitions.CrossFadeViewTransition;
			[Bindable]
			protected var busy:Boolean = false;
			public function onActivate(event:Event):void
			{
				busy = false;	
			}
			
			protected function onDataChange(event:FlexEvent):void
			{	
			}
			
		]]>
	</fx:Script>
		
	<s:states>
		<s:State name="portrait"/>
		<s:State name="landscape"/>
	</s:states>
	
	<fx:Declarations>
		<d:ExpenseReportDAO id="srv"/>
		<s:DateTimeFormatter id="dtf" dateTimePattern="yyyy/MM/dd"/>
		<s:CurrencyFormatter id="cf" useCurrencySymbol="true"/>
		<s:CrossFadeViewTransition id="transition" duration="0"/>
	</fx:Declarations>
	<s:Scroller top="0" bottom="0" right="0" left="0" verticalScrollPolicy="on" horizontalScrollPolicy="off">
		<s:VGroup paddingTop="0" paddingLeft="10" id="vlist" paddingBottom="0" paddingRight="10"
				 right="10" left="10" height="100%" gap="20">
			<s:Label text="Temp Label"/>
		</s:VGroup>
	</s:Scroller>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
</s:View>