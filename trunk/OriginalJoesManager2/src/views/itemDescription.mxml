<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="activate1()" title="Checklist" xmlns:components="components.*" xmlns:renderers="renderers.*">
	<s:navigationContent >
		<s:Button label="Back" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>
	<fx:Script>
		<![CDATA[	
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.effects.Fade;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			[Bindable]
			public var idout:Number = -1;
			[Bindable]
			protected var listdata:ArrayCollection;
			[Bindable]
			public var busy:Boolean = true;
			
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function homeGo(u:uint):void {				
				if (u == 0){
					//navigator.pushView(HomeSimpliSave, {index:u});
				}
				else if (u == 1){
					//navigator.pushView(HomeFindAFav, {index:u});
				}
				else if (u == 2){
					//navigator.pushView(HomeMyFavs, {index:u});
				}
				else if (u == 3){
					//navigator.pushView(HomeSettings, {index:u});
				}
				
			}	
			
			public function activate1():void
			{
				idout = data.id;
				if (idout != -1){
					getChecklistItems.send();
				}
			}
			public function afterGetChecklistItems(ev:ResultEvent):void {
				var stop:String = "";
				busy = false;
				listdata = new ArrayCollection();
				try{
					listdata = ev.result[0].res;	
				}
				catch(e:Error){
					try{
						listdata.addItem( ev.result[0].res);
					}
					catch(e:Error){
						listdata.addItem({id:-1,checklistid:-1,name:"Empty Checklist",type:"-1",alert:"-1"});
					}
				}
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Style>
		
		
		
	</fx:Style>
	<fx:Declarations>
		<s:HTTPService id="getChecklistItems" method="GET" 
					   resultFormat="array" 
					   url="http://enactforum.org/originaljoes/manager/getCheckListItems.php"
					   result="afterGetChecklistItems(event)" >
			<s:request xmlns="">
				<idout>{idout}</idout>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Image left="0" right="0" top="0" bottom="0" alpha="0.8" scaleMode="stretch"
			 source="assets/backdrop.png"/>
	<s:List id="list" width="100%" height="100%" dataProvider="{listdata}" >
		<s:itemRenderer>
			<fx:Component>
				<renderers:checkListItemItem labelField="name" dateField="name" amountField="name"/>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
</s:View>
