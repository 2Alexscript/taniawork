<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:s="library://ns.adobe.com/flex/spark" viewActivate="activate1()" 
		title="Edit Checklist" xmlns:components="components.*" xmlns:renderers="renderers.*">
	<s:navigationContent >
		<s:Button label="Back" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>

	<fx:Script>
		<![CDATA[	
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.effects.Fade;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			[Bindable]
			public var idout:Number = -1;
			[Bindable]
			protected var listdata:ArrayCollection;
			[Bindable]
			public var busy:Boolean = true;
			
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,1,4,4,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			
			public function activate1():void
			{
				this.title = data.name;
				titleText.text = data.name;
				idout = data.id;
				if (idout != -1){
					getChecklistItems.send();
				}
			}
			public function afterGetChecklistItems(ev:ResultEvent):void {
				var stop:String = "";
				busy = false;
				listdata = new ArrayCollection();
				try{
					listdata = ev.result[0].res;	
				}
				catch(e:Error){
					try{
						listdata.addItem( ev.result[0].res);
					}
					catch(e:Error){
						listdata.addItem({id:-1,checklistid:-1,name:"Empty Checklist",type:"-1",alert:"-1"});
					}
				}
			}
			public function addItem():void {
				
			}
			
		]]>
	</fx:Script>
	
	
	<fx:Style>
		
		
		
	</fx:Style>
	<fx:Declarations>
		<s:HTTPService id="getChecklistItems" method="GET" 
					   resultFormat="array" 
					   url="http://enactforum.org/originaljoes/manager/getCheckListItems.php"
					   result="afterGetChecklistItems(event)" >
			<s:request xmlns="">
				<idout>{idout}</idout>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Image left="0" right="0" top="0" bottom="0" alpha="0.8" scaleMode="stretch"
			 source="assets/backdrop.png"/>
	
	<s:Scroller id="scroller" left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" height="100%" horizontalAlign="center" horizontalCenter="0">
			<s:HGroup width="100%" height="53" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:Label x="28" y="31" fontSize="20" fontWeight="bold" text="Title: "/>
				<s:TextInput id="titleText"  x="103" y="21" width="182"/>
				
			</s:HGroup>
			<s:VGroup width="100%" height="74" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:Label x="10" y="90" fontSize="20" fontWeight="bold" text="Date Start:"/>
				<s:DateSpinner height="50" displayMode="dateAndTime" x="119" y="140"/>
			</s:VGroup>
			<s:VGroup width="100%" height="66" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:Label x="18" y="157" fontSize="20" fontWeight="bold" text="Date End:"/>
				<s:DateSpinner height="50" displayMode="dateAndTime" x="119" y="72"/>
			</s:VGroup>
			<s:VGroup width="100%" height="100%" gap="6" horizontalAlign="center" verticalAlign="middle">
				<s:Label x="10" y="206" fontSize="20" fontWeight="bold" text="Affected Stores:"/>
				<s:List id="storelist" y="63" width="100%" maxWidth="300" height="90" 
						>
					<s:itemRenderer>
						<fx:Component>
							<renderers:storeAddItem labelField="name" dateField="id" />
						</fx:Component>
					</s:itemRenderer>
				</s:List>
			</s:VGroup>
			
			<s:Label x="10" y="206" fontSize="20" fontWeight="bold" text="Checklist Items"/>
			<s:List id="list" y="106" width="100%" maxWidth="300" height="308" dataProvider="{listdata}">
				<s:itemRenderer>
					<fx:Component>
						<renderers:checkListItemItemEdit labelField="name" dateField="name" amountField="name"/>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
			<s:Button width="109" label="Add New Item" click="addItem();" fontSize="12"/> 

		</s:VGroup>		
	</s:Scroller>	
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
</s:View>
