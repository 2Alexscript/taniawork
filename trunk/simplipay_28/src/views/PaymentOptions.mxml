<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" 
		title="Payment Method" xmlns:BarCode="BarCode.*" backgroundColor="#2a3038" >	
	<s:navigationContent >
		<s:Image x="0" y="-2" click="navigator.popView();" 
				 mouseDown="gDown(event)"
				 mouseOut="gOut(event)" 
				 mouseOver="gOver(event)"
				 mouseUp="gOut(event)">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/backbtnLow.png')"
										source240dpi="@Embed('assets/interfaceimages/multi/backbtnMed.png')"
										source320dpi="@Embed('assets/interfaceimages/multi/backbtnHigh.png')"/>
			</s:source>
		</s:Image>
	</s:navigationContent>
	<s:actionContent>		
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import components.paymentResult;
			
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.qrcode.QRCode;
			
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			import views.AddCreditCard;
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var currentBalance:String = "$0.00";
			[Bindable]
			public var dataList:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var emailGo:String = "";
		
			public function onActivate(event:Event):void
			{
				try{
				
					
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser where active = 'yes'";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good login
						emailGo = resData[0].email;
					}
					else {
						//bad login or no local saved login.
						var stop:String = "";	
						//navigator.popView();
					}	
					
					
				if ((emailGo == "")||(emailGo == null)){
					navigator.popToFirstView();
				}
				else {
					
					
					
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "CREATE TABLE IF NOT EXISTS creditcardinfo (" +
						"id INTEGER PRIMARY KEY AUTOINCREMENT, " +
						"email varchar(255), " +
						"name varchar(255), " +
						"cardnumber varchar(255), " +
						"cvn varchar(255), " +
						"expdate varchar(255), " +
						"cardtype varchar(255), " +
						"address varchar(255), "+
						"usealways varchar(255))";
					stmt.execute();
					
					
					
					
					var chosenpaymenttypename:String = "";
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "CREATE TABLE IF NOT EXISTS chosenpaymenttype (" +
						"id INTEGER PRIMARY KEY AUTOINCREMENT, " +
						"email varchar(255), " +
						"name varchar(255), " +
						"usealways varchar(255))";
					stmt.execute();
					
					
					stmt = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT * FROM chosenpaymenttype where email = '"+emailGo+"'";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					if (resData.length == 0){
						stmt = new SQLStatement();
						stmt.sqlConnection = sqlConnection;
						stmt.text = "INSERT into chosenpaymenttype (email, name, usealways)" +
							" values(:email,:name,:usealways)";
						stmt.parameters[":email"] = emailGo;
						stmt.parameters[":name"] = "creditcard";
						stmt.parameters[":usealways"] = "no";
						stmt.execute();
						stmt = new SQLStatement();
						stmt.sqlConnection = sqlConnection;
						stmt.text = "INSERT into chosenpaymenttype (email, name, usealways)" +
							" values(:email,:name,:usealways)";
						stmt.parameters[":email"] = emailGo;
						stmt.parameters[":name"] = "paypal";
						stmt.parameters[":usealways"] = "no";
						stmt.execute();
						stmt = new SQLStatement();
						stmt.sqlConnection = sqlConnection;
						stmt.text = "INSERT into chosenpaymenttype (email, name, usealways)" +
							" values(:email,:name,:usealways)";
						stmt.parameters[":email"] = emailGo;
						stmt.parameters[":name"] = "simplipay";
						stmt.parameters[":usealways"] = "no";
						stmt.execute();
					}
					
					
					
					stmt = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT * FROM chosenpaymenttype where usealways = 'yes' and email = '"+emailGo+"'";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					if (resData.length != 0){
						chosenpaymenttypename = resData[0].name;
						
					}
					else {
						
					}
					

					stmt = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT * FROM creditcardinfo where email = '"+emailGo+"'";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					if (resData.length != 0){
						//good data					
						var foundusecc:Boolean = false
						for (var i:uint = 0; i < resData.length; i++){
							var selectedVal:Boolean = false
								 if (resData[i].usealways == "yes"){
									 selectedVal = true;
									 foundusecc = true;
									 
									 sqlConnection = new SQLConnection();
									 sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
									 stmt.sqlConnection = sqlConnection;
									 stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'creditcard'";
									 stmt.execute();
									 
								 }
								 var imagesource:String = "";
								 if (resData[i].cardtype == "visa"){
									 imagesource = "assets/interfaceimages/original/cardtypevisa.png";
								 }
								 else  if (resData[i].cardtype == "master card"){
									 imagesource = "assets/interfaceimages/original/cardtypemastercard.png"; 
								 }
								 else  if (resData[i].cardtype == "amex"){
									 imagesource = "assets/interfaceimages/original/cardtypeamex.png"; 
								 }
									dataList.addItem({name:"Credit Card: "+resData[i].name,imagesource:imagesource, ptype:"cc",
										type:1, selected:selectedVal, special:0, ccid:resData[i].id});
									
						
						}
						if (foundusecc){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'paypal'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'simplipay'";
							stmt.execute();
							dataList.addItem({name:"PayPal",imagesource:"assets/interfaceimages/original/cardtypepaypal.png", type:1, selected:false, special:0, ptype:"pp"});
							dataList.addItem({name:"Simplipay",imagesource:"assets/interfaceimages/original/cardtypesimplipay.png", type:1, selected:false, special:0, ptype:"sp"});
							
						}
						else {
							if (chosenpaymenttypename == "simplipay"){
								dataList.addItem({name:"PayPal",imagesource:"assets/interfaceimages/original/cardtypepaypal.png", type:1, selected:false, special:0, ptype:"pp"});	
								dataList.addItem({name:"Simplipay",imagesource:"assets/interfaceimages/original/cardtypesimplipay.png", type:1, selected:true, special:0, ptype:"sp"});
							}
							else{
								sqlConnection = new SQLConnection();
								sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
								stmt.sqlConnection = sqlConnection;
								stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'creditcard'";
								stmt.execute();
								sqlConnection = new SQLConnection();
								sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
								stmt.sqlConnection = sqlConnection;
								stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'simplipay'";
								stmt.execute();
								sqlConnection = new SQLConnection();
								sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
								stmt.sqlConnection = sqlConnection;
								stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'paypal'";
								stmt.execute();
								
								dataList.addItem({name:"PayPal",imagesource:"assets/interfaceimages/original/cardtypepaypal.png", type:1, selected:true, special:0, ptype:"pp"});	
								dataList.addItem({name:"Simplipay",imagesource:"assets/interfaceimages/original/cardtypesimplipay.png", type:1, selected:false, special:0, ptype:"sp"});
							}
							
						}	
					}
					else {
						if (chosenpaymenttypename == "simplipay"){
							dataList.addItem({name:"PayPal",imagesource:"assets/interfaceimages/original/cardtypepaypal.png", type:1, selected:false, special:0, ptype:"pp"});	
							dataList.addItem({name:"Simplipay",imagesource:"assets/interfaceimages/original/cardtypesimplipay.png", type:1, selected:true, special:0, ptype:"sp"});
						}
						else{
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'creditcard'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'simplipay'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'paypal'";
							stmt.execute();
							dataList.addItem({name:"PayPal",imagesource:"assets/interfaceimages/original/cardtypepaypal.png", type:1, selected:true, special:0, ptype:"pp"});	
							dataList.addItem({name:"Simplipay",imagesource:"assets/interfaceimages/original/cardtypesimplipay.png", type:1, selected:false, special:0, ptype:"sp"});
						}
					}
	
				}
			}
			catch(e:Error){
				navigator.popToFirstView();
			}
				
			
			}			
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}		
			public function listChange(ev:IndexChangeEvent):void {
				var stmt:SQLStatement = new SQLStatement();
				for (var i:uint = 0; i < dataList.length; i++){
					stmt = new SQLStatement();
					if (dataList[i].name ==  payList.selectedItem.name){
						dataList[i].selected = true;
						if (dataList[i].ptype == "cc"){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update creditcardinfo set usealways = 'yes' where id = "+dataList[i].ccid;
							stmt.execute();
							
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'creditcard'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'simplipay'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'paypal'";
							stmt.execute();
							
						}
						else if (dataList[i].ptype == "pp"){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'creditcard'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'simplipay'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'paypal'";
							stmt.execute();
						}
						else if (dataList[i].ptype == "sp"){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'creditcard'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'yes' where email = '"+emailGo+"' and name = 'simplipay'";
							stmt.execute();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update chosenpaymenttype set usealways = 'no' where email = '"+emailGo+"' and name = 'paypal'";
							stmt.execute();
						}
						
						
						
						
						
						
					}
					else {
						dataList[i].selected = false;
						if (dataList[i].ptype == "cc"){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
							stmt.sqlConnection = sqlConnection;
							stmt.text = "update creditcardinfo set usealways = 'no' where id = "+dataList[i].ccid;
							stmt.execute();
						}
						
						
						
						
						
					}
				}
				
				dataList.refresh();
			}
			
			protected function addPaymentOption(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.pushView(AddNewPaymentOption, {email:emailGo});

			}
			
		]]>
	</fx:Script>
	<s:Scroller left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" paddingTop="20" height="100%" horizontalAlign="center" horizontalCenter="0"
				   verticalCenter="0">
			<s:Image click="addPaymentOption(event)" mouseDown="gDown(event)" mouseOut="gOut(event)"
					 mouseOver="gOver(event)">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('assets/interfaceimages/multi/addpaymentmethodbtnLow.png')"
											source240dpi="@Embed('assets/interfaceimages/multi/addpaymentmethodbtnMed.png')"
											source320dpi="@Embed('assets/interfaceimages/multi/addpaymentmethodbtnHigh.png')"/>
				</s:source>
			</s:Image>
			<s:Label width="95%" color="#FFFFFF" fontWeight="bold" styleName="textsize3"
					 text="YOUR CARD OPTION" textAlign="center"/>
			<s:List id="payList" itemRenderer="components.paymentResult"  contentBackgroundColor="#2a3038"
					change="listChange(event);" dataProvider="{dataList}" width="95%"  height="100%">
			
				<s:layout>
					<s:VerticalLayout horizontalAlign="contentJustify" 
									  gap="5"
									  />
				</s:layout>
			</s:List>
		</s:VGroup>
	</s:Scroller>
</s:View>
