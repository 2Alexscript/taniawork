<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" creationComplete="goGetBalance();" 
		title="My Account" xmlns:BarCode="BarCode.*" xmlns:components="components.*" >
	<s:navigationContent >
	<s:Button x="0" width="42" height="35" click="accountGo(0)" icon="@Embed('assets/gear.png')"/>
	</s:navigationContent>
	<s:actionContent >	
		<s:Button label="Logout" click="logout();" fontSize="12"/> 
	</s:actionContent>
	
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;	
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import org.qrcode.QRCode;
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var currentBalance:String = "....";
			[Bindable]
			public var emailGo:String = "";
		
			public function onActivate(event:Event):void
			{
				navigator.actionBar.height = 40;
				goGetBalance();
			}
			public function goGetBalance():void {
				if ((data.email != null)&&(data.email != "")){
					emailGo = data.email;
					getBalance.send();		
				}
			}
			public function afterGetBalance(ev:ResultEvent):void {
				currentBalance = "$"+ev.result[0].res.toString();
			}
			public function accountGo(u:uint):void {
				if (u == 0){
					navigator.pushView(MyAccountSettings, {index:u});
				}
				else if (u == 1){
					
					navigator.pushView(MyAccountQR, {index:u,email:data.email,name:data.name,tip:tipo.getCurrentSelected()});
				}
				else if (u == 2){
					if (emailGo != ""){
						navigator.pushView(MyAccountReload, {index:u,currentBalance2:currentBalance,email:emailGo});
					}
					
					
				}
				else if (u == 3){
					//navigator.pushView(MyAccountManage, {index:u});
					manageOptions.visible = true;
				}
				else if (u == 4){
					
				}
				else if (u == 5){
					
				}
			}
			public function Mclose(u:uint):void {
				if (u == 1){
					navigator.pushView(HomeReciepts, {index:u,email:data.email,name:data.name});
				}
				
				goGetBalance();
				manageOptions.visible = false;
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function logout():void {
				sqlConnection = new SQLConnection();
				sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
				var stmt:SQLStatement = new SQLStatement();
				stmt.sqlConnection = sqlConnection;
				stmt.text = "delete from localuser";
				stmt.execute();
				navigator.popToFirstView();
				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<s:HTTPService id="getBalance" method="POST" 
					   resultFormat="array" 
					   url="http://simplipay.ca/php/users/getBalance.php"
					   result="afterGetBalance(event)" >
			<s:request xmlns="">
				<emailGo>{emailGo}</emailGo>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	
	
	
	<s:Scroller left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" height="100%" >
	<s:BorderContainer  visible="true" width="100%" height="100%" borderAlpha="0" backgroundAlpha="0" >
		<s:Image top="21" width="217" height="153" click="accountGo(1);" horizontalCenter="0"
				 mouseDown="gDown(event)" mouseOut="gOut(event)" mouseOver="gOver(event)"
				 smooth="true" source="assets/taptopay.png"/>
		<s:Label top="186" color="#02446F" fontSize="16" horizontalCenter="-94"
				 text="Tip Percentage"/>
		<components:tipSlider id="tipo" top="202" horizontalCenter="0"/>
		
		<s:HGroup top="269"  horizontalCenter="0" width="280" >
			<s:Label color="#02446F" fontSize="22" text="Current Balance :" textAlign="right"/>
			<s:Label id="currentBalanceLbl" width="121" color="#02446F" fontSize="22"
					 text="{currentBalance}" textAlign="left"/>
		</s:HGroup>
		
		
		
		
		<components:genericBlueButton top="307" width="135" height="48" horizontalCenter="-78" click="accountGo(2)" mouseDown="gDown(event)"
											   mouseOut="gOut(event)" mouseOver="gOver(event)" lbl="Reload" />
		<components:genericBlueButton top="307" width="135" height="48" horizontalCenter="75" mouseDown="gDown(event)" click="accountGo(3)"
				 mouseOut="gOut(event)" mouseOver="gOver(event)" lbl="Manage"/>
	</s:BorderContainer>
			</s:VGroup>
		</s:Scroller>
	<s:BorderContainer id="manageOptions" visible="false" left="0" right="0" bottom="0" height="100%"
					   backgroundAlpha="0.5" backgroundColor="#000000" borderAlpha="0"
					   horizontalCenter="0">
		<s:VGroup   gap="5" width="100%" verticalAlign="bottom" horizontalAlign="center" height="100%">
			<s:Image top="16" width="268" height="50" horizontalCenter="0" click="Mclose(0);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/refreshbalance.png"/>
			<s:Image top="81" width="268" height="50" horizontalCenter="0" click="Mclose(1);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/recent.png"/>
	
			<s:Image bottom="5" width="268" height="50" horizontalCenter="0" click="Mclose(0);" mouseDown="gDown(event)"
					 mouseOut="gOut(event)" source="assets/cancel.png"/>
		</s:VGroup>
	</s:BorderContainer>
	
</s:View>
