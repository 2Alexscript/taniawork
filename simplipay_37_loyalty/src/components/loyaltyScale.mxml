<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"  horizontalCenter="0" 
				contentBackgroundColor="#2a3038"  
				xmlns:s="library://ns.adobe.com/flex/spark" width="100%"
				height="300" color="#2a3038" 
				autoDrawBackground="false" contentBackgroundAlpha="0" xmlns:components="components.*"
				creationComplete="init(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import spark.filters.GlowFilter;
			[Bindable]
			public var scaleval:Number = 0;
			private var roundedMask:Sprite;
			[Bindable]
			public var mmax:uint = 0;
			[Bindable]
			public var mmin:uint = 0;
			[Bindable]
			public var superamount:String = "";
			[Bindable]
			public var minwidthval:Number = 7;
			import spark.core.ContentCache;
			static public const s_imageCache:ContentCache = new ContentCache();
			public function profDown(ev:MouseEvent):void {
				var gl:spark.filters.GlowFilter = new GlowFilter(000000,1,5,5,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function profUp(ev:MouseEvent):void {
				ev.currentTarget.filters = [];				
			}
			protected function init(event:FlexEvent):void
			{
				var loyaltypercentage:Number = Number(data.loyaltypercentage);
				var amount:Number = Number(data.amount);
				var incr:Number = loyaltypercentage;
				var tempstring:String = amount.toString();
				if (tempstring.indexOf(".") != -1){
					tempstring = tempstring.substring(0,tempstring.indexOf("."));
					amount = Number(tempstring);	
				}
				
				
				if (incr == 0){
					
					incr = 10;
				}
				
					if (amount != 0){
						do{
							mmax = mmax+incr;
							
							
						}while(mmax < amount);
						mmin = mmax-incr;
					}
					else {
						mmax = incr;
						mmin = 0;
					}
				var widtho:Number = this.width;
				// 0 = 100%, widtho = 0%
				var amountleft:Number = amount-mmin;
			
				var tempScaleVal:Number = (1-(amountleft/incr))*widtho;
				if (tempScaleVal > widtho-50){
					scaleval = widtho-50;
				}
				else {
					scaleval =tempScaleVal;
				}	
				
				
				superamount = tempstring;
				
				minwidthval = minwidthval-tempstring.length;
				if (minwidthval <= 0){
					minwidthval = 1;
				}
				
			}	
		]]>
	</fx:Script>
	<s:BorderContainer borderAlpha="1"  borderColor="#1a2029" 
					   backgroundAlpha="0" width="100%" height="100%" >
		<s:Group width="100%" height="100%">
			<s:VGroup  width="100%" gap="0" height="100%" >
				<s:Group width="100%" height="100%"  >
					<!--s:Image width="100%" height="100%" scaleMode="stretch" 
							 source="http://scoutcard.ca/php/storeimages/{data.imagelarge}"/-->
					<s:BitmapImage width="100%"  height="100%" contentLoader="{s_imageCache}" scaleMode="stretch" 
								   source="@Embed('assets/interfaceimages/multi/defaultlarge.png')"/>
					<s:BorderContainer backgroundAlpha="0.6" borderVisible="false" 
									   backgroundColor="#000000" bottom="0" width="100%" height="35">
						<s:Label left="10" width="100%"  color="#FFFFFF" 
								 fontWeight="bold" text="{data.name}" verticalAlign="middle"
								 verticalCenter="0"/>
					</s:BorderContainer>
				</s:Group>
				<s:Group id="scale1"  width="{this.width}" bottom="0" height="50" >
					<s:BorderContainer id="scale2" left="0" right="{scaleval}"
									   top="0" bottom="0"  minWidth="{this.width/minwidthval}"
									   borderAlpha="0">
						<s:backgroundFill>
							<s:LinearGradient rotation="90">
								<s:GradientEntry color="0xdb8425"/>
								<s:GradientEntry color="0xcb5b19"/>
							</s:LinearGradient>
						</s:backgroundFill>
						<s:Label right="4"  height="100%" color="#FFFFFF" 
								 fontWeight="normal" text="${superamount}" textAlign="right"
								 verticalAlign="middle" verticalCenter="0"/>
					</s:BorderContainer>			
					<s:Label left="2"   color="#FFFFFF" 
							 text="${mmin}" textAlign="left" verticalAlign="middle"
							 verticalCenter="0"/>
					<s:Label right="2"   color="#FFFFFF"  
							 text="${mmax}" textAlign="right" verticalAlign="middle"
							 verticalCenter="0"/>
				</s:Group>
			</s:VGroup>
		</s:Group>
	</s:BorderContainer>
</s:ItemRenderer>