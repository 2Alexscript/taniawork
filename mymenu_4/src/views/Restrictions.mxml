<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*" 
		  backgroundColor="#000000" actionBarVisible="false"
		title="My Menu"  xmlns:components="components.*" >
	
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.managers.PersistenceManager;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var togstatus:Boolean = false;
			[Bindable]
			public var catArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var busy:Boolean = true;
			[Bindable]
			public var alerArray:ArrayCollection = new ArrayCollection();
			public function onActivate(event:Event):void
			{
					try{
						var loadManager:PersistenceManager = new PersistenceManager();
						if(loadManager.load()){
							var savedData:Object = loadManager.getProperty("useremail");
							if(savedData){
								if (savedData.toString() != "ERRORBADERRORBAD"){
									emailGo = savedData.toString();
									var saveManager:PersistenceManager = new PersistenceManager();
									saveManager.setProperty("useremail",savedData.toString());
								
								}
							}
							else {
								try{
									sqlConnection = new SQLConnection();
									sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
									var stmt:SQLStatement = new SQLStatement();
									stmt.sqlConnection = sqlConnection;
									stmt.text = "SELECT email, name, country, active FROM localuser";
									stmt.execute();
									var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
									
									if (resData.length != 0){
										//good login
										var foundactive:Boolean = false;
										for (var i:uint = 0; i < resData.length; i++){
											if (resData[i].active == "yes"){
												foundactive = true;
												emailGo = resData[i].email;
												nameGo = resData[i].name;
											}
										}
									}
									else {
										//bad login or no local saved login.
									}
								}
								catch(e:Error){
									
								}
							}
						}
					}
					catch(e:Error){

					}	
					
					busy = false;
				
					headitem.imgo.addEventListener(MouseEvent.CLICK,goback);
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function usermenuclick():void {
				navigator.pushView(AccountSettings);
			}
			public function goback(ev:MouseEvent):void {
				navigator.popView();
			}
			
			
		]]>
	</fx:Script>
	<s:VGroup height="95%" horizontalCenter="0" verticalCenter="0"  width="85%"  >
		<components:headeritem id="headitem" lbl="Restrictions"/>
		
	
	</s:VGroup>
	<s:BusyIndicator visible="{busy}" symbolColor="#FFFFFF" verticalCenter="0" horizontalCenter="0"/>
</s:View>