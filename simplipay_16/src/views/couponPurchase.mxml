<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*"  xmlns:mobile="spark.skins.mobile.*"
		title="Reload" xmlns:BarCode="BarCode.*"  xmlns:components="components.*" >	
	<s:navigationContent>
		<s:Button label="Daily Deals" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>
	<s:actionContent>		
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.qrcode.QRCode;
			
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var currentBalance:String = "....";
			[Bindable]
			public var emailGo:String = "";
			public var ccname:String = "";
			public var ccnumber:String = "";
			public var cvn:String = "";
			public var ccexpdate:String = "";
			public var cctype:String = "";
			public var ccaddress:String = "";
			[Bindable]
			public var purchaseCost:String = "";
			[Bindable]
			public var couponid:String = "";
		
			public function onActivate(event:Event):void
			{
				contu.enabled = true;
				try{
				if ((data.email == null)||(data.email == "")){
					navigator.popToFirstView();

				}
				else {
					goGetBalance();
					purchaseCost = data.cost;
					couponid = data.id;
					try{
						currentBalance = data.currentBalance2;
					}
					catch(e:Error){
						
					}
					//data.email available
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("paymentmethods.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "CREATE TABLE IF NOT EXISTS creditcardinfo (" +
						"id INTEGER PRIMARY KEY AUTOINCREMENT, " +
						"email varchar(255), " +
						"name varchar(255), " +
						"cardnumber varchar(255), " +
						"cvn varchar(255), " +
						"expdate varchar(255), " +
						"cardtype varchar(255), " +
						"address varchar(255), "+
						"usealways varchar(255))";
					stmt.execute();
					
					
					
					stmt = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT * FROM creditcardinfo where email = '"+data.email+"'";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good data
						if (resData[0].usealways == "yes"){
							ccname = resData[0].name;
							ccnumber = resData[0].cardnumber;
							cvn = resData[0].cvn;
							ccexpdate = resData[0].expdate;
							cctype = resData[0].cardtype;
							ccaddress = resData[0].address;
							pt.currentState = 'creditcard';	
						}
						else {
							pt.currentState = 'paypal';
						}
						
					}
					else {
						//bad data or no local saved data.
						pt.currentState = 'paypal';
					}
				}
			}
			catch(e:Error){
				navigator.popToFirstView();
			}
			
			}		
			public function goGetBalance():void {
				if ((data.email != null)&&(data.email != "")){
					emailGo = data.email;
					getBalance.send();		
				}
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}		
			public function goPaymentType():void {
				navigator.pushView(PaymentOptions, {index:1,email:data.email});
			}
			public function startReload():void {
				
				if (pt.currentState == 'paypal'){
					navigator.pushView(Cart, {email:data.email,couponid:couponid, amount:purchaseCost, type:2});
				}
				else if (pt.currentState == 'creditcard'){
					navigator.pushView(CreditCardLoader, {email:data.email,couponid:couponid, ccname:ccname,type:2, ccnumber:ccnumber,
						cvn:cvn, ccexpdate:ccexpdate, cctype:cctype, ccaddress:ccaddress,amount:purchaseCost});
				}
				
				
				//navigator.popView();
			}
			public function afterGetBalance(ev:ResultEvent):void {
				currentBalance = "$"+ev.result[0].res.toString();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<s:HTTPService id="getBalance" method="POST" 
					   resultFormat="array" 
					   url="http://simplipay.ca/php/users/getBalance.php"
					   result="afterGetBalance(event)" >
			<s:request xmlns="">
				<emailGo>{emailGo}</emailGo>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Scroller left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" height="100%" >
			<s:BorderContainer width="100%" top="0" bottom="0" backgroundAlpha="0" borderAlpha="0">
				<s:Label id="currentBalanceLbl2" top="18" color="#02446F" fontSize="30"
						 horizontalCenter="0" text="{currentBalance}"/>
				<s:Label id="currentBalanceLbl0" top="62" color="#02446F" fontSize="20" horizontalCenter="-71"
						 text="Purchase Amount"/>
				<s:Label id="currentBalanceLbl3" top="137" color="#02446F" fontSize="20" horizontalCenter="-85"
						 text="Payment Type"/>
				<components:paymentType id="pt" top="165" currentState="none" click="goPaymentType();" horizontalCenter="0"/>
				
				<components:genericBlueButton id="contu" enabled="true" top="302" width="182" height="41" lbl="Continue" mouseDown="gDown(event)"
											  mouseOut="gOut(event)" mouseOver="gOver(event)" click="startReload();" horizontalCenter="0"  />
				
			</s:BorderContainer>
		
			</s:VGroup>
		</s:Scroller>
	<s:Label id="currentBalanceLbl5" top="98" color="#02446F" fontSize="30"
			 horizontalCenter="0" text="{purchaseCost}"/>
</s:View>
