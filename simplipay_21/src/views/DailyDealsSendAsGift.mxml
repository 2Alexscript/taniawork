<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:model="model.*"  xmlns:mobile="spark.skins.mobile.*"
		title="" xmlns:BarCode="BarCode.*" backgroundColor="#2a3038"   xmlns:components="components.*" >	
	<s:navigationContent>
		<s:Image x="0" y="-2" width="55" mouseDown="gDown(event)" mouseOut="gOut(event)"
				 mouseOver="gOver(event)" height="38" click="navigator.popView();"
				 source="assets/backbtn.png"/>	</s:navigationContent>
	<s:actionContent>	
		<s:Image x="0" y="-2" width="55" mouseDown="gDown(event)" mouseOut="gOut(event)"
				 mouseOver="gOver(event)" height="38" click="dodone();"
				 source="assets/donebtn.png"/>
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import org.qrcode.QRCode;
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
		
			public function onActivate(event:Event):void
			{
				
			}		
			
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}	
			public function dodone():void {
				
			}
		
		]]>
	</fx:Script>
	<fx:Declarations>
		
	
	</fx:Declarations>
	<s:Scroller left="0" right="0" top="0" bottom="0" verticalScrollPolicy="on" horizontalScrollPolicy="off" >
		<s:VGroup width="100%" gap="2" paddingTop="5" horizontalAlign="center" horizontalCenter="0" height="100%" >
			<s:BorderContainer width="300" backgroundColor="#363a42"  borderAlpha="1" borderColor="#1a2029">
				<s:Label left="4" width="263" height="100%" color="#FFFFFF" fontSize="15"
						 text="This Feature is Coming Soon" textAlign="center"
						 verticalAlign="middle" verticalCenter="0"/>
			</s:BorderContainer>
			<s:HGroup width="300" height="40" gap="2" horizontalAlign="center" verticalAlign="middle">
				<s:Image width="45%" height="100%" source="assets/minusbtn.png"/>
				<s:Image width="45%" height="100%" source="assets/plusbtn.png"/>

			</s:HGroup>
			<s:BorderContainer width="300" backgroundColor="#363a42"  borderAlpha="1" borderColor="#1a2029">
			</s:BorderContainer>
			<s:BorderContainer width="300" backgroundColor="#363a42"  borderAlpha="1" borderColor="#1a2029">
				
			</s:BorderContainer>
			<s:BorderContainer width="300" backgroundColor="#363a42"  borderAlpha="1" borderColor="#1a2029">
				
			</s:BorderContainer>
			<s:BorderContainer width="300" backgroundColor="#363a42"  borderAlpha="1" borderColor="#1a2029">
				
			</s:BorderContainer>
		</s:VGroup>
	</s:Scroller>
	
	
</s:View>
