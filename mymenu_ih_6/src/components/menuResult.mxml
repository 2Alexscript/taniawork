<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 	
				dataChange="dchange(event)"
				creationComplete="init(event)"
				xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.core.ContentCache;
			static public const s_imageCache:ContentCache = new ContentCache();
			protected function init(event:FlexEvent):void
			{
				var ratingstring:String = "";
				var ratingnumber:Number = 0;
				bmpImg.maxHeight = this.height-((75/(320/Capabilities.screenDPI))*data.divtype);
				if ((data.picture == "None")||(data.picture == "")||(data.picture == null)||(data.picture == "null")){
					bmpImg.source = "assets/"+getDPIHeight().toString()+"/dish_place_square.png";
				}
				else {
					bmpImg.visible = true;
				}
				ratingstring = data.rating.toString();
				ratingnumber = Number(data.rating);
				
				if (ratingnumber == 0){
					ratinglabel.text = "-";
				}
				
				if (ratingnumber >= 10){
					ratingnumber = 10;
					ratinglabel.text = "10";
				}
				
				
				
				if (data.hideall == true){
					megacont.height = 0;
				}
				else {
					megacont.height = 200/(320/Capabilities.screenDPI);
				}
				
				
			}
			
			public function dchange(event:FlexEvent):void
			{
				try{
					
				//	bmpImg.maxHeight = this.height-((75/(320/Capabilities.screenDPI))*data.divtype);
					if ((data.picture == "None")||(data.picture == "")||(data.picture == null)||(data.picture == "null")){
						bmpImg.source = "assets/"+getDPIHeight().toString()+"/dish_place_square.png";
					}
					else {
						bmpImg.visible = true;
					}
				}
					catch(e:Error){	}
					var ratingstring:String = "";
					var ratingnumber:Number = 0;
					
					ratingstring = data.rating.toString();
					ratingnumber = Number(data.rating);
					
					if (ratingnumber == 0){
						ratinglabel.text = "-";
					}
					
					if (ratingnumber >= 10){
						ratingnumber = 10;
						ratinglabel.text = "10";
					}
				
				
				
				if (data.hideall == true){
					megacont.height = 0;
				}
				else {
					megacont.height = 200/(320/Capabilities.screenDPI);
				}
			}
			
			public function getDPIHeight():Number {
				var _runtimeDPI:int;
				if(Capabilities.screenDPI < 200){
					_runtimeDPI = 160;
				}
				else if(Capabilities.screenDPI >=200 && Capabilities.screenDPI < 280){
					_runtimeDPI = 240
				}
				else if (Capabilities.screenDPI < 480){
					_runtimeDPI = 320;
				}
				else if (Capabilities.screenDPI < 640){
					_runtimeDPI = 480;
				}
				else if (Capabilities.screenDPI >=640){
					_runtimeDPI = 640;
				}
				return(_runtimeDPI)
			}
		]]>
	</fx:Script>
<s:VGroup width="100%" height="100%" gap="0">
	<s:BorderContainer width="100%" visible="{data.divtype == 1}" 
					   height="{(75/(320/Capabilities.screenDPI))*data.divtype}"
					   backgroundAlpha="1" 
					   borderVisible="false" backgroundColor="#8eddce">
		<s:Label width="100%" verticalCenter="2" 
				 left="{20/(320/Capabilities.screenDPI)}" color="#FFFFFF" 
				 fontWeight="bold" styleName="textsize1" text="{data.categoryname}"
				 verticalAlign="middle"></s:Label>

	</s:BorderContainer>
	<s:Group id="megacont" 
			 width="{this.width}" 
			 height="{200/(320/Capabilities.screenDPI)}"  
			 mouseEnabled="false"   
			 visible="{data.hideall == false}" >
		<s:HGroup width="{this.width-(this.height*1.3)-5}"
				  gap="0" paddingTop="{20/(320/Capabilities.screenDPI)}"
				  paddingBottom="{20/(320/Capabilities.screenDPI)}" 
				  paddingLeft="{10/(320/Capabilities.screenDPI)}" 
				  verticalAlign="middle" height="90%" verticalCenter="0">
			<s:VGroup paddingRight="{20/(320/Capabilities.screenDPI)}" 
					  paddingLeft="{20/(320/Capabilities.screenDPI)}" horizontalAlign="center">
				<s:BorderContainer cornerRadius="{15/(320/Capabilities.screenDPI)}"
								   height="{110/(320/Capabilities.screenDPI)}" 
								   width="{110/(320/Capabilities.screenDPI)}" 
								   horizontalCenter="0" verticalCenter="0"
								   borderVisible="false" backgroundColor="#b3b3b3" backgroundAlpha="1">
					<s:Label id="ratinglabel" color="#FFFFFF" horizontalCenter="0" styleName="textsize9"
							 text="{data.rating.toPrecision(2).toString()}" fontWeight="bold" verticalCenter="0"/>
				</s:BorderContainer>	
			</s:VGroup>
			<s:VGroup width="100%" 
					paddingLeft="{10/(320/Capabilities.screenDPI)}"
					paddingTop="{10/(320/Capabilities.screenDPI)}"
					paddingBottom="{10/(320/Capabilities.screenDPI)}" 
					paddingRight="{10/(320/Capabilities.screenDPI)}">
				<s:Label width="100%" color="#4d4d4d" maxDisplayedLines="1" 
						 fontWeight="bold" styleName="textsize4" text="{data.name}"
						 verticalAlign="middle"></s:Label>
				<s:HGroup width="100%" gap="0">
					<s:Label  color="#4d4d4d" fontWeight="bold"
							  styleName="textsize3" text="{data.categoryname}"
							  verticalAlign="middle"></s:Label>
					<s:Label color="#43c7ae"  fontWeight="bold"
							 styleName="textsize3" text=" ${data.cost}"
							 verticalAlign="middle"></s:Label>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
		<s:Image right="{(this.height-(((75/(320/Capabilities.screenDPI))*data.divtype)))*1.2}"  
				 verticalCenter="0"
				 visible="{data.goodforme == false}">
			<s:source>
				<s:MultiDPIBitmapSource source160dpi="@Embed('assets/160/alert.png')"
										source240dpi="@Embed('assets/160/alert.png')"
										source320dpi="@Embed('assets/320/alert.png')"
										source480dpi="@Embed('assets/320/alert.png')"
										source640dpi="@Embed('assets/320/alert.png')"/>
			</s:source>
		</s:Image>
		<s:Image id="bmpImg" right="0"  width="{(this.height-((75/(320/Capabilities.screenDPI))*data.divtype))}" 	
				 height="100%" source="{data.picture}"   maxHeight="{160/(320/Capabilities.screenDPI)}"
				 contentLoader="{s_imageCache}"  scaleMode="zoom" />
	</s:Group>
</s:VGroup>
	<s:BorderContainer bottom="0" left="{20/(320/Capabilities.screenDPI)}" backgroundAlpha="0" right="0" borderAlpha="0.5" 
					   borderColor="#b2b2b2" height="1.5" />
</s:ItemRenderer>