<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="components.*"
		backgroundColor="#FFFFFF"   destructionPolicy="auto"
		mouseDown="listFingerDown();" 
		mouseUp="listFingerUp();"
		mouseOut="listFingerUp();"
		menuKeyPressed="gobacktohome();"
		backKeyPressed="gobacktohome();"
		backgroundAlpha="1"  title="Locations"
		  viewActivate="init()">
	<s:navigationContent >
		<components:backbutton width="{this.width*0.1}" mouseEnabledWhereTransparent="true"
							   height="100%"   mouseDown="gobacktohome();"/>
	</s:navigationContent>
	<s:titleContent>
		<s:Group  width="100%" height="65%">
			<s:Rect width="100%"  height="100%" radiusX="30" radiusY="30">
				<s:fill>
					<s:SolidColor alpha="1" color="#f6f5f5"/>
				</s:fill>
				<s:stroke>
					<s:SolidColorStroke color="#abaaaa" weight="1.5"/>
				</s:stroke>
			</s:Rect>
			<s:TextInput id="key" width="95%" height="90%" paddingLeft="45"
						 horizontalCenter="0" verticalCenter="0"  focusAlpha="0" styleName="textsize1"
						 borderVisible="false" contentBackgroundAlpha="0" color="#949393" 
						 prompt="Search for businesses..."  maxChars="20"  fontFamily="Arial" fontWeight="normal"
						 keyUp="press(event);" returnKeyLabel="search"/>
			<s:BitmapImage contentLoader="{s_imageCache}"  verticalCenter="0" left="20">
				<s:source>
					<s:MultiDPIBitmapSource source160dpi="@Embed('assets/160/glass.png')"
											source240dpi="@Embed('assets/240/glass.png')"
											source320dpi="@Embed('assets/320/glass.png')"
											source480dpi="@Embed('assets/480/glass.png')"
											source640dpi="@Embed('assets/640/glass.png')"/>
				</s:source>
			</s:BitmapImage>
		</s:Group>
	</s:titleContent>
	<s:actionContent>
		<components:mapbutton width="{this.width*0.1}" mouseEnabledWhereTransparent="true"
							   height="100%"  mouseDown="goToMap()"  />
	</s:actionContent>
	<fx:Script source="../func/global.as"/>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.GeolocationEvent;
			import flash.sensors.Geolocation;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.PropertyChangeEvent;
			import mx.rpc.events.ResultEvent;
			import spark.events.ViewNavigatorEvent;
			protected var g:Geolocation = new Geolocation();    
			[Bindable]
			public var listData:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var mylat:Number = 53.493252;
			[Bindable]
			public var mylong:Number = -113.502231;
			[Bindable]
			public var busy:Boolean = true;
			public var maintimer:Timer = new Timer(5000,0);
			[Bindable]
			public var prefound:Boolean = false;
			public var timerval:Number = 5000;
			[Bindable]
			public var updatedone:Boolean = false;
			[Bindable]
			public var isFingerDown:Boolean = false;
			protected function init():void
			{
				navigator.activeView.mouseChildren = true;
				busy = true;
				prefound = false;
				var stmt:SQLStatement = new SQLStatement();
				sqlConnection = new SQLConnection();
				sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
				stmt = new SQLStatement();
				stmt.sqlConnection = sqlConnection;
				stmt.text = "CREATE TABLE IF NOT EXISTS merchusers (" +
					"id int(255)," +
					"merchid int(255)," +
					"business_name varchar(255)," +
					"business_number varchar(255)," +
					"business_description longtext," +
					"business_picture varchar(255)," +
					"business_address1 varchar(255)," +
					"business_city varchar(255)," +
					"business_locality varchar(255)," +
					"business_postalcode varchar(255)," +
					"business_country varchar(255)," +
					"lat varchar(255)," +
					"longa varchar(255)," +
					"facebook varchar(255)," +
					"twitter varchar(255)," +
					"website varchar(255)," +
					"categoryname varchar(255)," +
					"email varchar(255)," +
					"distance varchar(255))";	
				stmt.execute();
				
				try{
					stmt = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT * FROM merchusers";
					stmt.execute();
					var merchData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					if (merchData.length != 0){
						listData = merchData;
						busy = false;
						prefound = true;
						sortListByDistance();
						refreshList();
					}
					else {
						listData = new ArrayCollection();	
					}	
				}
				catch(e:Error) {
					listData = new ArrayCollection();
				}	
				
				try{
					if (Geolocation.isSupported)
					{
						g.addEventListener(GeolocationEvent.UPDATE, onUpdate);
						addEventListener(ViewNavigatorEvent.REMOVING,onRemove);
					}
					else {
						calllocationupdate();
					}
				}
				catch(e:Error){
					calllocationupdate();
				}
				setLoginVars();
				maintimer = new Timer(timerval,0);
				maintimer.addEventListener(TimerEvent.TIMER,aftertimer);
				maintimer.start();
				
				
			}	
			public function aftertimer(ev:TimerEvent):void {
				if (listData.length <= 0){
					busy = true;
					getLocations.cancel();
					listData = new ArrayCollection();
					maintimer.removeEventListener(TimerEvent.TIMER,aftertimer);
					maintimer.stop();
					timerval = timerval + 1000;
					maintimer = new Timer(timerval,0);
					maintimer.addEventListener(TimerEvent.TIMER,aftertimer);
					maintimer.start();
					calllocationupdate();
				}
				else {
					maintimer.removeEventListener(TimerEvent.TIMER,aftertimer);
					maintimer.stop();
				}
			}
			public function afterGetLocations(event:ResultEvent):void
			{
				busy = false;
				var i:uint = 0;
				var old:Boolean = false;
				var stmt:SQLStatement = new SQLStatement();
				try{
					if (event.result[0].response == "old"){
						old = true;
					}
				}
				catch(e:Error){}
				
				if (old){
					updatecont.visible = true;
				}
				else if (isFingerDown == false){
					
					
					if (prefound == false){
						listData = new ArrayCollection();
						try{			
							listData = event.result[0].ress.res;
							for (i=  0; i < listData.length; i++){
								listData[i].distance = getDistance(mylat,mylong,listData[i].lat,listData[i].longa);
							}
						}
						catch(e:Error){
							try{
								listData.addItem(event.result[0].ress.res);
								listData[0].distance = getDistance(mylat,mylong,listData[0].lat,listData[0].longa);
							}
							catch(e:Error){}
						}
						
						if (listData.length > 0){
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
							var stmt2:SQLStatement = new SQLStatement();
							stmt2.sqlConnection = sqlConnection;
							stmt2.text = "delete from merchusers";
							stmt2.execute();
							for (i = 0; i < listData.length; i++){
								prefound = false;
								
								stmt = new SQLStatement();
								stmt.sqlConnection = sqlConnection;
								stmt.text = "insert into merchusers values(" +
									""+listData[i].id+""+","+
									""+listData[i].merchid+""+","+
									"'"+listData[i].business_name+"'"+","+
									"'"+listData[i].business_number+"'"+","+
									"'"+listData[i].business_description+"'"+","+
									"'"+listData[i].business_picture+"'"+","+
									"'"+listData[i].business_address1+"'"+","+
									"'"+listData[i].business_city+"'"+","+
									"'"+listData[i].business_locality+"'"+","+
									"'"+listData[i].business_postalcode+"'"+","+
									"'"+listData[i].business_country+"'"+","+
									"'"+listData[i].lat+"'"+","+
									"'"+listData[i].longa+"'"+","+
									"'"+listData[i].facebook+"'"+","+
									"'"+listData[i].twitter+"'"+","+
									"'"+listData[i].website+"'"+","+
									"'"+listData[i].categoryname+"'"+","+
									"'"+listData[i].email+"'"+","+
									"'"+listData[i].distance+"')";			
								stmt.execute();
							}
							
						}	
					}
					else {
						var templistData:ArrayCollection = new ArrayCollection();
						try{			
							templistData = event.result[0].ress.res;
							for (i=  0; i < templistData.length; i++){
								templistData[i].distance = getDistance(mylat,mylong,templistData[i].lat,templistData[i].longa);
							}
						}
						catch(e:Error){
							try{
								templistData.addItem(event.result[0].ress.res);
								templistData[0].distance = getDistance(mylat,mylong,templistData[0].lat,templistData[0].longa);
							}
							catch(e:Error){
							}
						}
						
						if (templistData.length > 0){
							stmt = new SQLStatement();
							sqlConnection = new SQLConnection();
							sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
							var stmt3:SQLStatement = new SQLStatement();
							stmt3.sqlConnection = sqlConnection;
							stmt3.text = "delete from merchusers";
							stmt3.execute();
							for (var j:uint = 0; j < templistData.length; j++){
								
								stmt = new SQLStatement();
								stmt.sqlConnection = sqlConnection;
								stmt.text = "insert into merchusers values(" +
									""+templistData[j].id+""+","+
									""+templistData[j].merchid+""+","+
									"'"+templistData[j].business_name+"'"+","+
									"'"+templistData[j].business_number+"'"+","+
									"'"+templistData[j].business_description+"'"+","+
									"'"+templistData[j].business_picture+"'"+","+
									"'"+templistData[j].business_address1+"'"+","+
									"'"+templistData[j].business_city+"'"+","+
									"'"+templistData[j].business_locality+"'"+","+
									"'"+templistData[j].business_postalcode+"'"+","+
									"'"+templistData[j].business_country+"'"+","+
									"'"+templistData[j].lat+"'"+","+
									"'"+templistData[j].longa+"'"+","+
									"'"+templistData[j].facebook+"'"+","+
									"'"+templistData[j].twitter+"'"+","+
									"'"+templistData[j].website+"'"+","+
									"'"+templistData[j].categoryname+"'"+","+
									"'"+templistData[j].email+"'"+","+
									"'"+templistData[j].distance+"')";			
								stmt.execute();
							
							}
							listData = new ArrayCollection();
							listData = templistData;
						}	
					}
					for (i=  0; i < listData.length; i++){
						listData[i].distance = Number(getDistance(mylat,mylong,listData[i].lat,listData[i].longa));
					}
					
					var dataSortField:SortField = new SortField();
					dataSortField.name = "distance";
					dataSortField.numeric = true;
					var numericDataSort:Sort = new Sort();
					numericDataSort.fields = [dataSortField];
					listData.sort = numericDataSort;
					listData.refresh();
					searchClick();	
				}
			} 
			public function degreesToRadians(degrees:Number):Number {	
				return degrees * Math.PI / 180;
			}
			
			public function radiansToDegrees(radians:Number):Number{
				return radians * 180 / Math.PI;
			}
			public function getDistance(lat1:Number, lon1:Number, lat2:Number, lon2:Number):String {
				var R1:Number = 6371;
				var dLat:Number = degreesToRadians(lat2-lat1);
				var dLon:Number = degreesToRadians(lon2-lon1);
				var lat1:Number = degreesToRadians(lat1);
				var lat2:Number = degreesToRadians(lat2);
				var a:Number = Math.sin(dLat/2) * Math.sin(dLat/2) +
					Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); 
				var c:Number = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
				var d:Number = R1 * c;
				return d.toString();	
			}
			public function storeListClick():void {	
				if (storeList.selectedIndex != -1){
					navigator.pushView(StoresDescription, listData[storeList.selectedIndex]);	
				}
			}
			public function searchClick():void
			{	
				if (key.text.length > 0){
					listData.filterFunction = filterCompleted;
				//	sortListByDistance();
					refreshList();
				}
				else {
					listData.filterFunction = returnall;
					//sortListByDistance();
					refreshList();
				}			
			}
			public function sortListByDistance():void {
				var dataSortField:SortField = new SortField();
				dataSortField.name = "distance";
				dataSortField.numeric = true;
				var numericDataSort:Sort = new Sort();
				numericDataSort.fields = [dataSortField];
				listData.sort = numericDataSort;
			}
			public function refreshList():void {
				listData.refresh();
				storeList.dataProvider = listData;
			}
			private function filterCompleted(item:Object):Boolean{
				if((item.business_name.toString().toLowerCase().indexOf(key.text.toLowerCase()) != -1)||
					(item.categoryname.toString().toLowerCase().indexOf(key.text.toLowerCase()) != -1))
					return true;
				return false;
			}
			private function returnall(item:Object):Boolean{
				return true;
			}
			protected function onUpdate(event:GeolocationEvent):void
			{
				if (updatedone == false){
					if (isFingerDown == false){
						updatedone  = true;
						mylat = event.latitude;
						mylong = event.longitude;	
						for (var i:uint=  0; i < listData.length; i++){
							listData[i].distance = Number(getDistance(mylat,mylong,listData[i].lat,listData[i].longa));
						}
						
						var dataSortField:SortField = new SortField();
						dataSortField.name = "distance";
						dataSortField.numeric = true;
						var numericDataSort:Sort = new Sort();
						numericDataSort.fields = [dataSortField];
						listData.sort = numericDataSort;
						listData.refresh();	
					}	
				}
			}	
			protected function onRemove(event:ViewNavigatorEvent):void
			{
				g.removeEventListener(GeolocationEvent.UPDATE, onUpdate);                
			}
			public function press(event:KeyboardEvent):void {
				searchClick();
			}
			public function goToMap():void {
				navigator.pushView(MapView,
					{mylat:this.mylat,mylong:this.mylong});
			}
			public function calllocationupdate():void {
				try{
					getLocations.cancel();
				}
				catch(e:Error){}
				
				try{
					getLocations.send();
				}
				catch(e:Error){}
			}
			public function listFingerDown():void {
				isFingerDown = true;
			}
			public function listFingerUp():void {
				isFingerDown = false;
			}
			public function gobacktohome():void {
				var slideTrans:SlideViewTransition = new SlideViewTransition();
				slideTrans.direction = ViewTransitionDirection.RIGHT;
				slideTrans.mode = SlideViewTransitionMode.UNCOVER;  //or COVER and PUSH modes
				navigator.pushView(Home, null,null,slideTrans);
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getLocations" method="GET" resultFormat="array"
					   url="http://www.scoutcard.ca/php/mobile_v2/getLocations.php"
					   result="afterGetLocations(event)" >	
			<s:request xmlns="">
				<versionnumber>2</versionnumber>		
			</s:request>
		</s:HTTPService>	
	</fx:Declarations>
	<s:Group width="100%" height="100%" visible="true" id="listCont" >
		<s:Rect width="100%"  height="100%">
			<s:fill>
				<s:SolidColor alpha="1" color="#737171"/>
			</s:fill>
		</s:Rect>
			<s:List width="100%"
				 	bottom="0" top="2"
				    useVirtualLayout="false" 
					skinClass="skins.TileListSkin"
					id="storeList" 
					horizontalScrollPolicy="off" 
					click="storeListClick();" >
			</s:List>
	</s:Group>
	<s:BusyIndicator visible="{busy}" verticalCenter="0" horizontalCenter="0"/>
	<components:updateContainer id="updatecont" visible="false"/>
	<s:Line left="0" right="0"  top="0" > 
		<s:stroke><s:SolidColorStroke color="0xbababa" weight="1"/></s:stroke>
	</s:Line>
</s:View>