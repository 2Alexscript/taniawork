<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:maps="com.google.maps.*" 	
		xmlns:mx="library://ns.adobe.com/flex/mx" viewActivate="onActivate(event)"
		xmlns:s="library://ns.adobe.com/flex/spark"
		backgroundColor="#FFFFFF"
		menuKeyPressed="navigator.pushView(Home)"
		backKeyPressed="navigator.popView()"
		title="Specials" xmlns:components="components.*"   >

	<s:actionContent>
		
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import flash.display.Bitmap;
			import flash.display.Sprite;
			import flash.events.MouseEvent;
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.core.ContentCache;
			import spark.effects.Fade;
			import spark.events.ViewNavigatorEvent;
			import spark.filters.GlowFilter;
			import spark.managers.PersistenceManager;
			import spark.transitions.FlipViewTransition;
			import spark.transitions.FlipViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			static public const s_imageCache:ContentCache = new ContentCache();
			[Bindable]
			public var emailGo:String = "";
			[Bindable]
			public var nameGo:String = "";
			protected var sqlConnection:SQLConnection;
			[Bindable]
			public var togstatus:Boolean = false;
			[Bindable]
			public var listData:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var backuplistdata:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var busy:Boolean = false;
			[Bindable]
			public var currentfilterweekday:String = "monday";
			[Bindable]
			public var merchid:String = "";
			[Bindable]
			public var currentselectmode:Number = 1;
			[Bindable]
			public var filterData1:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData2:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData3:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var filterData4:ArrayCollection = new ArrayCollection();
			public function onActivate(event:Event):void
			{
				
				
				filterData1 = new ArrayCollection();
				filterData2 = new ArrayCollection();
				filterData3 = new ArrayCollection();
				filterData4 = new ArrayCollection();
				
				
				filterData1.addItem({name:"Nearby"});
				filterData1.addItem({name:"Postal Code"});
				filterData1.addItem({name:"Address"});
				
				filterData2.addItem({name:"All"});
				
				filterData3.addItem({name:"Highest"});
				filterData3.addItem({name:"Lowest"});
				
				filterData4.addItem({name:"Highest"});
				filterData4.addItem({name:"Lowest"});
				
				
				
				warn.visible = false;
				busy = true;
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country, active FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good login
						var foundactive:Boolean = false;
						for (var i:uint = 0; i < resData.length; i++){
							if (resData[i].active == "yes"){
								foundactive = true;
								emailGo = resData[i].email;
								nameGo = resData[i].name;
							}
						}
					}
					else {
					}
				}
				catch(e:Error){
					
				}		
				scroller.visible = true;

				
				try{
					if (data.merchid != ""){
						merchid = data.merchid;
						getSpecials2.send();
					}
					else {
						getSpecials.send();
					}
				}
				catch(e:Error){
					getSpecials.send();
				}
				
				
			
			}
			
			public function afterGetSpecials(ev:ResultEvent):void {
				busy = false;
				backuplistdata = new ArrayCollection();
				try{			
					backuplistdata = ev.result[0].ress.res;		
				}
				catch(e:Error){
					try{
						
						backuplistdata.addItem(ev.result[0].ress.res);
					}
					catch(e:Error){
					}
				}
				
				populatelist();
				
				
				
			
				
				
				
				
			} 
			public function populatelist():void {
				listData = new ArrayCollection();
				var datevar:Date = new Date();
				for (var j:uint = 0; j < 7; j++){
					if (j != 0){
						datevar.setDate(datevar.getDate() + 1);
					}
					var weekdaynum:Number = datevar.day;
					var monthstring:String = datevar.toDateString().split(' ')[1];
					var daystring:String = datevar.toDateString().split(' ')[2];	
					var currentfilterweekday:String = gettextweekday(weekdaynum);
					var tempweekstring:String = currentfilterweekday.charAt(0).toUpperCase()+currentfilterweekday.substring(1,currentfilterweekday.length);
					if (j == 0){
						listData.addItem({name:"Today",description:"",
							categoryname:"",type:0,weekday:"",business_picture:""});
					}
					else {
						listData.addItem({name:tempweekstring+", "+monthstring+" "+daystring,description:"",
							categoryname:"",type:0,weekday:"",business_picture:""});
					}
					
					for (var i:uint = 0; i < backuplistdata.length; i++){
						if (currentselectmode == 1){
							if (backuplistdata[i].weekday == currentfilterweekday){
								backuplistdata[i].type = 1;
								listData.addItem(backuplistdata[i]);
							}	
						}
						else if (currentselectmode == 2){
							if ((backuplistdata[i].weekday == currentfilterweekday)&&(backuplistdata[i].categoryname.toLowerCase() == "food")){
								backuplistdata[i].type = 1;
								listData.addItem(backuplistdata[i]);
							}
						}
						else if (currentselectmode == 3){
							if ((backuplistdata[i].weekday == currentfilterweekday)&&(backuplistdata[i].categoryname.toLowerCase() == "drinks")){
								backuplistdata[i].type = 1;
								listData.addItem(backuplistdata[i]);
							}
						}
						else if (currentselectmode == 4){
							if ((backuplistdata[i].weekday == currentfilterweekday)&&(backuplistdata[i].categoryname.toLowerCase() == "desserts")){
								backuplistdata[i].type = 1;
								listData.addItem(backuplistdata[i]);
							}
						}
						
						
						
					}
				}
			}
			
			public function gettextweekday(u:uint):String{
				var temps:String = "";
				if (u == 0){
					temps = "sunday";
				}
				else if (u == 1){
					temps = "monday";
				}
				else if (u == 2){
					temps = "tuesday";
				}
				else if (u == 3){
					temps = "wednesday";
				}
				else if (u == 4){
					temps = "thursday";
				}
				else if (u == 5){
					temps = "friday";
				}
				else if (u == 6){
					temps = "saturday";
				}	
				return temps;
			}
			public function filterNow():void
			{
				/*listData.filterFunction = filterCompleted;
				listData.refresh();
				loyaltyList.dataProvider = listData;
				
				if (listData.length == 0){
					warn.visible = true;
				}
				else {
					warn.visible  = false;
				}*/
			}
			private function filterCompleted(item:Object):Boolean{
				if((item.weekday.toString().toLowerCase().indexOf(currentfilterweekday) != -1))
					return true;
				return false;
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function gOver(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gDown(ev:MouseEvent):void {
				var gl:GlowFilter = new GlowFilter(000000,0.4,20,20,5,1,true);
				ev.currentTarget.filters = [gl];
			}
			public function gOut(ev:MouseEvent):void {
				ev.currentTarget.filters = [];
			}
			public function usermenuclick():void {
				navigator.pushView(AccountSettings);
			}
			public function filterClick(u:uint):void {
				var fadein:Fade = new Fade();
				fadein.alphaFrom = 0;
				fadein.alphaTo = 1;
				fadein.duration = 500;
				
				var fadeout:Fade = new Fade();
				fadeout.alphaFrom = 1;
				fadeout.alphaTo = 0;
				fadeout.duration = 500;
				
				
				
				if ((currentselectmode == 1)&&(currentselectmode != u)){
					fadeout.targets = [filterimage1];
				}
				else if ((currentselectmode == 2)&&(currentselectmode != u)){
					fadeout.targets = [filterimage2];
				}
				else if ((currentselectmode == 3)&&(currentselectmode != u)){
					fadeout.targets = [filterimage3];
				}
				else if ((currentselectmode == 4)&&(currentselectmode != u)){
					fadeout.targets = [filterimage4];
				}
				
				
				
				if ((u == 1)&&(currentselectmode != u)){
					filterList1.visible = true;
					filterList2.visible = false;
					filterList3.visible = false;
					filterList4.visible = false;
					
					selectview1.alpha = 1;
					selectview2.alpha = 0;
					selectview3.alpha = 0;
					selectview4.alpha = 0;
					
					fadein.targets = [filterimage1];
					
					
					selectview1.mouseEnabled = true;
					selectview1.mouseEnabledWhereTransparent = true;
					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
					
					selectview4.mouseEnabled = false;
					selectview4.mouseEnabledWhereTransparent = false;
					
				}
				else if ((u == 2)&&(currentselectmode != u)){
					filterList1.visible = false;
					filterList2.visible = true;
					filterList3.visible = false;
					filterList4.visible = false;
					
					selectview1.alpha = 0;
					selectview2.alpha = 1;
					selectview3.alpha = 0;
					selectview4.alpha = 0;
					
					fadein.targets = [filterimage2];
					
					selectview1.mouseEnabled = false;
					selectview1.mouseEnabledWhereTransparent = false;
					
					selectview2.mouseEnabled = true;
					selectview2.mouseEnabledWhereTransparent = true;
					
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
					
					selectview4.mouseEnabled = false;
					selectview4.mouseEnabledWhereTransparent = false;
				}
				else if ((u == 3)&&(currentselectmode != u)){
					filterList1.visible = false;
					filterList2.visible = false;
					filterList3.visible = true;
					filterList4.visible = false;
					
					selectview1.alpha = 0;
					selectview2.alpha = 0;
					selectview3.alpha = 1;
					selectview4.alpha = 0;
					
					fadein.targets = [filterimage3];
					
					selectview1.mouseEnabled = false;
					selectview1.mouseEnabledWhereTransparent = false;
					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					
					selectview3.mouseEnabled = true;
					selectview3.mouseEnabledWhereTransparent = true;
					
					selectview4.mouseEnabled = false;
					selectview4.mouseEnabledWhereTransparent = false;
				}
				else if ((u == 4)&&(currentselectmode != u)){
					filterList1.visible = false;
					filterList2.visible = false;
					filterList3.visible = false;
					filterList4.visible = true;
					
					selectview1.alpha = 0;
					selectview2.alpha = 0;
					selectview3.alpha = 0;
					selectview4.alpha = 1;
					
					fadein.targets = [filterimage4];
					
					selectview1.mouseEnabled = false;
					selectview1.mouseEnabledWhereTransparent = false;
					
					selectview2.mouseEnabled = false;
					selectview2.mouseEnabledWhereTransparent = false;
					
					selectview3.mouseEnabled = false;
					selectview3.mouseEnabledWhereTransparent = false;
					
					selectview4.mouseEnabled = true;
					selectview4.mouseEnabledWhereTransparent = true;
				}
				
				
				
				
				
				if (currentselectmode != u){
					fadeout.play();
					fadein.play();
					currentselectmode = u;
					populatelist();
					
				}
				
				
			}
			
			
			public function goFilterScreen(u:uint):void {
				if (clickingsvi == false){
					if (dropDownContainer.visible){
						//close dropdown menu
						var fadeout:Fade = new Fade();
						fadeout.alphaFrom = 1;
						fadeout.alphaTo = 0;
						fadeout.duration = 500;
						fadeout.target = dropDownContainer;
						fadeout.play();
						fadeout.addEventListener(EffectEvent.EFFECT_END, afterdrophide);
					}
					else{
						//show dropdown menu
						var fadein:Fade = new Fade();
						fadein.alphaFrom = 0;
						fadein.alphaTo = 1;
						fadein.duration = 500;
						dropDownContainer.visible = true;
						fadein.target = dropDownContainer;
						fadein.play();
					}	
				}
				else {
					clickingsvi = false;
				}
				
			}
			public function afterdrophide(ev:EffectEvent):void {
				dropDownContainer.visible = false;
			}
			
			public function filter1Click():void {
				if (filterList1.selectedItem.name == "Nearby"){
					svi1.visible = true;
					svi2.visible = false;
					svi3.visible = false;
				}
				else if (filterList1.selectedItem.name == "Postal Code"){
					svi1.visible = false;
					svi2.visible = true;
					svi3.visible = false;
				}
				else if (filterList1.selectedItem.name == "Address"){
					svi1.visible = false;
					svi2.visible = false;
					svi3.visible = true;
				}
				goFilterScreen(0);
				
			}
			public function filter2Click():void {
				sv2label.text = filterList2.selectedItem.name;
				goFilterScreen(1);
				//add filter here
			}
			public function filter3Click():void {
				if (filterList3.selectedItem.name == "Highest"){
					trace("1");
				}
				else if (filterList3.selectedItem.name == "Lowest"){
					trace("2");
				}
				sv3label.text = filterList3.selectedItem.name;
				goFilterScreen(2);
				
			}
			public function filter4Click():void {
				if (filterList4.selectedItem.name == "Highest"){
					trace("1");
				}
				else if (filterList4.selectedItem.name == "Lowest"){
					trace("2");
				}
				sv4label.text = filterList3.selectedItem.name;
				goFilterScreen(3);
				
			}
			public var clickingsvi:Boolean = false;
			public function svilabelclick():void {
				clickingsvi = true;
				if (dropDownContainer.visible){
					//close dropdown menu
					var fadeout:Fade = new Fade();
					fadeout.alphaFrom = 1;
					fadeout.alphaTo = 0;
					fadeout.duration = 500;
					fadeout.target = dropDownContainer;
					fadeout.play();
					fadeout.addEventListener(EffectEvent.EFFECT_END, afterdrophide);
				}
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getSpecials" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/specials/getSpecials.php"
					   result="afterGetSpecials(event)" >
		</s:HTTPService>
		<s:HTTPService id="getSpecials2" method="GET" resultFormat="array"
					   url="http://www.mymenuapp.ca/php/specials/getSpecialsForMerch.php"
					   result="afterGetSpecials(event)" >
			<s:request xmlns="">
				<merchid>{merchid}</merchid>		
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Scroller id="scroller" visible="true" height="100%" width="100%" horizontalCenter="0"
				horizontalScrollPolicy="off" verticalScrollPolicy="on">
		<s:VGroup   height="100%" gap="0" width="100%" horizontalAlign="center" verticalAlign="bottom">	 
			<s:BorderContainer borderAlpha="0" id="filterarea"     visible="true" 
							   backgroundColor="#8eddce" backgroundAlpha="1" width="100%" height="75">
				<s:Image id="filterimage1" horizontalCenter="0"  
						 mouseEnabled="false" alpha="1"
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/specialsTabs1.png')"
												source240dpi="@Embed('assets/specialsTabs1.png')"
												source320dpi="@Embed('assets/specialsTabs1.png')"
												source480dpi="@Embed('assets/specialsTabs1.png')"
												source640dpi="@Embed('assets/specialsTabs1.png')"
												/>
					</s:source>
				</s:Image>
				<s:Image id="filterimage2" horizontalCenter="0" 
						 mouseEnabled="false" alpha="0"  
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/specialsTabs2.png')"
												source240dpi="@Embed('assets/specialsTabs2.png')"
												source320dpi="@Embed('assets/specialsTabs2.png')"
												source480dpi="@Embed('assets/specialsTabs2.png')"
												source640dpi="@Embed('assets/specialsTabs2.png')"
												/>
					</s:source>
					
				</s:Image>
				<s:Image id="filterimage3" horizontalCenter="0"  
						 mouseEnabled="false" alpha="0"  
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/specialsTabs3.png')"
												source240dpi="@Embed('assets/specialsTabs3.png')"
												source320dpi="@Embed('assets/specialsTabs3.png')"
												source480dpi="@Embed('assets/specialsTabs3.png')"
												source640dpi="@Embed('assets/specialsTabs3.png')"
												/>
					</s:source>
					
				</s:Image>
				<s:Image id="filterimage4" horizontalCenter="0"  
						 mouseEnabled="false" alpha="0" 
						 verticalCenter="0">
					<s:source>
						<s:MultiDPIBitmapSource source160dpi="@Embed('assets/specialsTabs4.png')"
												source240dpi="@Embed('assets/specialsTabs4.png')"
												source320dpi="@Embed('assets/specialsTabs4.png')"
												source480dpi="@Embed('assets/specialsTabs4.png')"
												source640dpi="@Embed('assets/specialsTabs4.png')"
												/>
					</s:source>
					
				</s:Image>
				
				<s:HGroup width="100%" height="100%" >
					<s:Group width="25%"  height="100%" id="toggleclick1" click="filterClick(1);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
					<s:Group width="25%"  height="100%" id="toggleclick2" click="filterClick(2);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
					<s:Group width="25%"  height="100%" id="toggleclick3" click="filterClick(3);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
					<s:Group width="25%"  height="100%" id="toggleclick4" click="filterClick(4);" 
							 mouseEnabledWhereTransparent="true" mouseEnabled="true"/>
				</s:HGroup>
				
			</s:BorderContainer>
			<s:BorderContainer borderAlpha="0"  backgroundColor="#f2f2f2" backgroundAlpha="1" width="100%" height="75">
				<s:HGroup id="selectview1" width="100%" height="100%" alpha="1"
						  click="goFilterScreen(0);"  mouseDown="gDown(event)"
						  mouseEnabled="true" mouseEnabledWhereTransparent="true" mouseOut="gOut(event)"
						  mouseOver="gOver(event)" mouseUp="gOut(event)" 
						  paddingLeft="30" gap="15" verticalAlign="middle" >
					<s:Label left="29" mouseEnabled="false" color="#4d4d4d" styleName="textsize1" text="Near" 
							 verticalAlign="middle" verticalCenter="0"/>
					<s:Group left="90" right="20"  verticalCenter="0">
						<s:Label id="svi1" visible="true" left="0"  mouseEnabled="false"
								 color="#4d4d4d" fontWeight="bold" styleName="textsize1"
								 text="Current Location" verticalCenter="0"/>
						<s:TextInput id="svi2" height="90%" right="10" verticalCenter="0" color="#b2b2b2" styleName="textsize1"
									 visible="false" click="svilabelclick();" left="0" prompt="Enter Postal Code"
									 borderVisible="false" fontWeight="normal"  contentBackgroundAlpha="0"/>
						<s:TextInput id="svi3" height="90%" click="svilabelclick();" right="10" verticalCenter="0"
									 visible="false" left="0" prompt="Enter Address" color="#b2b2b2" styleName="textsize1"
									 borderVisible="false" fontWeight="normal"  contentBackgroundAlpha="0"/>
					</s:Group>
					
				</s:HGroup>
				<s:HGroup id="selectview2"  click="goFilterScreen(1);"   alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseDown="gDown(event)" mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="30" gap="15" verticalAlign="middle">
					<s:Label left="29" mouseEnabled="false"  color="#4d4d4d" 
							 styleName="textsize1" text="Cuisine" verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="115" id="sv2label" mouseEnabled="false"  color="#4d4d4d" fontWeight="bold" styleName="textsize1"
							 text="All" verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
				<s:HGroup id="selectview3"  click="goFilterScreen(2);"  alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseDown="gDown(event)" mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="30" gap="15" verticalAlign="middle">
					<s:Label left="29" mouseEnabled="false"  color="#4d4d4d" styleName="textsize1" text="Rating"
							 verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="107" id="sv3label" width="124" color="#4d4d4d" fontWeight="bold"
							 mouseEnabled="false" styleName="textsize1" text="Highest"
							 verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
				<s:HGroup id="selectview4"  click="goFilterScreen(3);"  alpha="0" height="100%" width="100%"
						  mouseEnabled="false" mouseEnabledWhereTransparent="false"
						  mouseDown="gDown(event)" mouseOver="gOver(event)" mouseOut="gOut(event)" mouseUp="gOut(event)"
						  paddingLeft="30" gap="15" verticalAlign="middle">
					<s:Label left="29" color="#4d4d4d" mouseEnabled="false" styleName="textsize1"
							 text="Price" verticalAlign="middle" verticalCenter="0"/>
					<s:Label left="93" id="sv4label" width="117" color="#4d4d4d" fontWeight="bold" mouseEnabled="false"
							 styleName="textsize1" text="Highest" verticalAlign="middle" verticalCenter="0"/>
				</s:HGroup>
			</s:BorderContainer>
			
			<s:Group width="100%" horizontalCenter="0" height="100%" >
				<s:List id="loyaltyList" width="100%" height="100%"  horizontalScrollPolicy="off"
						alternatingItemColors="[0xFFFFFF,0xFFFFFF ]"  contentBackgroundAlpha="1" 
						contentBackgroundColor="#FFFFFF"
						dataProvider="{listData}" horizontalCenter="0"
						itemRenderer="components.specialsResult" 
						selectedIndex="1">
					<s:layout>
						<s:VerticalLayout horizontalAlign="contentJustify"  variableRowHeight="true"
										  gap="0"/>
					</s:layout>
				</s:List>
				
				<s:BorderContainer id="dropDownContainer" backgroundAlpha="0.8" visible="false" alpha="0"
								   backgroundColor="#FFFFFF" width="100%" height="100%">
					<s:List width="100%" horizontalCenter="0" height="100%"
							contentBackgroundAlpha="0" visible="true"
							id="filterList1"  horizontalScrollPolicy="off" 
							dataProvider="{filterData1}"
							itemRenderer="components.dropdownitem"
							click="filter1Click();" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											  gap="0"/>
						</s:layout>
					</s:List>
					
					<s:List width="100%" horizontalCenter="0" height="100%"
							contentBackgroundAlpha="0" visible="false"
							id="filterList2"  horizontalScrollPolicy="off" 
							dataProvider="{filterData2}"
							itemRenderer="components.dropdownitem"
							click="filter2Click();" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											  gap="0"/>
						</s:layout>
					</s:List>
					
					<s:List width="100%" horizontalCenter="0" height="100%"
							contentBackgroundAlpha="0" visible="false"
							id="filterList3"  horizontalScrollPolicy="off" 
							dataProvider="{filterData3}"
							itemRenderer="components.dropdownitem"
							click="filter3Click();" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											  gap="0"/>
						</s:layout>
					</s:List>
					
					<s:List width="100%" horizontalCenter="0" height="100%"
							contentBackgroundAlpha="0" visible="false"
							id="filterList4"  horizontalScrollPolicy="off" 
							dataProvider="{filterData4}"
							itemRenderer="components.dropdownitem"
							click="filter4Click();" >
						<s:layout>
							<s:VerticalLayout horizontalAlign="contentJustify" 
											  gap="0"/>
						</s:layout>
					</s:List>
				</s:BorderContainer>
				
			</s:Group>
			
		</s:VGroup>
	</s:Scroller>
	<s:Label id="warn" visible="false" width="100%" color="#111111" fontWeight="bold"
			 horizontalCenter="0" styleName="textsize9" text="No Specials Today" textAlign="center"
			 verticalAlign="middle" verticalCenter="0"></s:Label>
	<s:BusyIndicator visible="{busy}" symbolColor="#777777" verticalCenter="0" horizontalCenter="0"/>
</s:View>