<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		menuKeyPressed="navigator.popToFirstView()"
		backKeyPressed="navigator.popToFirstView()"
		xmlns:s="library://ns.adobe.com/flex/spark"
		viewActivate="view1_activateHandler(event)" 
		creationComplete="init(event)"
		title="Reciepts"  backgroundAlpha="1">	
	<s:navigationContent>
		<s:Button label="Back" click="navigator.popView();" fontSize="12"/> 
	</s:navigationContent>
	<s:actionContent>		
	</s:actionContent>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.effects.Fade;
			import mx.effects.effectClasses.FadeInstance;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.rpc.events.ResultEvent;
			import flash.data.SQLConnection;
			import flash.data.SQLStatement;
			import spark.components.supportClasses.StyleableTextField;
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			import spark.events.ViewNavigatorEvent;
			[Bindable]
			public var listData:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var mysearch:String = "";
			[Bindable]
			public var emailGo:String = "";
			protected var sqlConnection:SQLConnection;

			protected function view1_activateHandler(event:Event):void
			{
				navigator.actionBar.height = 40;
				try{
					sqlConnection = new SQLConnection();
					sqlConnection.open(File.applicationStorageDirectory.resolvePath("localuser.db"));
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = sqlConnection;
					stmt.text = "SELECT email, name, country FROM localuser";
					stmt.execute();
					var resData:ArrayCollection = new ArrayCollection(stmt.getResult().data);
					
					if (resData.length != 0){
						//good login
							emailGo = resData[0].email;
							getReciepts.send();	
					}
					else {
						//bad login or no local saved login.
						var stop:String = "";	
					}			
				}
				catch(e:Error){
		
				}	
			}	
			public function init(event:FlexEvent):void
			{			
			}
			public function aftergetReciepts(event:ResultEvent):void
			{
				listData = new ArrayCollection();
				try{
					
					listData = event.result[0].res;
					recieptList.dataProvider = listData;
				}
				catch(e:Error){
					try{
						listData.addItem(event.result[0].res);
						recieptList.dataProvider = listData;
					}
					catch(e:Error){
						
					}
				}
			} 
			public function aftersearchReciepts(event:ResultEvent):void
			{
				var stop:String = "";
				listData = new ArrayCollection();
				try{
					listData = event.result[0].res.re;
					recieptList.dataProvider = listData;
				}
				catch(e:Error){
					try{
						listData.addItem(event.result[0].res.re);
						recieptList.dataProvider = listData;
					}
					catch(e:Error){
						//todo coming soon
					}
				}
			}
			public function recieptListChange(ev:IndexChangeEvent):void {
				var stop:String = "";
				if (ev.newIndex != -1){

					navigator.pushView(recieptDescription, {
						id:ev.currentTarget.selectedItems[0].id,
						email:ev.currentTarget.selectedItems[0].email,
						merchid:ev.currentTarget.selectedItems[0].merchid,
						locationid:ev.currentTarget.selectedItems[0].locationid,
						day:ev.currentTarget.selectedItems[0].day,
						month:ev.currentTarget.selectedItems[0].month,
						year:ev.currentTarget.selectedItems[0].year,
						time:ev.currentTarget.selectedItems[0].time,
						price:ev.currentTarget.selectedItems[0].price,
						tip:ev.currentTarget.selectedItems[0].tip,
						total:ev.currentTarget.selectedItems[0].total,
						type:ev.currentTarget.selectedItems[0].type,
						locationname:ev.currentTarget.selectedItems[0].locationname
					});					
				}	
			}
			protected function list_mouseUpHandler(event:MouseEvent):void
			{
				try{
					trace(recieptList.scroller.verticalScrollBar.value);
					if(recieptList.scroller.verticalScrollBar.value < -90){
						loadingGroup.visible = false;
						//	listData.addItemAt({text:"loading..."},0);
						getReciepts.send();	
					} 
				}
				catch(e:Error){	
				}
			}
			protected function list_mouseMoveHandler(event:MouseEvent):void
			{ 
				try{
					var vScroll:Number = recieptList.scroller.verticalScrollBar.value;
					if(vScroll < -20){
						trace(vScroll);
						if(!loadingGroup.visible){
							loadingGroup.visible = true;
							fadeIn.play();
						}
						loadingGroup.y = vScroll*-1 - 60;
						
						if(vScroll < -90){
							trace(arrowImage.rotation); 
							if(arrowImage.rotation == 0)  {
								arrowImage.rotation = 180;
							}
							loadText.text = "Release to refesh...";
							
						}else{
							if(arrowImage.rotation == 180)  {
								arrowImage.rotation = 0;
							}
							loadText.text = "Pull down to refresh";
						}
						
					}else{
						loadingGroup.visible = false;
					}
				}
				catch(e:Error){
					
				}
			}
			public function searchClick():void
			{	
				//mysearch = key.text;
				searchReciepts.send();
			}
			public function tOver(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","underline");
			}
			public function tOut(ev:MouseEvent):void {
				ev.currentTarget.setStyle("textDecoration","none");
			}
			public function press(event:KeyboardEvent):void {
				if ((event.keyCode == 13)||(event.charCode == 13)){
					//searchClick();
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>		
		<s:HTTPService id="getReciepts" method="POST" resultFormat="array"
					   url="http://simplipay.ca/php/transaction/getTransactionsMobile.php" result="aftergetReciepts(event)" >
			<s:request xmlns="">
				<email>{emailGo}</email>
			</s:request>
		</s:HTTPService>
		<s:HTTPService id="searchReciepts" method="POST" resultFormat="array"
					   url="http://simplipay.ca/php/transaction/searchTransactionsMobile.php" result="aftersearchReciepts(event)" >
			<s:request xmlns="">
				<email>{emailGo}</email>
				<mysearch>{mysearch}</mysearch>
			</s:request>
		</s:HTTPService>
		<s:Fade id='fadeIn' target="{loadingGroup}" duration="500" alphaFrom="0" alphaTo="1"/>
	</fx:Declarations>
	<!--s:BorderContainer x="0" y="0" height="30" backgroundAlpha="1" backgroundColor="#0977b6" width="100%">
		<s:HGroup width="100%" height="100%">
			<s:TextInput id="key" width="100%" prompt="Search Reciepts" returnKeyLabel="search" 
						 enter="searchClick();" keyDown="press(event);"
						 skinClass="skins.searchInput" height="27" />
		</s:HGroup>	
	</s:BorderContainer-->
	<s:BorderContainer width="100%" x="0" y="0" height="100%" visible="true" id="listCont"
					   backgroundColor="#FFFFFF" backgroundAlpha="1"  borderAlpha="0" >
		<s:BorderContainer  backgroundColor="#FFFFFF" backgroundAlpha="1" borderAlpha="0" width="100%"  >
			<s:List width="100%" height="100%" contentBackgroundAlpha="1" contentBackgroundColor="#FFFFFF"   id="recieptList" labelField="name"  
					dataProvider="{listData}" itemRenderer="components.recieptResult"
					selectedIndex="1" change="recieptListChange(event);"
					mouseMove="list_mouseMoveHandler(event)" mouseUp="list_mouseUpHandler(event)" >
				
			</s:List>
			<s:HGroup horizontalAlign="center" verticalAlign="middle" width="100%" id="loadingGroup" visible="false" height="50">
				<s:Image id="arrowImage"  source="@Embed('assets/Arrow-double-up-48.png')"/>
				<s:Label text="Pull down to refresh"  id="loadText"/>
			</s:HGroup>
		</s:BorderContainer>
	</s:BorderContainer>		
</s:View>